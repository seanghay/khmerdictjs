{
  "version": 3,
  "sources": [
    "web/src/app/ui/kmwuitoggle.ts"
  ],
  "sourceRoot": "@keymanapp/keyman/",
  "sourcesContent": [
    "/***\r\n   KeymanWeb 17.0\r\n   Copyright 2019-2023 SIL International\r\n***/\r\n\r\nimport type { KeymanEngine, KeyboardCookie, UIModule } from 'keyman/app/browser';\r\nimport type { FloatingOSKViewCookie } from 'keyman/engine/osk';\r\n\r\ndeclare var keyman: KeymanEngine\r\n\r\ntype KeyboardMenuEntry = {\r\n  _InternalName: string,\r\n  _LanguageCode: string,\r\n  _Index: number;\r\n}\r\n\r\n// If a UI module has been loaded, we can rely on the publically-published 'name' property\r\n// having been set as a way to short-out a UI reload.  Its parent object always exists by\r\n// this point in the build process.\r\nif(!keyman?.ui?.name) {\r\n  /********************************/\r\n  /*                              */\r\n  /* Toggle User Interface Code   */\r\n  /*                              */\r\n  /********************************/\r\n\r\n  /**\r\n   * Do not enclose in an anonymous function, as the compiler may create\r\n   * global scope variables to replace true, false, null, which may collide\r\n   * with other variables.\r\n   * Instead, use the --output-wrapper command during optimization, which will\r\n   * add the anonymous function to enclose all code, including those optimized\r\n   * variables which would otherwise have global scope.\r\n   **/\r\n\r\n  try {\r\n    // Declare KeymanWeb, OnScreen Keyboard and Util objects\r\n    const keymanweb = keyman;\r\n    //var dbg=keymanweb['debug'];\r\n    const util = keymanweb.util;\r\n\r\n    // Disable UI for touch devices\r\n    if(util.isTouchDevice()) {\r\n      throw '';\r\n    }\r\n\r\n    class ToggleUI implements UIModule {\r\n      // Initialize user interface common variables\r\n      readonly name = 'toggle';\r\n      initialized = false;\r\n\r\n      /**\r\n       * The top-level element of the Toggle UI module.\r\n       */\r\n      controller: HTMLDivElement = null;\r\n      oskButton: ReturnType<ToggleUI['button']> = null;  // inner class - Button, as defined within the .button method\r\n      kbdButton: ReturnType<ToggleUI['button']> = null;  // likewise.\r\n      controllerHovered = false;\r\n\r\n      keyboards: KeyboardMenuEntry[] = [];\r\n      /**\r\n       * The index of the previously-active keyboard in this UI module's language list.\r\n       */\r\n      lastActiveKeyboard = -1;\r\n\r\n      selectedMenuItem: HTMLAnchorElement = null;\r\n      updateList = true;\r\n\r\n      /**\r\n       * The numeric handle for an active window.setTimeout call.\r\n       */\r\n      updateTimer: number = null;\r\n\r\n      keyboardMenu: HTMLUListElement;\r\n\r\n      /**\r\n       * Update the KeymanWeb user interface when an input element is focused or blurred\r\n       *\r\n       * @param       {Object}            someElement     focused element\r\n       * @param       {(boolean|number)}  focusing        true if focusing\r\n       * @param       {Object}            activeControl   Object representing API specs for the control, if it exists and is now focused.\r\n       */\r\n      doFocus(someElement: HTMLElement, focusing: boolean | number, activeControl) {\r\n        // This callback must be ignored until UI is initialized, or for touch devices (which can never initialize the UI)\r\n        if(!this.initialized) {\r\n          return;\r\n        }\r\n\r\n        // We don't want to shift the controller to something that's not an input element,\r\n        // but do want to account for window.event's data when legitimate.\r\n        if(window.event && keymanweb.isAttached(window.event.srcElement as HTMLElement)) {\r\n          someElement=window.event.srcElement as HTMLElement;\r\n        }\r\n\r\n        if(focusing) {\r\n          this.controller.style.display = 'block';\r\n        } else {\r\n          if(!(keymanweb.getUIState().activationPending) && !this.controllerHovered) {\r\n            this.controller.style.display = 'none';\r\n          }\r\n        }\r\n\r\n        /* I2406 - Find an appropriate position for the controller */\r\n        let w: number, h: number;\r\n\r\n        const p = util.getAbsolute(someElement);\r\n        let x = p.x;\r\n        let y = p.y;\r\n\r\n        var ownerDoc = someElement.ownerDocument;\r\n        if(ownerDoc.designMode == 'on' && ownerDoc.defaultView && ownerDoc.defaultView.frameElement) {\r\n          w = ownerDoc.defaultView.frameElement.clientWidth;\r\n          h = ownerDoc.defaultView.frameElement.clientHeight;\r\n        } else {\r\n          w = someElement.offsetWidth;\r\n          h = someElement.offsetHeight;\r\n        }\r\n\r\n        if(x + w > window.innerWidth + document.documentElement.scrollLeft - this.controller.offsetWidth - 1) {\r\n          y += h;\r\n        } else {\r\n          x += w + 2;\r\n          //y += h - ui.controller.offsetHeight - 1; // ui.controller.offsetheight is returned as its prior value, which results in incorrect UI positioning\r\n          // so better to set the offset absolutely JMD 11/2/11\r\n          y += h - 29; //prevent UI being positioned *above* the top of the element\r\n        }\r\n\r\n        if(isNaN(x) || isNaN(y)) {\r\n          return;\r\n        }\r\n\r\n        this.controller.style.left = x + 'px';\r\n        this.controller.style.top = y + 'px';\r\n      }\r\n\r\n      registerEvents() {\r\n        let osk = keymanweb.osk;\r\n\r\n        if(!osk) {\r\n          return;\r\n        }\r\n\r\n        osk.addEventListener('show', (oskPosition) => {\r\n            // Ensure that the ui.controller is visible if help is displayed\r\n            this.controller.style.display = 'block';\r\n            this.oskButton._setSelected(true);\r\n\r\n            return oskPosition;\r\n          });\r\n\r\n        osk.addEventListener('hide', (byUser) => {\r\n          if(byUser['HiddenByUser']) {\r\n            this.oskButton._setSelected(false);\r\n          }\r\n        });\r\n      };\r\n\r\n      /**\r\n       * Toggle the on screen keyboard display - KMW button control event\r\n       **/\r\n      readonly switchOsk = () => {\r\n        // Check that user control of OSK is allowed\r\n        if((keymanweb.getActiveKeyboard() == '') || keymanweb.isCJK()) {\r\n          return;\r\n        }\r\n\r\n        if(keymanweb.osk) {\r\n          const newState = !keymanweb.osk.isEnabled();\r\n          keymanweb.osk.show(newState);\r\n\r\n          // Also, indicate that the OSK is intentionally hidden.\r\n          this.oskButton._setSelected(newState);\r\n        }\r\n      }\r\n\r\n      /**\r\n       * Toggle a single keyboard on or off - KMW button control event\r\n       **/\r\n      readonly switchSingleKbd = () => {\r\n        const _v = keymanweb.getActiveKeyboard() == '';\r\n        let nLastKbd=0, kbdName='', lgCode='';\r\n\r\n        if(_v) {\r\n          if(this.keyboards.length == 0) {\r\n            return;\r\n          }\r\n\r\n          if(this.lastActiveKeyboard < this.keyboards.length && this.lastActiveKeyboard >= 0) {\r\n            nLastKbd = this.lastActiveKeyboard;\r\n          }\r\n\r\n          kbdName = this.keyboards[nLastKbd]._InternalName;\r\n          lgCode = this.keyboards[nLastKbd]._LanguageCode;\r\n          keymanweb.setActiveKeyboard(kbdName,lgCode);\r\n          this.lastActiveKeyboard = nLastKbd;\r\n        } else {\r\n          keymanweb.setActiveKeyboard('');\r\n        }\r\n\r\n        if(this.kbdButton) {\r\n          this.kbdButton._setSelected(_v);\r\n        }\r\n      }\r\n\r\n      /**\r\n       * Switch to the next keyboard in the list - KMW button control event\r\n       **/\r\n      readonly switchNextKbd = () => {\r\n        let _v = (keymanweb.getActiveKeyboard() == '');\r\n        let kbdName='', lgCode='';\r\n\r\n        if(_v) {\r\n          if(this.keyboards.length == 0) {\r\n            return;\r\n          }\r\n\r\n          kbdName = this.keyboards[0]._InternalName;\r\n          lgCode = this.keyboards[0]._LanguageCode;\r\n          keymanweb.setActiveKeyboard(kbdName,lgCode);\r\n          this.lastActiveKeyboard = 0;\r\n        } else {\r\n          if(this.lastActiveKeyboard == this.keyboards.length-1) {\r\n            keymanweb.setActiveKeyboard('');\r\n            _v = false;\r\n          } else {\r\n            kbdName = this.keyboards[++this.lastActiveKeyboard]._InternalName;\r\n            lgCode = this.keyboards[this.lastActiveKeyboard]._LanguageCode;\r\n            keymanweb.setActiveKeyboard(kbdName,lgCode);\r\n            _v = true;\r\n          }\r\n        }\r\n\r\n        if(this.kbdButton) {\r\n          this.kbdButton._setSelected(_v);\r\n        }\r\n      }\r\n\r\n      /**\r\n       * Create a button object for KeymanWeb UI buttons\r\n       *\r\n       * @constructor\r\n       * @param       {string}    _src         Image source\r\n       * @param       {string}    _caption     Alt text\r\n       * @param       {boolean}   _selected\r\n       * @return      {Object}\r\n       *\r\n       * @suppress {suspiciousCode}  // Closure isn't smart enough to realize that _onmouseover\r\n       *                             // and the like are defined on individual instances later.\r\n       *                             // It thinks they're always null.\r\n       **/\r\n      button(_src: string, _caption: string, _selected: boolean) {\r\n        /**\r\n         * Only ui.controllerHovered is referenced here:  it'd be easy enough to toggle it via closure\r\n         * and extract this inner class into its own definition outside of `class ToggleUI`.\r\n         *\r\n         * This would also give the main class type inference for its related fields and their\r\n         * uses.\r\n         */\r\n        const ui = this;\r\n\r\n        class Button {\r\n          // Button event-state management fields\r\n          _onclick = null;\r\n          _onmouseover = null;\r\n          _onmouseout = null;\r\n          _down = false;\r\n          _over = false;\r\n          _selected: boolean;\r\n\r\n          /**\r\n           * The top-level element of the button.\r\n           */\r\n          _elem: HTMLDivElement;\r\n\r\n          getElem() {\r\n            return this._elem;\r\n          };\r\n\r\n          private __updatestyle() {\r\n            var ss=this._elem.style;\r\n            if(this._over) {\r\n              ss.margin = '0px';\r\n              if(this._selected) {\r\n                ss.border = 'solid 1px #ad4a28';\r\n                ss.background = '#dfb4b4';\r\n              }\r\n              else {\r\n                ss.border = 'solid 1px #dfb4b4';\r\n                ss.background = '#f3e5de';\r\n              }\r\n            } else if(this._selected) {\r\n              ss.background = '#f3e5de';\r\n              ss.margin = '0px';\r\n              ss.border = 'solid 1px #ad4a28';\r\n            } else {\r\n              ss.background = 'none';\r\n              ss.margin = '1px';\r\n              ss.border = 'none';\r\n            }\r\n          };\r\n\r\n          private __mouseover = () => {\r\n            ui.controllerHovered = true;\r\n            this._over = true;\r\n            if(this._onmouseover != null) {\r\n              this._onmouseover();\r\n            }\r\n            this.__updatestyle();\r\n          };\r\n\r\n          private __mouseout = () => {\r\n            ui.controllerHovered = false;\r\n            this._over = false;\r\n            if(this._onmouseout != null) {\r\n              this._onmouseout();\r\n            }\r\n            this.__updatestyle();\r\n          };\r\n\r\n          private __click = () => {\r\n            keymanweb.activatingUI(false); // Clear activating UI flag once click is acknowledged\r\n            if(this._onclick != null) {\r\n                return this._onclick();\r\n            }\r\n            return false;\r\n          };\r\n\r\n          private __mousedown = () => {\r\n            keymanweb.activatingUI(true);  // Set activating UI flag (to manage focus/blur) on any UI mouse down event\r\n            this._down = true;\r\n            this.__updatestyle();\r\n            return false;\r\n          };\r\n\r\n          private __mouseup = () => {\r\n            this._down = false;\r\n            this.__updatestyle();\r\n          };\r\n\r\n\r\n          _setSelected(_value) {\r\n            keymanweb.activatingUI(false); // Always clear activating UI flag after selecting UI\r\n            this._selected = _value;\r\n            this.__updatestyle();\r\n          };\r\n\r\n          _getSelected() {\r\n            return this._selected;\r\n          };\r\n\r\n          _getOver() {\r\n            return this._over;\r\n          };\r\n\r\n          _getDown() {\r\n            return this._down;\r\n          };\r\n\r\n          constructor(/* TODO: put wrapping method's params HERE instead upon class-extraction */) {\r\n            this._selected = _selected;\r\n\r\n            let imgPath=util.getOption('resources') + 'ui/toggle/';\r\n            let _elemImg = util.createElement('img');\r\n            this._elem = util.createElement('div');\r\n            this._elem['_owningObject'] = this;\r\n            _elemImg.style.display = 'block';\r\n            _elemImg.src = imgPath + _src;\r\n            _elemImg.id = 'KMW_Controller_Img';\r\n            this._elem.style.margin = '0px'; //display = 'inline';\r\n            this._elem.style.width = '24px';\r\n            this._elem.style.height = '24px';\r\n            this._elem.style.zIndex = '10002';\r\n            this._elem.style.lineHeight = '100%';\r\n            this._elem.style['styleFloat'] = this._elem.style.cssFloat = 'left';\r\n\r\n            _elemImg.title = _caption;\r\n            _elemImg.alt = _caption;\r\n            this._elem.appendChild(_elemImg);\r\n            this._elem.onmouseover = this.__mouseover;\r\n            this._elem.onmouseout = this.__mouseout;\r\n            this._elem.onmousedown = this.__mousedown;\r\n            this._elem.onmouseup = this.__mouseup;\r\n            _elemImg['_owningObject'] = this;\r\n            _elemImg.onclick = this.__click;\r\n\r\n            this.__updatestyle();\r\n          }\r\n        }\r\n\r\n        return new Button();\r\n      };\r\n\r\n      /**\r\n       * Function     Initialize\r\n       * Scope        Private\r\n       * Description  Initialize Toggle User Interface\r\n       **/\r\n      initialize() {\r\n        //Never initialize before KMW!\r\n        if(!keymanweb.initialized || util.isTouchDevice()) {\r\n          return;\r\n        }\r\n\r\n        if(!this.initialized) { // I2403 - Allow toggle design to be loaded twice\r\n          this.controller = util.createElement('div');\r\n        } else {\r\n          this.controller.innerHTML = '';  // I2403 - Allow toggle design to be loaded twice\r\n        }\r\n\r\n        const imgPath = util.getOption('resources')+'ui/toggle/';\r\n        this.controller.style.background = 'url('+imgPath+'kmwcontroller2x.gif)';\r\n        this.controller.style.padding = '1px 2px';\r\n\r\n        // Create keyboard list and OSK control buttones, and set initial styles\r\n        const v1=util.loadCookie<KeyboardCookie>('KeymanWeb_Keyboard');\r\n        let kbdEnabledOnLoad=false;\r\n        if(typeof(v1.current) != 'undefined') {\r\n          kbdEnabledOnLoad = (v1.current.indexOf('---') < 0);\r\n        }\r\n\r\n        this.kbdButton = this.button('kmw_logo_16.gif', 'Use Web Keyboard', kbdEnabledOnLoad);\r\n        this.controller.appendChild(this.kbdButton.getElem());\r\n\r\n        const v2 = util.loadCookie<Required<FloatingOSKViewCookie>>('KeymanWeb_OnScreenKeyboard');\r\n        let oskEnabledOnLoad=true;\r\n        if(typeof(v2.visible) != 'undefined') {\r\n          oskEnabledOnLoad=(v2.visible == 1);\r\n        }\r\n\r\n        // Add keyboard icon\r\n        this.oskButton = this.button('kmw_osk_16.gif','Show On Screen Keyboard',oskEnabledOnLoad);\r\n        this.oskButton._onclick = this.switchOsk;\r\n        this.controller.appendChild(this.oskButton.getElem());\r\n\r\n        // Hide controller unless already initialized\r\n        if(!this.initialized) {\r\n          this.controller.style.display = 'none';\r\n        }\r\n        this.controller.style.zIndex = '10001';\r\n        this.controller.style.position = 'absolute';\r\n\r\n        // The following three lines prevent the UI from being positioned incorrectly when the page is resized,\r\n        // but don't fix the problem completely, as the kbd icon still moves.  probably need to insert a DIV\r\n        // between the button and the container, and make that DIV fixed height and overflow:hidden\r\n        //ui.controller.style.maxHeight = '26px';\r\n        //ui.oskButton.getElem().style.position = 'relative';\r\n        //ui.oskButton.getElem().style.overflow = 'hidden';\r\n\r\n        if(!this.initialized) { // I2403 - Allow toggle design to be loaded more than once if necessary\r\n          document.body.appendChild(this.controller);\r\n        }\r\n\r\n        // Set initialized true\r\n        this.initialized = true;  // I2403 - Allow toggle design to be loaded more than once if needed\r\n\r\n        // Then update the keyboard list if keyboards already loaded (i.e. in page script)\r\n        this.updateKeyboardList();\r\n        this.registerEvents();\r\n\r\n        // Future improvement:  have the UI modules track their own stylesheets as part of their\r\n        // element hierarchy.  engine/dom-utils has a spun-off StylesheetManager class that's\r\n        // perfect for this.\r\n        util.addStyleSheet(this.stylingCSS);\r\n      }\r\n\r\n      shutdown() {\r\n        var root = this.controller;\r\n\r\n        if(root) {\r\n          root.parentNode.removeChild(root);\r\n        }\r\n      }\r\n\r\n      /**\r\n       * Function     updateKeyboardList\r\n       * Scope        Private\r\n       * Description  Rebuild the UI and keyboard list\r\n       **/\r\n      readonly updateKeyboardList = () => {\r\n        if(!(keymanweb.initialized || this.initialized)) {\r\n          return; //TODO: may want to restart the timer??\r\n        }\r\n\r\n        this.updateList = false;\r\n\r\n        const _kbds=keymanweb.getKeyboards();\r\n        const imgPath=util.getOption('resources') +'ui/toggle/';\r\n\r\n        // Check the number of installed keyboards to determine whether or not we will have a dropdown\r\n        if(_kbds.length > 1) {\r\n          // Multiple keyboards (button)\r\n          const _kmw_ctrl_img=<HTMLImageElement> document.getElementById('KMW_Controller_Img');\r\n          _kmw_ctrl_img.src = imgPath+'kmw_logo_16_down.gif';\r\n          _kmw_ctrl_img.style.width = '100%';\r\n\r\n          this.controller.style.background = 'url('+imgPath+'kmwcontroller2x.gif)';\r\n\r\n          this.kbdButton.getElem().id = 'kmwico';\r\n          this.kbdButton.getElem().style.width = '36px';\r\n          this.kbdButton._onmouseover = () => {\r\n            this.keyboardMenu.className=\"sfhover\";\r\n          };\r\n          this.kbdButton._onmouseout = () => {\r\n              this.keyboardMenu.className=\"sfunhover\";\r\n          };\r\n          this.kbdButton._onclick = null;\r\n          this.createMenu();\r\n        }  else if(_kbds.length == 1) {\r\n          // Single keyboard (button)\r\n          const _kmw_ctrl_img=<HTMLImageElement> document.getElementById('KMW_Controller_Img')\r\n          _kmw_ctrl_img.src = imgPath+'kmw_logo_16.gif';\r\n\r\n          this.kbdButton.getElem().id = 'kmwico';\r\n          this.kbdButton.getElem().style.width = '24px';\r\n\r\n          var Lki=_kbds[0].InternalName;\r\n          var Lklc=_kbds[0].LanguageCode;\r\n          this.controller.style.background = 'url('+imgPath+'kmwcontroller2.gif)';\r\n          this.keyboards.push({_InternalName: Lki, _LanguageCode: Lklc, _Index: 0});\r\n          this.kbdButton._onclick = this.switchSingleKbd;\r\n          this.kbdButton._onmouseover = function() { };\r\n          this.kbdButton._onmouseout = function() { };\r\n\r\n          // We must reconstruct the ui.keyboards array, and this done by ui.createMenu.\r\n          this.createMenu();\r\n\r\n          // Must remove menu if keyboards have been removed leaving only a single keyboard\r\n          if(typeof(this.keyboardMenu) != 'undefined') {\r\n            delete this.keyboardMenu;\r\n          }\r\n        }\r\n\r\n        // Highlight the last active keyboard\r\n        var sk=keymanweb.getSavedKeyboard().split(':');\r\n        this.updateMenu(sk[0],sk[1]);\r\n      }\r\n\r\n      /* ----------------------------------------\r\n        Drop down menu\r\n        ---------------------------------------- */\r\n\r\n      //  var  _SelectedMenuItem;\r\n\r\n      /**\r\n       * Function     selecKbd\r\n       * Scope        Private\r\n       * @param       {number}  _kbd\r\n       * Description  Select a keyboard from the drop down menu\r\n       **/\r\n      selectKbd(_kbd: number) {\r\n        let _name,_lgCode,_index;\r\n        if(_kbd < 0) {\r\n          _name = '';\r\n          _lgCode='';\r\n          _index = '';\r\n        } else {\r\n          _name = this.keyboards[_kbd]._InternalName;\r\n          _lgCode = this.keyboards[_kbd]._LanguageCode;\r\n          _index = this.keyboards[_kbd]._Index;\r\n        }\r\n\r\n        keymanweb.setActiveKeyboard(_name,_lgCode);\r\n        keymanweb.focusLastActiveElement();\r\n        this.kbdButton._setSelected(_name != '');\r\n        if(_kbd >= 0) {\r\n          this.lastActiveKeyboard = _kbd;\r\n        }\r\n\r\n        return false;\r\n      };\r\n\r\n      /**\r\n       * Function     updateMenu\r\n       * Scope        Private\r\n       * @param       {string}    kbdName\r\n       * @param       {?string=}  lgCode\r\n       * Description  Updates the menu selection when a change is required\r\n       **/\r\n      updateMenu(kbdName: string, lgCode: string) {\r\n        let _k=document.getElementById('KMWSel_$');\r\n\r\n        for(let i=0; i < this.keyboards.length; i++) {\r\n          if(this.keyboards[i]._InternalName == kbdName && this.keyboards[i]._LanguageCode == lgCode) {\r\n            _k=document.getElementById('KMWSel_' + this.keyboards[i]._InternalName+'$' + this.keyboards[i]._Index);\r\n          }\r\n        }\r\n\r\n        if(_k) {\r\n          if(this.selectedMenuItem != null) {\r\n            this.selectedMenuItem.className='';\r\n          }\r\n          _k.className='selected';\r\n          // The keyboard's entry in the keyboard-list drop-down is an <a> element.\r\n          this.selectedMenuItem=_k as HTMLAnchorElement;\r\n        }\r\n\r\n        // Occurs for desktop form-factors when no keyboard (aka the sys default) is active.\r\n        if(!this.oskButton) {\r\n          return;\r\n        }\r\n\r\n        // Hide the OSK button for CJK keyboards (or non-mapped)\r\n        if(lgCode=='cmn' || lgCode=='jpn' || lgCode=='kor') {\r\n          this.oskButton.getElem().style.display='none';\r\n          //osk['show'](true);\r\n        } else if(kbdName == '') {\r\n          this.oskButton.getElem().style.display='none';\r\n        } else {\r\n          this.oskButton.getElem().style.display='block';\r\n          //osk['show'](osk['isEnabled']());\r\n        }\r\n      }\r\n\r\n      get stylingCSS() {\r\n        return `\r\n#KeymanWeb_KbdList {\r\n  display: block;\r\n  position: absolute;\r\n  width: auto;\r\n  line-height: 100%;\r\n  margin: 0;\r\n  clear: both;\r\n  float: none;\r\n  top: auto;\r\n  border: solid 2px #ad4a28;\r\n  -moz-border-radius: 4px;\r\n  -webkit-border-radius: 4px;\r\n  border-radius: 4px;\r\n  box-shadow: 4px 4px 2px rgba(136,136,136,.5);\r\n  -webkit-box-shadow: 4px 4px 2px rgba(136,136,136,.5);\r\n  -moz-box-shadow: 4px 4px 2px rgba(136,136,136,.5);\r\n  list-style: none;\r\n  padding: 0;\r\n  background: white;\r\n  max-height: 300px;\r\n  overflow-y: scroll;\r\n  overflow-x: hidden;\r\n  white-space: nowrap;\r\n  z-index: 10001; /* above the osk */\r\n}\r\n\r\n.sfunhover#KeymanWeb_KbdList {\r\n  display: none; left: -999px;\r\n}\r\n\r\n.sfhover#KeymanWeb_KbdList {\r\n  display: block;\r\n  left: auto;\r\n}\r\n\r\n#KeymanWeb_KbdList li {\r\n  float: none;\r\n  width: auto;\r\n  padding: 0;\r\n  margin: 0;\r\n  text-align: left;\r\n}\r\n\r\n#KeymanWeb_KbdList li a {\r\n  display: block;\r\n  padding: 2px 4px;\r\n  color: #404040;\r\n  font-family: Tahoma,Verdana,Arial,sans-serif;\r\n  font-size: 8pt;\r\n  text-decoration: none;\r\n}\r\n\r\n#KeymanWeb_KbdList li a.selected {\r\n  font-weight: bold;\r\n  color: black;\r\n}\r\n\r\n#KeymanWeb_KbdList li a:hover {\r\n  color: white;\r\n  background-color: #ad4a28;\r\n  text-decoration: underline;\r\n}\r\n`;\r\n      }\r\n\r\n      /**\r\n       * Function     createMenu\r\n       * Scope        Private\r\n       * Description  Create the drop down menu and populate with loaded KeymanWeb keyboards\r\n       **/\r\n      createMenu() {\r\n        if(typeof(this.keyboardMenu) == 'undefined') { // I2403 - Allow toggle design to be loaded twice\r\n          this.keyboardMenu = util.createElement('ul');\r\n          this.keyboardMenu.id='KeymanWeb_KbdList';\r\n          this.keyboardMenu.className='sfunhover';\r\n        } else {\r\n          this.keyboardMenu.innerHTML = '';  // I2403 - Allow toggle design to be loaded twice\r\n        }\r\n\r\n        var _li = util.createElement('li');\r\n        var _a = util.createElement('a');\r\n        _a.innerHTML='(System keyboard)';\r\n        _a.href=\"#\";\r\n        _a.onclick = () => {\r\n          return this.selectKbd(-1);\r\n        };\r\n        _a.id='KMWSel_$';\r\n        _a.className='selected';\r\n        _li.appendChild(_a);\r\n\r\n        this.selectedMenuItem=_a;\r\n        this.keyboardMenu.appendChild(_li);\r\n\r\n        const _kbds=keymanweb.getKeyboards(), _added=[];\r\n        this.keyboards = [];\r\n        for(var _kbd = 0; _kbd < _kbds.length; _kbd++) {\r\n          var _li1=util.createElement('li');\r\n          var _a1=util.createElement('a');\r\n          _a1.innerHTML=_kbds[_kbd].LanguageName + ' - ' + _kbds[_kbd].Name;\r\n          if(!_added[_kbds[_kbd].InternalName]) _added[_kbds[_kbd].InternalName]=0;\r\n          _added[_kbds[_kbd].InternalName]++;\r\n\r\n          var _n=_added[_kbds[_kbd].InternalName];\r\n          this.keyboards.push({_InternalName: _kbds[_kbd].InternalName, _LanguageCode:_kbds[_kbd].LanguageCode, _Index: _n});\r\n\r\n          _a1.href=\"#\";\r\n          _a1.onclick = ((x) => { return () => this.selectKbd(x); })(this.keyboards.length-1);\r\n          _a1.id='KMWSel_'+_kbds[_kbd].InternalName+'$'+_n;\r\n\r\n          _li1.appendChild(_a1);\r\n          this.keyboardMenu.appendChild(_li1);\r\n        }\r\n\r\n        //if(!ui.initialized) // I2403 - Allow toggle design to be loaded twice\r\n        if(this.keyboardMenu.parentNode != this.kbdButton.getElem()) {\r\n          this.kbdButton.getElem().appendChild(this.keyboardMenu);\r\n        }\r\n      };\r\n\r\n    }\r\n\r\n\r\n    // Actually assign our UI module to the active Keyman engine.\r\n    const ui = keymanweb.ui = new ToggleUI();\r\n\r\n    // CTRL-K_SLASH:  toggles to and from default keyboard\r\n    keymanweb.addHotKey(191, 0x20, ui.switchSingleKbd);\r\n\r\n    // SHIFT-CTRL-K_SLASH:  cycles among available keyboards in sequence\r\n    keymanweb.addHotKey(191, 0x30, ui.switchNextKbd);\r\n\r\n    // ALT-K_SLASH:  Hides the OSK\r\n    keymanweb.addHotKey(191, 0x40, ui.switchOsk);\r\n\r\n    // // Initialize after KMW is fully initialized\r\n    // keymanweb['addEventListener']('loaduserinterface', ui.initialize);\r\n\r\n    keymanweb.addEventListener('controlfocused',function(params){\r\n      ui.doFocus(params.target, true, params.activeControl);\r\n    });\r\n\r\n    keymanweb.addEventListener('controlblurred',function(params){\r\n      ui.doFocus(params.target, false, null);\r\n    });\r\n\r\n    /**\r\n     * Keyboard registration event handler\r\n     *\r\n     * Set a timer to update the UI keyboard list on timeout after each keyboard is registered,\r\n     * thus updating only once when only if multiple keyboards are registered together\r\n     */\r\n    keymanweb.addEventListener('keyboardregistered', function(p) {\r\n      ui.updateList = true;\r\n      if(ui.updateTimer) {\r\n        clearTimeout(ui.updateTimer);\r\n      }\r\n      ui.updateTimer = window.setTimeout(ui.updateKeyboardList, 200);\r\n    });\r\n\r\n\r\n    /**\r\n     * Keyboard change event handler\r\n     *\r\n     * Update menu selection and control OSK display appropriately\r\n     */\r\n    keymanweb.addEventListener('keyboardchange', function(p) {\r\n      ui.updateMenu(p.internalName, p.languageCode);\r\n    });\r\n\r\n    // but also execute here, for asynchronous UI script loading (occurring after KMW initialization)\r\n    ui.initialize();\r\n\r\n  } catch(ex){}\r\n}"
  ],
  "mappings": "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",
  "names": [
    "ToggleUI",
    "Button"
  ]
}