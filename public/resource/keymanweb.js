(function() {
  var __create = Object.create;
  var __defProp = Object.defineProperty;
  var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
  var __getOwnPropNames = Object.getOwnPropertyNames;
  var __getProtoOf = Object.getPrototypeOf;
  var __hasOwnProp = Object.prototype.hasOwnProperty;
  var __commonJS = function(cb, mod) {
    return function __require() {
      return mod || (0, cb[__getOwnPropNames(cb)[0]])((mod = { exports: {} }).exports, mod), mod.exports;
    };
  };
  var __export = function(target, all) {
    for (var name in all)
      __defProp(target, name, { get: all[name], enumerable: true });
  };
  var __copyProps = function(to, from, except, desc) {
    if (from && typeof from === "object" || typeof from === "function")
      for (var keys = __getOwnPropNames(from), i = 0, n = keys.length, key; i < n; i++) {
        key = keys[i];
        if (!__hasOwnProp.call(to, key) && key !== except)
          __defProp(to, key, { get: function(k) {
            return from[k];
          }.bind(null, key), enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
      }
    return to;
  };
  var __reExport = function(target, mod, secondTarget) {
    return __copyProps(target, mod, "default"), secondTarget && __copyProps(secondTarget, mod, "default");
  };
  var __toESM = function(mod, isNodeMode, target) {
    return target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(
      isNodeMode || !mod || !mod.__esModule ? __defProp(target, "default", { value: mod, enumerable: true }) : target,
      mod
    );
  };

  // ../../../../node_modules/tslib/tslib.js
  var require_tslib = __commonJS({
    "../../../../node_modules/tslib/tslib.js": function(exports, module) {
      var __extends48;
      var __assign10;
      var __decorate2;
      var __awaiter8;
      var __generator8;
      var __await;
      (function(factory) {
        var root = typeof global === "object" ? global : typeof self === "object" ? self : typeof this === "object" ? this : {};
        if (typeof define === "function" && define.amd) {
          define("tslib", ["exports"], function(exports2) {
            factory(createExporter(root, createExporter(exports2)));
          });
        } else if (typeof module === "object" && typeof module.exports === "object") {
          factory(createExporter(root, createExporter(module.exports)));
        } else {
          factory(createExporter(root));
        }
        function createExporter(exports2, previous) {
          if (exports2 !== root) {
            if (typeof Object.create === "function") {
              Object.defineProperty(exports2, "__esModule", { value: true });
            } else {
              exports2.__esModule = true;
            }
          }
          return function(id, v) {
            return exports2[id] = previous ? previous(id, v) : v;
          };
        }
      })(function(exporter) {
        var extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d, b) {
          d.__proto__ = b;
        } || function(d, b) {
          for (var p in b)
            if (Object.prototype.hasOwnProperty.call(b, p))
              d[p] = b[p];
        };
        __extends48 = function(d, b) {
          if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
          extendStatics(d, b);
          function __() {
            this.constructor = d;
          }
          d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
        };
        __assign10 = Object.assign || function(t) {
          for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s)
              if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
          }
          return t;
        };
        __decorate2 = function(decorators, target, key, desc) {
          var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
          if (typeof Reflect === "object" && typeof Reflect.decorate === "function")
            r = Reflect.decorate(decorators, target, key, desc);
          else
            for (var i = decorators.length - 1; i >= 0; i--)
              if (d = decorators[i])
                r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
          return c > 3 && r && Object.defineProperty(target, key, r), r;
        };
        __awaiter8 = function(thisArg, _arguments, P, generator) {
          function adopt(value) {
            return value instanceof P ? value : new P(function(resolve) {
              resolve(value);
            });
          }
          return new (P || (P = Promise))(function(resolve, reject) {
            function fulfilled(value) {
              try {
                step(generator.next(value));
              } catch (e) {
                reject(e);
              }
            }
            function rejected(value) {
              try {
                step(generator["throw"](value));
              } catch (e) {
                reject(e);
              }
            }
            function step(result) {
              result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
            }
            step((generator = generator.apply(thisArg, _arguments || [])).next());
          });
        };
        __generator8 = function(thisArg, body) {
          var _ = { label: 0, sent: function() {
            if (t[0] & 1)
              throw t[1];
            return t[1];
          }, trys: [], ops: [] }, f, y, t, g;
          return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() {
            return this;
          }), g;
          function verb(n) {
            return function(v) {
              return step([n, v]);
            };
          }
          function step(op) {
            if (f)
              throw new TypeError("Generator is already executing.");
            while (g && (g = 0, op[0] && (_ = 0)), _)
              try {
                if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done)
                  return t;
                if (y = 0, t)
                  op = [op[0] & 2, t.value];
                switch (op[0]) {
                  case 0:
                  case 1:
                    t = op;
                    break;
                  case 4:
                    _.label++;
                    return { value: op[1], done: false };
                  case 5:
                    _.label++;
                    y = op[1];
                    op = [0];
                    continue;
                  case 7:
                    op = _.ops.pop();
                    _.trys.pop();
                    continue;
                  default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {
                      _ = 0;
                      continue;
                    }
                    if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {
                      _.label = op[1];
                      break;
                    }
                    if (op[0] === 6 && _.label < t[1]) {
                      _.label = t[1];
                      t = op;
                      break;
                    }
                    if (t && _.label < t[2]) {
                      _.label = t[2];
                      _.ops.push(op);
                      break;
                    }
                    if (t[2])
                      _.ops.pop();
                    _.trys.pop();
                    continue;
                }
                op = body.call(thisArg, _);
              } catch (e) {
                op = [6, e];
                y = 0;
              } finally {
                f = t = 0;
              }
            if (op[0] & 5)
              throw op[1];
            return { value: op[0] ? op[1] : void 0, done: true };
          }
        };
        __await = function(v) {
          return this instanceof __await ? (this.v = v, this) : new __await(v);
        };
        exporter("__extends", __extends48);
        exporter("__assign", __assign10);
        exporter("__decorate", __decorate2);
        exporter("__awaiter", __awaiter8);
        exporter("__generator", __generator8);
        exporter("__await", __await);
      });
    }
  });

  // ../../../../node_modules/eventemitter3/index.js
  var require_eventemitter3 = __commonJS({
    "../../../../node_modules/eventemitter3/index.js": function(exports, module) {
      "use strict";
      var has = Object.prototype.hasOwnProperty;
      var prefix = "~";
      function Events() {
      }
      if (Object.create) {
        Events.prototype = /* @__PURE__ */ Object.create(null);
        if (!new Events().__proto__)
          prefix = false;
      }
      function EE(fn, context, once) {
        this.fn = fn;
        this.context = context;
        this.once = once || false;
      }
      function addListener(emitter, event, fn, context, once) {
        if (typeof fn !== "function") {
          throw new TypeError("The listener must be a function");
        }
        var listener = new EE(fn, context || emitter, once), evt = prefix ? prefix + event : event;
        if (!emitter._events[evt])
          emitter._events[evt] = listener, emitter._eventsCount++;
        else if (!emitter._events[evt].fn)
          emitter._events[evt].push(listener);
        else
          emitter._events[evt] = [emitter._events[evt], listener];
        return emitter;
      }
      function clearEvent(emitter, evt) {
        if (--emitter._eventsCount === 0)
          emitter._events = new Events();
        else
          delete emitter._events[evt];
      }
      function EventEmitter20() {
        this._events = new Events();
        this._eventsCount = 0;
      }
      EventEmitter20.prototype.eventNames = function eventNames() {
        var names = [], events, name;
        if (this._eventsCount === 0)
          return names;
        for (name in events = this._events) {
          if (has.call(events, name))
            names.push(prefix ? name.slice(1) : name);
        }
        if (Object.getOwnPropertySymbols) {
          return names.concat(Object.getOwnPropertySymbols(events));
        }
        return names;
      };
      EventEmitter20.prototype.listeners = function listeners(event) {
        var evt = prefix ? prefix + event : event, handlers = this._events[evt];
        if (!handlers)
          return [];
        if (handlers.fn)
          return [handlers.fn];
        for (var i = 0, l = handlers.length, ee = new Array(l); i < l; i++) {
          ee[i] = handlers[i].fn;
        }
        return ee;
      };
      EventEmitter20.prototype.listenerCount = function listenerCount(event) {
        var evt = prefix ? prefix + event : event, listeners = this._events[evt];
        if (!listeners)
          return 0;
        if (listeners.fn)
          return 1;
        return listeners.length;
      };
      EventEmitter20.prototype.emit = function emit(event, a1, a2, a3, a4, a5) {
        var evt = prefix ? prefix + event : event;
        if (!this._events[evt])
          return false;
        var listeners = this._events[evt], len = arguments.length, args, i;
        if (listeners.fn) {
          if (listeners.once)
            this.removeListener(event, listeners.fn, void 0, true);
          switch (len) {
            case 1:
              return listeners.fn.call(listeners.context), true;
            case 2:
              return listeners.fn.call(listeners.context, a1), true;
            case 3:
              return listeners.fn.call(listeners.context, a1, a2), true;
            case 4:
              return listeners.fn.call(listeners.context, a1, a2, a3), true;
            case 5:
              return listeners.fn.call(listeners.context, a1, a2, a3, a4), true;
            case 6:
              return listeners.fn.call(listeners.context, a1, a2, a3, a4, a5), true;
          }
          for (i = 1, args = new Array(len - 1); i < len; i++) {
            args[i - 1] = arguments[i];
          }
          listeners.fn.apply(listeners.context, args);
        } else {
          var length = listeners.length, j;
          for (i = 0; i < length; i++) {
            if (listeners[i].once)
              this.removeListener(event, listeners[i].fn, void 0, true);
            switch (len) {
              case 1:
                listeners[i].fn.call(listeners[i].context);
                break;
              case 2:
                listeners[i].fn.call(listeners[i].context, a1);
                break;
              case 3:
                listeners[i].fn.call(listeners[i].context, a1, a2);
                break;
              case 4:
                listeners[i].fn.call(listeners[i].context, a1, a2, a3);
                break;
              default:
                if (!args)
                  for (j = 1, args = new Array(len - 1); j < len; j++) {
                    args[j - 1] = arguments[j];
                  }
                listeners[i].fn.apply(listeners[i].context, args);
            }
          }
        }
        return true;
      };
      EventEmitter20.prototype.on = function on(event, fn, context) {
        return addListener(this, event, fn, context, false);
      };
      EventEmitter20.prototype.once = function once(event, fn, context) {
        return addListener(this, event, fn, context, true);
      };
      EventEmitter20.prototype.removeListener = function removeListener(event, fn, context, once) {
        var evt = prefix ? prefix + event : event;
        if (!this._events[evt])
          return this;
        if (!fn) {
          clearEvent(this, evt);
          return this;
        }
        var listeners = this._events[evt];
        if (listeners.fn) {
          if (listeners.fn === fn && (!once || listeners.once) && (!context || listeners.context === context)) {
            clearEvent(this, evt);
          }
        } else {
          for (var i = 0, events = [], length = listeners.length; i < length; i++) {
            if (listeners[i].fn !== fn || once && !listeners[i].once || context && listeners[i].context !== context) {
              events.push(listeners[i]);
            }
          }
          if (events.length)
            this._events[evt] = events.length === 1 ? events[0] : events;
          else
            clearEvent(this, evt);
        }
        return this;
      };
      EventEmitter20.prototype.removeAllListeners = function removeAllListeners(event) {
        var evt;
        if (event) {
          evt = prefix ? prefix + event : event;
          if (this._events[evt])
            clearEvent(this, evt);
        } else {
          this._events = new Events();
          this._eventsCount = 0;
        }
        return this;
      };
      EventEmitter20.prototype.off = EventEmitter20.prototype.removeListener;
      EventEmitter20.prototype.addListener = EventEmitter20.prototype.on;
      EventEmitter20.prefixed = prefix;
      EventEmitter20.EventEmitter = EventEmitter20;
      if ("undefined" !== typeof module) {
        module.exports = EventEmitter20;
      }
    }
  });

  // ../../../../common/web/tslib/build/index.js
  var build_exports = {};
  __export(build_exports, {
    tslib: function() {
      return tslib_1;
    }
  });
  __reExport(build_exports, __toESM(require_tslib(), 1));
  var tslib_1 = __toESM(require_tslib(), 1);

  // ../../../build/engine/main/obj/engineConfiguration.js
  var import_eventemitter32 = __toESM(require_eventemitter3(), 1);

  // ../../../../common/web/keyboard-processor/build/obj/text/codes.js
  var Codes = {
    modifierCodes: {
      "LCTRL": 1,
      "RCTRL": 2,
      "LALT": 4,
      "RALT": 8,
      "SHIFT": 16,
      "CTRL": 32,
      "ALT": 64,
      "META": 128,
      "CAPS": 256,
      "NO_CAPS": 512,
      "NUM_LOCK": 1024,
      "NO_NUM_LOCK": 2048,
      "SCROLL_LOCK": 4096,
      "NO_SCROLL_LOCK": 8192,
      "VIRTUAL_KEY": 16384,
      "VIRTUAL_CHAR_KEY": 32768
    },
    modifierBitmasks: {
      "ALL": 127,
      "ALT_GR_SIM": 1 | 4,
      "CHIRAL": 31,
      "IS_CHIRAL": 15,
      "NON_CHIRAL": 112
    },
    stateBitmasks: {
      "ALL": 16128,
      "CAPS": 768,
      "NUM_LOCK": 3072,
      "SCROLL_LOCK": 12288
    },
    keyCodes: {
      "K_BKSP": 8,
      "K_TAB": 9,
      "K_ENTER": 13,
      "K_SHIFT": 16,
      "K_CONTROL": 17,
      "K_ALT": 18,
      "K_PAUSE": 19,
      "K_CAPS": 20,
      "K_ESC": 27,
      "K_SPACE": 32,
      "K_PGUP": 33,
      "K_PGDN": 34,
      "K_END": 35,
      "K_HOME": 36,
      "K_LEFT": 37,
      "K_UP": 38,
      "K_RIGHT": 39,
      "K_DOWN": 40,
      "K_SEL": 41,
      "K_PRINT": 42,
      "K_EXEC": 43,
      "K_INS": 45,
      "K_DEL": 46,
      "K_HELP": 47,
      "K_0": 48,
      "K_1": 49,
      "K_2": 50,
      "K_3": 51,
      "K_4": 52,
      "K_5": 53,
      "K_6": 54,
      "K_7": 55,
      "K_8": 56,
      "K_9": 57,
      "K_A": 65,
      "K_B": 66,
      "K_C": 67,
      "K_D": 68,
      "K_E": 69,
      "K_F": 70,
      "K_G": 71,
      "K_H": 72,
      "K_I": 73,
      "K_J": 74,
      "K_K": 75,
      "K_L": 76,
      "K_M": 77,
      "K_N": 78,
      "K_O": 79,
      "K_P": 80,
      "K_Q": 81,
      "K_R": 82,
      "K_S": 83,
      "K_T": 84,
      "K_U": 85,
      "K_V": 86,
      "K_W": 87,
      "K_X": 88,
      "K_Y": 89,
      "K_Z": 90,
      "K_NP0": 96,
      "K_NP1": 97,
      "K_NP2": 98,
      "K_NP3": 99,
      "K_NP4": 100,
      "K_NP5": 101,
      "K_NP6": 102,
      "K_NP7": 103,
      "K_NP8": 104,
      "K_NP9": 105,
      "K_NPSTAR": 106,
      "K_NPPLUS": 107,
      "K_SEPARATOR": 108,
      "K_NPMINUS": 109,
      "K_NPDOT": 110,
      "K_NPSLASH": 111,
      "K_F1": 112,
      "K_F2": 113,
      "K_F3": 114,
      "K_F4": 115,
      "K_F5": 116,
      "K_F6": 117,
      "K_F7": 118,
      "K_F8": 119,
      "K_F9": 120,
      "K_F10": 121,
      "K_F11": 122,
      "K_F12": 123,
      "K_NUMLOCK": 144,
      "K_SCROLL": 145,
      "K_LSHIFT": 160,
      "K_RSHIFT": 161,
      "K_LCONTROL": 162,
      "K_RCONTROL": 163,
      "K_LALT": 164,
      "K_RALT": 165,
      "K_COLON": 186,
      "K_EQUAL": 187,
      "K_COMMA": 188,
      "K_HYPHEN": 189,
      "K_PERIOD": 190,
      "K_SLASH": 191,
      "K_BKQUOTE": 192,
      "K_LBRKT": 219,
      "K_BKSLASH": 220,
      "K_RBRKT": 221,
      "K_QUOTE": 222,
      "K_oE2": 226,
      "K_OE2": 226,
      "K_LOPT": 50001,
      "K_ROPT": 50002,
      "K_NUMERALS": 50003,
      "K_SYMBOLS": 50004,
      "K_CURRENCIES": 50005,
      "K_UPPER": 50006,
      "K_LOWER": 50007,
      "K_ALPHA": 50008,
      "K_SHIFTED": 50009,
      "K_ALTGR": 50010,
      "K_TABBACK": 50011,
      "K_TABFWD": 50012
    },
    codesUS: [
      ["0123456789", ";=,-./`", "[\\]'"],
      [")!@#$%^&*(", ":+<_>?~", '{|}"']
    ],
    isKnownOSKModifierKey: function(keyID) {
      switch (keyID) {
        case "K_SHIFT":
        case "K_LOPT":
        case "K_ROPT":
        case "K_NUMLOCK":
        case "K_CAPS":
          return true;
        default:
          if (Codes.keyCodes[keyID] >= 5e4) {
            return true;
          }
          var code = Codes[keyID];
          if (code > 5e4 && code < 50011) {
            return true;
          }
      }
      return false;
    },
    getModifierState: function(layerId) {
      var modifier = 0;
      if (layerId.indexOf("shift") >= 0) {
        modifier |= Codes.modifierCodes["SHIFT"];
      }
      var ctrlMatched = false;
      if (layerId.indexOf("leftctrl") >= 0) {
        modifier |= Codes.modifierCodes["LCTRL"];
        ctrlMatched = true;
      }
      if (layerId.indexOf("rightctrl") >= 0) {
        modifier |= Codes.modifierCodes["RCTRL"];
        ctrlMatched = true;
      }
      if (layerId.indexOf("ctrl") >= 0 && !ctrlMatched) {
        modifier |= Codes.modifierCodes["CTRL"];
      }
      var altMatched = false;
      if (layerId.indexOf("leftalt") >= 0) {
        modifier |= Codes.modifierCodes["LALT"];
        altMatched = true;
      }
      if (layerId.indexOf("rightalt") >= 0) {
        modifier |= Codes.modifierCodes["RALT"];
        altMatched = true;
      }
      if (layerId.indexOf("alt") >= 0 && !altMatched) {
        modifier |= Codes.modifierCodes["ALT"];
      }
      return modifier;
    },
    getStateFromLayer: function(layerId) {
      var modifier = 0;
      if (layerId.indexOf("caps") >= 0) {
        modifier |= Codes.modifierCodes["CAPS"];
      } else {
        modifier |= Codes.modifierCodes["NO_CAPS"];
      }
      return modifier;
    }
  };
  var codes_default = Codes;

  // ../../../../common/web/keyboard-processor/build/obj/text/defaultRules.js
  var EmulationKeystrokes;
  (function(EmulationKeystrokes2) {
    EmulationKeystrokes2["Enter"] = "\n";
    EmulationKeystrokes2["Backspace"] = "\b";
  })(EmulationKeystrokes || (EmulationKeystrokes = {}));
  var DefaultRules = /* @__PURE__ */ function() {
    function DefaultRules2() {
    }
    DefaultRules2.prototype.codeForEvent = function(Lkc) {
      return codes_default.keyCodes[Lkc.kName] || Lkc.Lcode;
      ;
    };
    DefaultRules2.prototype.forAny = function(Lkc, isMnemonic, ruleBehavior) {
      var char = "";
      if ((char = this.forSpecialEmulation(Lkc)) != null) {
        return char;
      } else if (!isMnemonic && (char = this.forNumpadKeys(Lkc)) != null) {
        return char;
      } else if ((char = this.forUnicodeKeynames(Lkc, ruleBehavior)) != null) {
        return char;
      } else if ((char = this.forBaseKeys(Lkc, ruleBehavior)) != null) {
        return char;
      } else {
        var code = this.codeForEvent(Lkc);
        switch (code) {
          default:
            return null;
        }
      }
    };
    DefaultRules2.prototype.isCommand = function(Lkc) {
      var code = this.codeForEvent(Lkc);
      switch (code) {
        default:
          return false;
      }
    };
    DefaultRules2.prototype.applyCommand = function(Lkc, outputTarget) {
    };
    DefaultRules2.prototype.forSpecialEmulation = function(Lkc) {
      var code = this.codeForEvent(Lkc);
      switch (code) {
        case codes_default.keyCodes["K_BKSP"]:
          return EmulationKeystrokes.Backspace;
        case codes_default.keyCodes["K_ENTER"]:
          return EmulationKeystrokes.Enter;
        default:
          return null;
      }
    };
    DefaultRules2.prototype.forNumpadKeys = function(Lkc) {
      if (Lkc.Lcode >= codes_default.keyCodes["K_NP0"] && Lkc.Lcode <= codes_default.keyCodes["K_NPSLASH"]) {
        if (Lkc.Lcode < 106) {
          var Lch = Lkc.Lcode - 48;
        } else {
          Lch = Lkc.Lcode - 64;
        }
        var ch = String._kmwFromCharCode(Lch);
        return ch;
      } else {
        return null;
      }
    };
    DefaultRules2.prototype.forUnicodeKeynames = function(Lkc, ruleBehavior) {
      var keyName = Lkc.kName;
      if (!keyName || keyName.substr(0, 2) != "U_") {
        return null;
      }
      var result = "";
      var codePoints = keyName.substr(2).split("_");
      for (var _i = 0, codePoints_1 = codePoints; _i < codePoints_1.length; _i++) {
        var codePoint = codePoints_1[_i];
        var codePointValue = parseInt(codePoint, 16);
        if (0 <= codePointValue && codePointValue <= 31 || 128 <= codePointValue && codePointValue <= 159 || isNaN(codePointValue)) {
          if (ruleBehavior) {
            ruleBehavior.errorLog = "Suppressing Unicode control code in " + keyName;
          }
          continue;
        } else {
          result += String.kmwFromCharCode(codePointValue);
        }
      }
      return result ? result : null;
    };
    DefaultRules2.prototype.forBaseKeys = function(Lkc, ruleBehavior) {
      var n = Lkc.Lcode;
      var keyShiftState = Lkc.Lmodifiers;
      if (keyShiftState == codes_default.modifierCodes["SHIFT"]) {
        keyShiftState = 1;
      } else if (keyShiftState != 0) {
        if (ruleBehavior) {
          ruleBehavior.warningLog = "KMW only defines default key output for the 'default' and 'shift' layers!";
        }
        return null;
      }
      try {
        if (n == codes_default.keyCodes["K_SPACE"]) {
          return " ";
        } else if (n >= codes_default.keyCodes["K_0"] && n <= codes_default.keyCodes["K_9"]) {
          return codes_default.codesUS[keyShiftState][0][n - codes_default.keyCodes["K_0"]];
        } else if (n >= codes_default.keyCodes["K_A"] && n <= codes_default.keyCodes["K_Z"]) {
          return String.fromCharCode(n + (keyShiftState ? 0 : 32));
        } else if (n >= codes_default.keyCodes["K_COLON"] && n <= codes_default.keyCodes["K_BKQUOTE"]) {
          return codes_default.codesUS[keyShiftState][1][n - codes_default.keyCodes["K_COLON"]];
        } else if (n >= codes_default.keyCodes["K_LBRKT"] && n <= codes_default.keyCodes["K_QUOTE"]) {
          return codes_default.codesUS[keyShiftState][2][n - codes_default.keyCodes["K_LBRKT"]];
        } else if (n == codes_default.keyCodes["K_oE2"]) {
          return keyShiftState ? "|" : "\\";
        }
      } catch (e) {
        if (ruleBehavior) {
          ruleBehavior.errorLog = "Error detected with default mapping for key:  code = " + n + ", shift state = " + (keyShiftState == 1 ? "shift" : "default");
        }
      }
      return null;
    };
    return DefaultRules2;
  }();
  var defaultRules_default = DefaultRules;

  // ../../../../common/web/keyboard-processor/build/obj/text/keyEvent.js
  var BASE_DEFAULT_RULES = new defaultRules_default();
  var KeyEvent = /* @__PURE__ */ function() {
    function KeyEvent2(keyEventSpec) {
      this.isSynthetic = true;
      for (var key in keyEventSpec) {
        if (keyEventSpec[key] !== void 0) {
          this[key] = keyEventSpec[key];
        }
      }
    }
    KeyEvent2.constructNullKeyEvent = function(device) {
      var keyEvent = new KeyEvent2({
        Lcode: 0,
        kName: "",
        device: device,
        Lstates: void 0,
        Lmodifiers: void 0,
        vkCode: void 0,
        LisVirtualKey: void 0
      });
      return keyEvent;
    };
    Object.defineProperty(KeyEvent2.prototype, "isModifier", {
      get: function() {
        switch (this.Lcode) {
          case 16:
          case 17:
          case 18:
          case 20:
          case 144:
          case 145:
            return true;
          default:
            return false;
        }
      },
      enumerable: false,
      configurable: true
    });
    KeyEvent2.prototype.setMnemonicCode = function(shifted, capsActive) {
      if (this.Lcode != codes_default.keyCodes["K_SPACE"]) {
        var mappingEvent = new KeyEvent2(this);
        for (var key in this) {
          mappingEvent[key] = this[key];
        }
        mappingEvent.kName = "K_xxxx";
        mappingEvent.Lmodifiers = shifted ? 16 : 0;
        var mappedChar = BASE_DEFAULT_RULES.forAny(mappingEvent, true);
        this.vkCode = this.Lcode;
        if (mappedChar) {
          this.Lcode = mappedChar.charCodeAt(0);
        } else {
          if (!this.isModifier) {
            delete this.Lcode;
          }
        }
      }
      if (capsActive) {
        if (this.Lcode >= 65 && this.Lcode <= 90 || this.Lcode >= 97 && this.Lcode <= 122) {
          this.Lmodifiers ^= 16;
          this.Lcode ^= 32;
        }
      }
    };
    return KeyEvent2;
  }();
  var keyEvent_default = KeyEvent;

  // ../../../../common/web/keyboard-processor/build/obj/text/keyMapping.js
  var KeyMap = /* @__PURE__ */ function() {
    function KeyMap2() {
    }
    return KeyMap2;
  }();
  var BrowserKeyMaps = function() {
    function BrowserKeyMaps2() {
      this.FF = new KeyMap();
      this.Safari = new KeyMap();
      this.Opera = new KeyMap();
      this.FF["k61"] = 187;
      this.FF["k59"] = 186;
      this.FF["k173"] = 189;
    }
    return BrowserKeyMaps2;
  }();
  var LanguageKeyMaps = function() {
    function LanguageKeyMaps2() {
      this["se"] = new KeyMap();
      this["se"]["k220"] = 192;
      this["se"]["k187"] = 189;
      this["se"]["k219"] = 187;
      this["se"]["k221"] = 219;
      this["se"]["k186"] = 221;
      this["se"]["k191"] = 220;
      this["se"]["k192"] = 186;
      this["se"]["k189"] = 191;
      this["uk"] = new KeyMap();
      this["uk"]["k223"] = 192;
      this["uk"]["k192"] = 222;
      this["uk"]["k222"] = 226;
      this["uk"]["k220"] = 220;
    }
    return LanguageKeyMaps2;
  }();
  var KeyMapping = function() {
    function KeyMapping2() {
    }
    KeyMapping2._usCodeInit = function() {
      var s0 = new KeyMap(), s1 = new KeyMap();
      s0["k192"] = 96;
      s0["k49"] = 49;
      s0["k50"] = 50;
      s0["k51"] = 51;
      s0["k52"] = 52;
      s0["k53"] = 53;
      s0["k54"] = 54;
      s0["k55"] = 55;
      s0["k56"] = 56;
      s0["k57"] = 57;
      s0["k48"] = 48;
      s0["k189"] = 45;
      s0["k187"] = 61;
      s0["k81"] = 113;
      s0["k87"] = 119;
      s0["k69"] = 101;
      s0["k82"] = 114;
      s0["k84"] = 116;
      s0["k89"] = 121;
      s0["k85"] = 117;
      s0["k73"] = 105;
      s0["k79"] = 111;
      s0["k80"] = 112;
      s0["k219"] = 91;
      s0["k221"] = 93;
      s0["k220"] = 92;
      s0["k65"] = 97;
      s0["k83"] = 115;
      s0["k68"] = 100;
      s0["k70"] = 102;
      s0["k71"] = 103;
      s0["k72"] = 104;
      s0["k74"] = 106;
      s0["k75"] = 107;
      s0["k76"] = 108;
      s0["k186"] = 59;
      s0["k222"] = 39;
      s0["k90"] = 122;
      s0["k88"] = 120;
      s0["k67"] = 99;
      s0["k86"] = 118;
      s0["k66"] = 98;
      s0["k78"] = 110;
      s0["k77"] = 109;
      s0["k188"] = 44;
      s0["k190"] = 46;
      s0["k191"] = 47;
      s1["k192"] = 126;
      s1["k49"] = 33;
      s1["k50"] = 64;
      s1["k51"] = 35;
      s1["k52"] = 36;
      s1["k53"] = 37;
      s1["k54"] = 94;
      s1["k55"] = 38;
      s1["k56"] = 42;
      s1["k57"] = 40;
      s1["k48"] = 41;
      s1["k189"] = 95;
      s1["k187"] = 43;
      s1["k81"] = 81;
      s1["k87"] = 87;
      s1["k69"] = 69;
      s1["k82"] = 82;
      s1["k84"] = 84;
      s1["k89"] = 89;
      s1["k85"] = 85;
      s1["k73"] = 73;
      s1["k79"] = 79;
      s1["k80"] = 80;
      s1["k219"] = 123;
      s1["k221"] = 125;
      s1["k220"] = 124;
      s1["k65"] = 65;
      s1["k83"] = 83;
      s1["k68"] = 68;
      s1["k70"] = 70;
      s1["k71"] = 71;
      s1["k72"] = 72;
      s1["k74"] = 74;
      s1["k75"] = 75;
      s1["k76"] = 76;
      s1["k186"] = 58;
      s1["k222"] = 34;
      s1["k90"] = 90;
      s1["k88"] = 88;
      s1["k67"] = 67;
      s1["k86"] = 86;
      s1["k66"] = 66;
      s1["k78"] = 78;
      s1["k77"] = 77;
      s1["k188"] = 60;
      s1["k190"] = 62;
      s1["k191"] = 63;
      KeyMapping2._usCharCodes = [s0, s1];
    };
    KeyMapping2._USKeyCodeToCharCode = function(Levent) {
      return KeyMapping2.usCharCodes[Levent.Lmodifiers & 16 ? 1 : 0]["k" + Levent.Lcode];
    };
    ;
    Object.defineProperty(KeyMapping2, "usCharCodes", {
      get: function() {
        if (!KeyMapping2._usCharCodes) {
          KeyMapping2._usCodeInit();
        }
        return KeyMapping2._usCharCodes;
      },
      enumerable: false,
      configurable: true
    });
    KeyMapping2.browserMap = new BrowserKeyMaps();
    KeyMapping2.languageMap = new LanguageKeyMaps();
    return KeyMapping2;
  }();
  var keyMapping_default = KeyMapping;

  // ../../../../common/web/keyboard-processor/build/obj/keyboards/activeLayout.js
  function Enumerable(target, propertyKey, descriptor) {
    descriptor.enumerable = true;
  }
  var ActiveKey = /* @__PURE__ */ function() {
    function ActiveKey2() {
      this.isMnemonic = false;
    }
    Object.defineProperty(ActiveKey2.prototype, "baseKeyID", {
      get: function() {
        if (typeof this.id === "undefined") {
          return void 0;
        }
        return this.id;
      },
      enumerable: false,
      configurable: true
    });
    Object.defineProperty(ActiveKey2.prototype, "isPadding", {
      get: function() {
        return this["sp"] == 10;
      },
      enumerable: false,
      configurable: true
    });
    Object.defineProperty(ActiveKey2.prototype, "coreID", {
      get: function() {
        if (typeof this.id === "undefined") {
          return void 0;
        }
        var baseID = this.id || "";
        if (this.displayLayer != this.layer) {
          baseID = baseID + "+" + this.layer;
        }
        return baseID;
      },
      enumerable: false,
      configurable: true
    });
    Object.defineProperty(ActiveKey2.prototype, "elementID", {
      get: function() {
        if (typeof this.id === "undefined") {
          return void 0;
        }
        return this.displayLayer + "-" + this.coreID;
      },
      enumerable: false,
      configurable: true
    });
    Object.defineProperty(ActiveKey2.prototype, "baseKeyEvent", {
      get: function() {
        return new keyEvent_default(this._baseKeyEvent);
      },
      enumerable: false,
      configurable: true
    });
    ActiveKey2.unicodeIDToText = function(id, errorCallback) {
      if (!id || id.substring(0, 2) != "U_") {
        return null;
      }
      var result = "";
      var codePoints = id.substring(2).split("_");
      for (var _i = 0, codePoints_1 = codePoints; _i < codePoints_1.length; _i++) {
        var codePoint = codePoints_1[_i];
        var codePointValue = parseInt(codePoint, 16);
        if (0 <= codePointValue && codePointValue <= 31 || 128 <= codePointValue && codePointValue <= 159 || isNaN(codePointValue)) {
          if (errorCallback) {
            errorCallback(codePoint);
          }
          continue;
        } else {
          result += String.kmwFromCharCode(codePointValue);
        }
      }
      return result ? result : null;
    };
    ActiveKey2.sanitize = function(rawKey) {
      if (typeof rawKey.width == "string") {
        rawKey.width = parseInt(rawKey.width, 10);
      }
      rawKey.width || (rawKey.width = ActiveKey2.DEFAULT_KEY_WIDTH);
      if (typeof rawKey.pad == "string") {
        rawKey.pad = parseInt(rawKey.pad, 10);
      }
      rawKey.pad || (rawKey.pad = ActiveKey2.DEFAULT_PAD);
      if (typeof rawKey.sp == "string") {
        rawKey.sp = Number.parseInt(rawKey.sp, 10);
      }
      rawKey.sp || (rawKey.sp = 0);
    };
    ActiveKey2.polyfill = function(key, keyboard, layout, displayLayer) {
      var dummy = new ActiveKey2();
      var proto = Object.getPrototypeOf(dummy);
      for (var prop in dummy) {
        if (!key.hasOwnProperty(prop)) {
          var descriptor = Object.getOwnPropertyDescriptor(proto, prop);
          if (descriptor) {
            Object.defineProperty(key, prop, descriptor);
          } else {
            key[prop] = dummy[prop];
          }
        }
      }
      if (key.sk) {
        for (var _i = 0, _a = key.sk; _i < _a.length; _i++) {
          var subkey = _a[_i];
          ActiveKey2.polyfill(subkey, keyboard, layout, displayLayer);
        }
      }
      var aKey = key;
      aKey.displayLayer = displayLayer;
      aKey.layer = aKey.layer || displayLayer;
      aKey.constructBaseKeyEvent(keyboard, layout, displayLayer);
    };
    ActiveKey2.prototype.constructBaseKeyEvent = function(keyboard, layout, displayLayer) {
      var layer = this.layer || displayLayer || "";
      var keyName = this.id ? this.id.toUpperCase() : null;
      var props = {
        Lmodifiers: codes_default.getModifierState(layer),
        Lstates: codes_default.getStateFromLayer(layer),
        Lcode: keyName ? codes_default.keyCodes[keyName] : 0,
        LisVirtualKey: true,
        vkCode: 0,
        kName: keyName,
        kLayer: layer,
        kbdLayer: displayLayer,
        kNextLayer: this.nextlayer,
        device: null,
        isSynthetic: true
      };
      var Lkc = new keyEvent_default(props);
      if (layout.keyboard) {
        var keyboard_1 = layout.keyboard;
        if (keyboard_1.isMnemonic && !(layout.isDefault && layout.formFactor != "desktop")) {
          if (Lkc.Lcode != codes_default.keyCodes["K_SPACE"]) {
            Lkc.vkCode = Lkc.Lcode;
            this.isMnemonic = true;
          }
        } else {
          Lkc.vkCode = Lkc.Lcode;
        }
        if (!keyboard_1.definesPositionalOrMnemonic) {
          Lkc.Lcode = keyMapping_default._USKeyCodeToCharCode(keyboard_1.constructKeyEvent(null, null, {
            K_CAPS: false,
            K_NUMLOCK: false,
            K_SCROLL: false
          }));
          Lkc.LisVirtualKey = false;
        }
      }
      this._baseKeyEvent = Lkc;
    };
    ActiveKey2.prototype.getSubkey = function(coreID) {
      if (this.sk) {
        for (var _i = 0, _a = this.sk; _i < _a.length; _i++) {
          var key = _a[_i];
          if (key.coreID == coreID) {
            return key;
          }
        }
      }
      return null;
    };
    ActiveKey2.DEFAULT_PAD = 15;
    ActiveKey2.DEFAULT_RIGHT_MARGIN = 15;
    ActiveKey2.DEFAULT_KEY_WIDTH = 100;
    ActiveKey2.DEFAULT_KEY = {
      text: "",
      width: ActiveKey2.DEFAULT_KEY_WIDTH,
      sp: 0,
      pad: ActiveKey2.DEFAULT_PAD
    };
    (0, build_exports.__decorate)([
      Enumerable
    ], ActiveKey2.prototype, "baseKeyID", null);
    (0, build_exports.__decorate)([
      Enumerable
    ], ActiveKey2.prototype, "isPadding", null);
    (0, build_exports.__decorate)([
      Enumerable
    ], ActiveKey2.prototype, "coreID", null);
    (0, build_exports.__decorate)([
      Enumerable
    ], ActiveKey2.prototype, "elementID", null);
    (0, build_exports.__decorate)([
      Enumerable
    ], ActiveKey2.prototype, "baseKeyEvent", null);
    return ActiveKey2;
  }();
  var ActiveRow = function() {
    function ActiveRow2() {
    }
    ActiveRow2.sanitize = function(rawRow) {
      for (var _i = 0, _a = rawRow.key; _i < _a.length; _i++) {
        var key = _a[_i];
        if (key == null) {
          rawRow.key.length = rawRow.key.length - 1;
        } else {
          ActiveKey.sanitize(key);
        }
      }
      if (typeof rawRow.id == "string") {
        rawRow.id = Number.parseInt(rawRow.id, 10);
      }
    };
    ActiveRow2.polyfill = function(row, keyboard, layout, displayLayer, totalWidth, proportionalY) {
      var keys = row["key"];
      for (var j = 0; j < keys.length; j++) {
        var key = keys[j];
        for (var tp in ActiveKey.DEFAULT_KEY) {
          if (typeof key[tp] != "string" && typeof key[tp] != "number") {
            key[tp] = ActiveKey.DEFAULT_KEY[tp];
          }
        }
        switch (key["sp"]) {
          case "1":
            if (!ActiveRow2.SPECIAL_LABEL.test(key["text"]) && key["text"] != "") {
              key["sp"] = "3";
            }
            break;
          case "2":
            if (!ActiveRow2.SPECIAL_LABEL.test(key["text"]) && key["text"] != "") {
              key["sp"] = "4";
            }
            break;
        }
        ActiveKey.polyfill(key, keyboard, layout, displayLayer);
      }
      var setProportions = function(key2, padPc, keyPc, totalPc) {
        key2.proportionalPad = padPc;
        key2.proportionalWidth = keyPc;
        key2.proportionalX = totalPc + padPc + keyPc / 2;
      };
      var totalPercent = 0;
      for (var j = 0; j < keys.length - 1; j++) {
        var key = keys[j];
        setProportions(key, key.pad / totalWidth, key.width / totalWidth, totalPercent);
        totalPercent += key.proportionalPad;
        totalPercent += key.proportionalWidth;
      }
      var rightMargin = ActiveKey.DEFAULT_RIGHT_MARGIN / totalWidth;
      if (keys.length > 0) {
        var finalKey = keys[keys.length - 1];
        if (keys.length == 1 && finalKey.pad < 0) {
          var keyPercent = finalKey.width / totalWidth;
          var padPercent = 1 - (totalPercent + keyPercent + rightMargin);
          setProportions(finalKey, padPercent, keyPercent, totalPercent);
        } else {
          var padPercent = finalKey.pad / totalWidth;
          var keyPercent = 1 - (totalPercent + padPercent + rightMargin);
          setProportions(finalKey, padPercent, keyPercent, totalPercent);
        }
      }
      var dummy = new ActiveRow2();
      for (var key in dummy) {
        if (!row.hasOwnProperty(key)) {
          row[key] = dummy[key];
        }
      }
      var aRow = row;
      aRow.proportionalY = proportionalY;
    };
    ActiveRow2.prototype.populateKeyMap = function(map) {
      this.key.forEach(function(key) {
        if (key.coreID) {
          map[key.coreID] = key;
        }
      });
    };
    ActiveRow2.SPECIAL_LABEL = /\*\w+\*/;
    return ActiveRow2;
  }();
  var ActiveLayer = function() {
    function ActiveLayer2() {
    }
    ActiveLayer2.sanitize = function(rawLayer) {
      for (var _i = 0, _a = rawLayer.row; _i < _a.length; _i++) {
        var row = _a[_i];
        ActiveRow.sanitize(row);
      }
    };
    ActiveLayer2.polyfill = function(layer, keyboard, layout) {
      layer.aligned = false;
      var rows = layer["row"];
      var totalWidth = 0;
      for (var _i = 0, rows_1 = rows; _i < rows_1.length; _i++) {
        var row = rows_1[_i];
        var width = 0;
        var keys = row["key"];
        for (var _a = 0, keys_1 = keys; _a < keys_1.length; _a++) {
          var key = keys_1[_a];
          width += key.width + key.pad;
        }
        if (width > totalWidth) {
          totalWidth = width;
        }
      }
      if (layout.formFactor == "desktop") {
        totalWidth += 5;
      } else {
        totalWidth += ActiveKey.DEFAULT_RIGHT_MARGIN;
      }
      var rowCount = layer.row.length;
      for (var i = 0; i < rowCount; i++) {
        var rowProportionalY = (i + 0.5) / rowCount;
        ActiveRow.polyfill(layer.row[i], keyboard, layout, layer.id, totalWidth, rowProportionalY);
      }
      var dummy = new ActiveLayer2();
      for (var key in dummy) {
        if (!layer.hasOwnProperty(key)) {
          layer[key] = dummy[key];
        }
      }
      var aLayer = layer;
      aLayer.totalWidth = totalWidth;
      aLayer.defaultKeyProportionalWidth = ActiveKey.DEFAULT_KEY.width / totalWidth;
      aLayer.rowProportionalHeight = 1 / rowCount;
      aLayer.keyMap = aLayer.constructKeyMap();
    };
    ActiveLayer2.prototype.constructKeyMap = function() {
      var map = {};
      this.row.forEach(function(row) {
        row.populateKeyMap(map);
      });
      return map;
    };
    ActiveLayer2.prototype.getTouchProbabilities = function(touchCoords, kbdScaleRatio) {
      var distribution = this.simpleTouchDistribution(touchCoords, kbdScaleRatio);
      var list = [];
      for (var key in distribution) {
        list.push({ keyId: key, p: distribution[key] });
      }
      return list.sort(function(a, b) {
        return b.p - a.p;
      });
    };
    ActiveLayer2.prototype.simpleTouchDistribution = function(touchCoords, kbdScaleRatio) {
      var keyDists = this.keyTouchDistances(touchCoords, kbdScaleRatio);
      var keyProbs = {};
      var totalMass = 0;
      for (var key in keyDists) {
        totalMass += keyProbs[key] = 1 / (Math.pow(keyDists[key], 2) + 1e-6);
      }
      for (var key in keyProbs) {
        keyProbs[key] /= totalMass;
      }
      return keyProbs;
    };
    ActiveLayer2.prototype.keyTouchDistances = function(touchCoords, kbdScaleRatio) {
      var layer = this;
      var keyDists = {};
      this.row.forEach(function(row) {
        row.key.forEach(function(key) {
          if (!key.baseKeyID) {
            return;
          } else {
            if (codes_default.isKnownOSKModifierKey(key.baseKeyID)) {
              return;
            } else if (key.isPadding) {
              return;
            }
          }
          var dx = Math.abs(touchCoords.x - key.proportionalX);
          var dy = Math.abs(touchCoords.y - row.proportionalY);
          var distX, distY;
          if (dx > 0.5 * key.proportionalWidth) {
            distX = dx - 0.5 * key.proportionalWidth;
            dx = 0.5;
          } else {
            distX = 0;
            dx /= key.proportionalWidth;
          }
          if (dy > 0.5 * layer.rowProportionalHeight) {
            distY = dy - 0.5 * layer.rowProportionalHeight;
            dy = 0.5;
          } else {
            distY = 0;
            dy /= layer.rowProportionalHeight;
          }
          distX *= kbdScaleRatio;
          distX += dx * layer.rowProportionalHeight;
          distY += dy * layer.rowProportionalHeight;
          var distance = distX * distX + distY * distY;
          keyDists[key.coreID] = distance;
        });
      });
      return keyDists;
    };
    ActiveLayer2.prototype.getKey = function(keyId) {
      if (keyId.indexOf(this.id + "-") == 0) {
        keyId = keyId.replace(this.id + "-", "");
      }
      var idComponents = keyId.split("::");
      if (idComponents.length > 1) {
        var baseKey = this.keyMap[idComponents[0]];
        return baseKey.getSubkey(idComponents[1]);
      } else {
        return this.keyMap[keyId];
      }
    };
    return ActiveLayer2;
  }();
  var ActiveLayout = function() {
    function ActiveLayout2() {
    }
    ActiveLayout2.prototype.getLayer = function(layerId) {
      return this.layerMap[layerId];
    };
    ActiveLayout2.correctLayerEmptyRowBug = function(layers) {
      for (var n = 0; n < layers.length; n++) {
        var layer = layers[n];
        var rows = layer["row"];
        var i = void 0;
        for (i = rows.length - 1; i >= 0; i--) {
          if (!Array.isArray(rows[i]["key"]) || rows[i]["key"].length == 0) {
            rows.splice(i, 1);
          }
        }
      }
    };
    ActiveLayout2.sanitize = function(rawLayout) {
      ActiveLayout2.correctLayerEmptyRowBug(rawLayout.layer);
      for (var _i = 0, _a = rawLayout.layer; _i < _a.length; _i++) {
        var layer = _a[_i];
        ActiveLayer.sanitize(layer);
      }
    };
    ActiveLayout2.polyfill = function(layout, keyboard, formFactor) {
      if (layout == null) {
        throw new Error("Cannot build an ActiveLayout for a null specification.");
      }
      this.sanitize(layout);
      var n;
      var layerMap = {};
      var layers = layout.layer;
      var dummy = new ActiveLayout2();
      for (var key in dummy) {
        if (!layout.hasOwnProperty(key)) {
          layout[key] = dummy[key];
        }
      }
      var aLayout = layout;
      aLayout.keyboard = keyboard;
      aLayout.formFactor = formFactor;
      for (n = 0; n < layers.length; n++) {
        ActiveLayer.polyfill(layers[n], keyboard, aLayout);
        layerMap[layers[n].id] = layers[n];
      }
      aLayout.layerMap = layerMap;
      return aLayout;
    };
    return ActiveLayout2;
  }();

  // ../../../../common/web/utils/build/obj/deepCopy.js
  function deepCopy(p, c0) {
    var c = c0 || {};
    for (var i in p) {
      if (typeof p[i] === "object" && p[i] != null) {
        c[i] = p[i].constructor === Array ? [] : {};
        deepCopy(p[i], c[i]);
      } else {
        c[i] = p[i];
      }
    }
    return c;
  }

  // ../../../../common/web/utils/build/obj/deviceSpec.js
  var DeviceSpec = /* @__PURE__ */ function() {
    function DeviceSpec2(browser, formFactor, OS, touchable) {
      switch (browser.toLowerCase()) {
        case DeviceSpec2.Browser.Chrome:
        case DeviceSpec2.Browser.Edge:
        case DeviceSpec2.Browser.Firefox:
        case DeviceSpec2.Browser.Native:
        case DeviceSpec2.Browser.Opera:
        case DeviceSpec2.Browser.Safari:
          this.browser = browser.toLowerCase();
          break;
        default:
          this.browser = DeviceSpec2.Browser.Other;
      }
      switch (formFactor.toLowerCase()) {
        case DeviceSpec2.FormFactor.Desktop:
        case DeviceSpec2.FormFactor.Phone:
        case DeviceSpec2.FormFactor.Tablet:
          this.formFactor = formFactor.toLowerCase();
          break;
        default:
          throw "Invalid form factor specified for device: " + formFactor;
      }
      switch (OS.toLowerCase()) {
        case DeviceSpec2.OperatingSystem.Windows.toLowerCase():
        case DeviceSpec2.OperatingSystem.macOS.toLowerCase():
        case DeviceSpec2.OperatingSystem.Linux.toLowerCase():
        case DeviceSpec2.OperatingSystem.Android.toLowerCase():
        case DeviceSpec2.OperatingSystem.iOS.toLowerCase():
          this.OS = OS.toLowerCase();
          break;
        default:
          this.OS = DeviceSpec2.OperatingSystem.Other;
      }
      this.touchable = touchable;
    }
    return DeviceSpec2;
  }();
  (function(DeviceSpec2) {
    var Browser;
    (function(Browser2) {
      Browser2["Chrome"] = "chrome";
      Browser2["Edge"] = "edge";
      Browser2["Firefox"] = "firefox";
      Browser2["Native"] = "native";
      Browser2["Opera"] = "opera";
      Browser2["Safari"] = "safari";
      Browser2["Other"] = "other";
    })(Browser = DeviceSpec2.Browser || (DeviceSpec2.Browser = {}));
    var OperatingSystem;
    (function(OperatingSystem2) {
      OperatingSystem2["Windows"] = "windows";
      OperatingSystem2["macOS"] = "macosx";
      OperatingSystem2["Linux"] = "linux";
      OperatingSystem2["Android"] = "android";
      OperatingSystem2["iOS"] = "ios";
      OperatingSystem2["Other"] = "other";
    })(OperatingSystem = DeviceSpec2.OperatingSystem || (DeviceSpec2.OperatingSystem = {}));
    var FormFactor;
    (function(FormFactor2) {
      FormFactor2["Desktop"] = "desktop";
      FormFactor2["Phone"] = "phone";
      FormFactor2["Tablet"] = "tablet";
    })(FormFactor = DeviceSpec2.FormFactor || (DeviceSpec2.FormFactor = {}));
  })(DeviceSpec || (DeviceSpec = {}));
  function physicalKeyDeviceAlias(device) {
    return new DeviceSpec(device.browser, DeviceSpec.FormFactor.Desktop, device.OS, false);
  }
  var deviceSpec_default = DeviceSpec;

  // ../../../../common/web/keyman-version/build/version.inc.js
  var KEYMAN_VERSION = /* @__PURE__ */ function() {
    function KEYMAN_VERSION2() {
    }
    KEYMAN_VERSION2.VERSION = "17.0.205";
    KEYMAN_VERSION2.VERSION_RELEASE = "17.0";
    KEYMAN_VERSION2.VERSION_MAJOR = "17";
    KEYMAN_VERSION2.VERSION_MINOR = "0";
    KEYMAN_VERSION2.VERSION_PATCH = "205";
    KEYMAN_VERSION2.TIER = "alpha";
    KEYMAN_VERSION2.VERSION_TAG = "-alpha-local";
    KEYMAN_VERSION2.VERSION_WITH_TAG = "17.0.205-alpha-local";
    KEYMAN_VERSION2.VERSION_ENVIRONMENT = "local";
    KEYMAN_VERSION2.VERSION_GIT_TAG = "release@17.0.205-alpha-local";
    return KEYMAN_VERSION2;
  }();
  var version_inc_default = KEYMAN_VERSION;

  // ../../../../common/web/utils/build/obj/version.js
  var Version = /* @__PURE__ */ function() {
    function Version2(text) {
      if (text === void 0 || text === null) {
        this.components = [].concat(Version2.DEVELOPER_VERSION_FALLBACK.components);
        return;
      }
      if (Array.isArray(text)) {
        var components = text;
        if (components.length < 2) {
          throw new Error("Version string must have at least a major and minor component!");
        } else {
          this.components = [].concat(components);
          return;
        }
      }
      var parts = text.split(".");
      var componentArray = [];
      if (parts.length < 2) {
        throw new Error("Version string must have at least a major and minor component!");
      }
      for (var i = 0; i < parts.length; i++) {
        var value = parseInt(parts[i], 10);
        if (isNaN(value)) {
          throw new Error("Version string components must be numerical!");
        }
        componentArray.push(value);
      }
      this.components = componentArray;
    }
    Object.defineProperty(Version2.prototype, "major", {
      get: function() {
        return this.components[0];
      },
      enumerable: false,
      configurable: true
    });
    Object.defineProperty(Version2.prototype, "minor", {
      get: function() {
        return this.components[1];
      },
      enumerable: false,
      configurable: true
    });
    Version2.prototype.toString = function() {
      return this.components.join(".");
    };
    Version2.prototype.toJSON = function() {
      return this.toString();
    };
    Version2.prototype.equals = function(other) {
      return this.compareTo(other) == 0;
    };
    Version2.prototype.precedes = function(other) {
      return this.compareTo(other) < 0;
    };
    Version2.prototype.compareTo = function(other) {
      var isShorter = this.components.length < other.components.length;
      var maxDepth = this.components.length < other.components.length ? this.components.length : other.components.length;
      var i;
      for (i = 0; i < maxDepth; i++) {
        var delta = this.components[i] - other.components[i];
        if (delta != 0) {
          return delta;
        }
      }
      var longList = isShorter ? other.components : this.components;
      do {
        if (longList[i] > 0) {
          return isShorter ? -1 : 1;
        }
        i++;
      } while (i < longList.length);
      return 0;
    };
    Version2.CURRENT = new Version2(version_inc_default.VERSION_RELEASE);
    Version2.DEVELOPER_VERSION_FALLBACK = new Version2([9, 0, 0]);
    Version2.NO_DEFAULT_KEYCAPS = new Version2([12, 0]);
    Version2.MAC_POSSIBLE_IPAD_ALIAS = new Version2([10, 15]);
    return Version2;
  }();
  var version_default = Version;

  // ../../../../common/web/utils/build/obj/globalObject.js
  function getGlobalObject() {
    if (typeof globalThis != "undefined") {
      return globalThis;
    } else if (typeof window != "undefined") {
      return window;
    } else if (typeof self != "undefined") {
      return self;
    } else {
      return global;
    }
  }

  // ../../../../common/web/utils/build/obj/kmwstring.js
  function extendString() {
    String.kmwFromCharCode = function(cp0) {
      var chars = [], i;
      for (i = 0; i < arguments.length; i++) {
        var c = Number(arguments[i]);
        if (!isFinite(c) || c < 0 || c > 1114111 || Math.floor(c) !== c) {
          throw new RangeError("Invalid code point " + c);
        }
        if (c < 65536) {
          chars.push(c);
        } else {
          c -= 65536;
          chars.push((c >> 10) + 55296);
          chars.push(c % 1024 + 56320);
        }
      }
      return String.fromCharCode.apply(void 0, chars);
    };
    String.prototype.kmwCharCodeAt = function(codePointIndex) {
      var str = String(this);
      var codeUnitIndex = 0;
      if (codePointIndex < 0 || codePointIndex >= str.length) {
        return NaN;
      }
      for (var i = 0; i < codePointIndex; i++) {
        codeUnitIndex = str.kmwNextChar(codeUnitIndex);
        if (codeUnitIndex === null)
          return NaN;
      }
      var first = str.charCodeAt(codeUnitIndex);
      if (first >= 55296 && first <= 56319 && str.length > codeUnitIndex + 1) {
        var second = str.charCodeAt(codeUnitIndex + 1);
        if (second >= 56320 && second <= 57343) {
          return (first - 55296 << 10) + (second - 56320) + 65536;
        }
      }
      return first;
    };
    String.prototype.kmwIndexOf = function(searchValue, fromIndex) {
      var str = String(this);
      var codeUnitIndex = str.indexOf(searchValue, fromIndex);
      if (codeUnitIndex < 0) {
        return codeUnitIndex;
      }
      var codePointIndex = 0;
      for (var i = 0; i !== null && i < codeUnitIndex; i = str.kmwNextChar(i))
        codePointIndex++;
      return codePointIndex;
    };
    String.prototype.kmwLastIndexOf = function(searchValue, fromIndex) {
      var str = String(this);
      var codeUnitIndex = str.lastIndexOf(searchValue, fromIndex);
      if (codeUnitIndex < 0) {
        return codeUnitIndex;
      }
      var codePointIndex = 0;
      for (var i = 0; i !== null && i < codeUnitIndex; i = str.kmwNextChar(i))
        codePointIndex++;
      return codePointIndex;
    };
    String.prototype.kmwLength = function() {
      var str = String(this);
      if (str.length == 0)
        return 0;
      for (var i = 0, codeUnitIndex = 0; codeUnitIndex !== null; i++)
        codeUnitIndex = str.kmwNextChar(codeUnitIndex);
      return i;
    };
    String.prototype.kmwSlice = function(beginSlice, endSlice) {
      var str = String(this);
      var beginSliceCodeUnit = str.kmwCodePointToCodeUnit(beginSlice);
      var endSliceCodeUnit = str.kmwCodePointToCodeUnit(endSlice);
      if (beginSliceCodeUnit === null || endSliceCodeUnit === null)
        return "";
      else
        return str.slice(beginSliceCodeUnit, endSliceCodeUnit);
    };
    String.prototype.kmwSubstr = function(start, length) {
      var str = String(this);
      if (start < 0) {
        start = str.kmwLength() + start;
      }
      if (start < 0)
        start = 0;
      var startCodeUnit = str.kmwCodePointToCodeUnit(start);
      var endCodeUnit = startCodeUnit;
      if (startCodeUnit === null)
        return "";
      if (arguments.length < 2) {
        endCodeUnit = str.length;
      } else {
        for (var i = 0; i < length; i++)
          endCodeUnit = str.kmwNextChar(endCodeUnit);
      }
      if (endCodeUnit === null)
        return str.substring(startCodeUnit);
      else
        return str.substring(startCodeUnit, endCodeUnit);
    };
    String.prototype.kmwSubstring = function(indexA, indexB) {
      var str = String(this), indexACodeUnit, indexBCodeUnit;
      if (typeof indexB == "undefined") {
        indexACodeUnit = str.kmwCodePointToCodeUnit(indexA);
        indexBCodeUnit = str.length;
      } else {
        if (indexA > indexB) {
          var c = indexA;
          indexA = indexB;
          indexB = c;
        }
        indexACodeUnit = str.kmwCodePointToCodeUnit(indexA);
        indexBCodeUnit = str.kmwCodePointToCodeUnit(indexB);
      }
      if (isNaN(indexACodeUnit) || indexACodeUnit === null)
        indexACodeUnit = 0;
      if (isNaN(indexBCodeUnit) || indexBCodeUnit === null)
        indexBCodeUnit = str.length;
      return str.substring(indexACodeUnit, indexBCodeUnit);
    };
    String.prototype.kmwNextChar = function(codeUnitIndex) {
      var str = String(this);
      if (codeUnitIndex === null || codeUnitIndex < 0 || codeUnitIndex >= str.length - 1) {
        return null;
      }
      var first = str.charCodeAt(codeUnitIndex);
      if (first >= 55296 && first <= 56319 && str.length > codeUnitIndex + 1) {
        var second = str.charCodeAt(codeUnitIndex + 1);
        if (second >= 56320 && second <= 57343) {
          if (codeUnitIndex == str.length - 2) {
            return null;
          }
          return codeUnitIndex + 2;
        }
      }
      return codeUnitIndex + 1;
    };
    String.prototype.kmwPrevChar = function(codeUnitIndex) {
      var str = String(this);
      if (codeUnitIndex == null || codeUnitIndex <= 0 || codeUnitIndex > str.length) {
        return null;
      }
      var second = str.charCodeAt(codeUnitIndex - 1);
      if (second >= 56320 && second <= 57343 && codeUnitIndex > 1) {
        var first = str.charCodeAt(codeUnitIndex - 2);
        if (first >= 55296 && first <= 56319) {
          return codeUnitIndex - 2;
        }
      }
      return codeUnitIndex - 1;
    };
    String.prototype.kmwCodePointToCodeUnit = function(codePointIndex) {
      if (codePointIndex === null)
        return null;
      var str = String(this);
      var codeUnitIndex = 0;
      if (codePointIndex < 0) {
        codeUnitIndex = str.length;
        for (var i = 0; i > codePointIndex; i--)
          codeUnitIndex = str.kmwPrevChar(codeUnitIndex);
        return codeUnitIndex;
      }
      if (codePointIndex == str.kmwLength())
        return str.length;
      for (var i = 0; i < codePointIndex; i++)
        codeUnitIndex = str.kmwNextChar(codeUnitIndex);
      return codeUnitIndex;
    };
    String.prototype.kmwCodeUnitToCodePoint = function(codeUnitIndex) {
      var str = String(this);
      if (codeUnitIndex === null)
        return null;
      else if (codeUnitIndex == 0)
        return 0;
      else if (codeUnitIndex < 0)
        return str.substr(codeUnitIndex).kmwLength();
      else
        return str.substr(0, codeUnitIndex).kmwLength();
    };
    String.prototype.kmwCharAt = function(codePointIndex) {
      var str = String(this);
      if (codePointIndex >= 0)
        return str.kmwSubstr(codePointIndex, 1);
      else
        return "";
    };
    String.prototype.kmwBMPNextChar = function(codeUnitIndex) {
      var str = String(this);
      if (codeUnitIndex < 0 || codeUnitIndex >= str.length - 1) {
        return null;
      }
      return codeUnitIndex + 1;
    };
    String.prototype.kmwBMPPrevChar = function(codeUnitIndex) {
      var str = String(this);
      if (codeUnitIndex <= 0 || codeUnitIndex > str.length) {
        return null;
      }
      return codeUnitIndex - 1;
    };
    String.prototype.kmwBMPCodePointToCodeUnit = function(codePointIndex) {
      return codePointIndex;
    };
    String.prototype.kmwBMPCodeUnitToCodePoint = function(codeUnitIndex) {
      return codeUnitIndex;
    };
    String.prototype.kmwBMPLength = function() {
      var str = String(this);
      return str.length;
    };
    String.prototype.kmwBMPSubstr = function(n, ln) {
      var str = String(this);
      if (n > -1)
        return str.substr(n, ln);
      else
        return str.substr(str.length + n, -n);
    };
    String.kmwEnableSupplementaryPlane = function(bEnable) {
      var p = String.prototype;
      String._kmwFromCharCode = bEnable ? String.kmwFromCharCode : String.fromCharCode;
      p._kmwCharAt = bEnable ? p.kmwCharAt : p.charAt;
      p._kmwCharCodeAt = bEnable ? p.kmwCharCodeAt : p.charCodeAt;
      p._kmwIndexOf = bEnable ? p.kmwIndexOf : p.indexOf;
      p._kmwLastIndexOf = bEnable ? p.kmwLastIndexOf : p.lastIndexOf;
      p._kmwSlice = bEnable ? p.kmwSlice : p.slice;
      p._kmwSubstring = bEnable ? p.kmwSubstring : p.substring;
      p._kmwSubstr = bEnable ? p.kmwSubstr : p.kmwBMPSubstr;
      p._kmwLength = bEnable ? p.kmwLength : p.kmwBMPLength;
      p._kmwNextChar = bEnable ? p.kmwNextChar : p.kmwBMPNextChar;
      p._kmwPrevChar = bEnable ? p.kmwPrevChar : p.kmwBMPPrevChar;
      p._kmwCodePointToCodeUnit = bEnable ? p.kmwCodePointToCodeUnit : p.kmwBMPCodePointToCodeUnit;
      p._kmwCodeUnitToCodePoint = bEnable ? p.kmwCodeUnitToCodePoint : p.kmwBMPCodeUnitToCodePoint;
    };
    if (!String._kmwFromCharCode) {
      String.kmwEnableSupplementaryPlane(false);
    }
  }
  extendString();

  // ../../../../common/web/utils/build/obj/managedPromise.js
  var ManagedPromise = /* @__PURE__ */ function() {
    function ManagedPromise2(executor) {
      var _this = this;
      this._hasResolved = false;
      this._hasRejected = false;
      this._promise = new Promise(function(resolve, reject) {
        _this.resolve = function(value) {
          _this._hasResolved = true;
          resolve(value);
        };
        _this.reject = function(reason) {
          _this._hasRejected = true;
          reject(reason);
        };
        if (executor) {
          executor(_this.resolve, _this.reject);
        }
      });
    }
    Object.defineProperty(ManagedPromise2.prototype, "hasResolved", {
      get: function() {
        return this._hasResolved;
      },
      enumerable: false,
      configurable: true
    });
    Object.defineProperty(ManagedPromise2.prototype, "hasRejected", {
      get: function() {
        return this._hasRejected;
      },
      enumerable: false,
      configurable: true
    });
    Object.defineProperty(ManagedPromise2.prototype, "hasFinalized", {
      get: function() {
        return this.hasResolved || this.hasRejected;
      },
      enumerable: false,
      configurable: true
    });
    ManagedPromise2.prototype.then = function(onfulfilled, onrejected) {
      return this._promise.then(onfulfilled, onrejected);
    };
    ManagedPromise2.prototype.catch = function(onrejected) {
      return this._promise.catch(onrejected);
    };
    ManagedPromise2.prototype.finally = function(onfinally) {
      return this._promise.finally(onfinally);
    };
    Object.defineProperty(ManagedPromise2.prototype, "corePromise", {
      get: function() {
        return this._promise;
      },
      enumerable: false,
      configurable: true
    });
    return ManagedPromise2;
  }();
  var managedPromise_default = ManagedPromise;

  // ../../../../common/web/keyboard-processor/build/obj/keyboards/defaultLayouts.js
  var Layouts = /* @__PURE__ */ function() {
    function Layouts2() {
    }
    Layouts2.buildDefaultLayout = function(PVK, keyboard, formFactor) {
      var layoutType = formFactor;
      if (typeof Layouts2.dfltLayout[layoutType] != "object") {
        layoutType = "desktop";
      }
      var kbdBitmask = codes_default.modifierBitmasks["NON_CHIRAL"];
      var kbdDevVersion = version_default.CURRENT;
      if (keyboard) {
        kbdBitmask = keyboard.modifierBitmask;
        kbdDevVersion = keyboard.compilerVersion;
      }
      if (!PVK) {
        PVK = this.DEFAULT_RAW_SPEC;
      }
      var layout = deepCopy(Layouts2.dfltLayout[layoutType]);
      var n, layers = layout["layer"], keyLabels = PVK["KLS"], key102 = PVK["K102"];
      var i, j, k, m, row, rows, key, keys;
      var chiral = (kbdBitmask & codes_default.modifierBitmasks.IS_CHIRAL) != 0;
      if (PVK["F"]) {
        var legacyFontSpec = /^(?:(?:italic|bold) )* *[0-9.eE-]+(?:[a-z]+) "(.+)"$/.exec(PVK["F"]);
        if (legacyFontSpec) {
          layout.font = legacyFontSpec[1];
        }
      }
      var kmw10Plus = !(typeof keyLabels == "undefined" || !keyLabels);
      if (!kmw10Plus) {
        keyLabels = PVK["KLS"] = Layouts2.processLegacyDefinitions(PVK["BK"]);
      }
      var specialLabel = /\*\w+\*/;
      var validIdList = Object.getOwnPropertyNames(keyLabels), invalidIdList = [];
      validIdList.splice(validIdList.indexOf("default"), 1);
      validIdList = ["default"].concat(validIdList);
      if (keyboard && keyboard.emulatesAltGr) {
        if (validIdList.indexOf("leftctrl-leftalt") == -1 && validIdList.indexOf("rightalt") != -1) {
          validIdList.push("leftctrl-leftalt");
          keyLabels["leftctrl-leftalt"] = keyLabels["rightalt"];
        }
        if (validIdList.indexOf("leftctrl-leftalt-shift") == -1 && validIdList.indexOf("rightalt-shift") != -1) {
          validIdList.push("leftctrl-leftalt-shift");
          keyLabels["leftctrl-leftalt-shift"] = keyLabels["rightalt-shift"];
        }
      }
      layout["displayUnderlying"] = keyboard ? !!keyboard.scriptObject["KDU"] : false;
      if (formFactor == "desktop") {
        invalidIdList = Layouts2.generateLayerIds(chiral);
        for (n = 0; n < invalidIdList.length; n++) {
          if (validIdList.indexOf(invalidIdList[n]) != -1) {
            invalidIdList.splice(n--, 1);
          }
        }
      }
      var idList = validIdList.concat(invalidIdList);
      if (kmw10Plus && formFactor != "desktop") {
        var shiftKey = null;
        rows = layers[0]["row"];
        for (var r = 0; r < rows.length; r++) {
          keys = rows[r]["key"];
          for (var c = 0; c < keys.length; c++) {
            key = keys[c];
            if (key["id"] == "K_SHIFT") {
              shiftKey = key;
            }
          }
        }
        if (shiftKey) {
          shiftKey["sk"] = [];
          for (var layerID in keyLabels) {
            if (layerID == "default" || layerID == "shift") {
              continue;
            }
            var specialChar = Layouts2.modifierSpecials[layerID];
            var subkey = {
              id: "K_" + specialChar,
              text: specialChar,
              sp: "1",
              nextlayer: layerID
            };
            shiftKey["sk"].push(subkey);
          }
        } else {
          console.warn("Error in default layout - cannot find default Shift key!");
        }
      }
      for (n = 0; n < idList.length; n++) {
        if (n > 0) {
          layers[n] = deepCopy(layers[0]);
        }
        layers[n]["id"] = idList[n];
        layers[n]["nextlayer"] = idList[n];
        Layouts2.formatDefaultLayer(layers[n], chiral, formFactor, !!key102);
      }
      for (n = 0; n < layers.length; n++) {
        var layer = layers[n], kx, shiftKey = null, nextKey = null, allText = "";
        var capsKey = null, numKey = null, scrollKey = null;
        var layerSpec = keyLabels[layer["id"]];
        var isShift = layer["id"] == "shift" ? 1 : 0;
        var isDefault = layer["id"] == "default" || isShift ? 1 : 0;
        rows = layer["row"];
        for (i = 0; i < rows.length; i++) {
          keys = rows[i]["key"];
          for (j = 0; j < keys.length; j++) {
            key = keys[j];
            kx = Layouts2.dfltCodes.indexOf(key["id"]);
            if (layerSpec || isDefault) {
              if (layerSpec) {
                if (kx >= 0 && kx < layerSpec.length)
                  key["text"] = layerSpec[kx];
              }
              if (isDefault && kbdDevVersion.precedes(version_default.NO_DEFAULT_KEYCAPS)) {
                if (key["id"] != "K_SPACE" && kx + 65 * isShift < Layouts2.dfltText.length && key["text"] !== null) {
                  key["text"] = key["text"] || Layouts2.dfltText[kx + 65 * isShift];
                }
              }
            }
            if (key["text"] !== null) {
              key["text"] = key["text"] || "";
            }
            switch (key["id"]) {
              case "K_SHIFT":
                shiftKey = key;
                break;
              case "K_TAB":
                nextKey = key;
                break;
              case "K_CAPS":
                capsKey = key;
                break;
              case "K_NUMLOCK":
                numKey = key;
                break;
              case "K_SCROLL":
                scrollKey = key;
                break;
            }
            if (key["sk"] != null) {
              for (k = 0; k < key["sk"].length; k++) {
                if (validIdList.indexOf(key["sk"][k]["nextlayer"]) == -1) {
                  key["sk"].splice(k--, 1);
                }
              }
              if (key["sk"].length == 0) {
                key["sk"] = null;
              }
            }
          }
        }
        layer.shiftKey = shiftKey;
        layer.capsKey = capsKey;
        layer.numKey = numKey;
        layer.scrollKey = scrollKey;
        if (formFactor != "desktop") {
          if (n > 0 && shiftKey != null) {
            shiftKey["sp"] = Layouts2.buttonClasses["SHIFT-ON"];
            shiftKey["sk"] = null;
            shiftKey["text"] = Layouts2.modifierSpecials[layers[n].id] ? Layouts2.modifierSpecials[layers[n].id] : "*Shift*";
          }
        }
      }
      return layout;
    };
    Layouts2.getLayerId = function(m) {
      var modifierCodes = codes_default.modifierCodes;
      var s = "";
      if (m == 0) {
        return "default";
      } else {
        if (m & modifierCodes["LCTRL"]) {
          s = (s.length > 0 ? s + "-" : "") + "leftctrl";
        }
        if (m & modifierCodes["RCTRL"]) {
          s = (s.length > 0 ? s + "-" : "") + "rightctrl";
        }
        if (m & modifierCodes["LALT"]) {
          s = (s.length > 0 ? s + "-" : "") + "leftalt";
        }
        if (m & modifierCodes["RALT"]) {
          s = (s.length > 0 ? s + "-" : "") + "rightalt";
        }
        if (m & modifierCodes["SHIFT"]) {
          s = (s.length > 0 ? s + "-" : "") + "shift";
        }
        if (m & modifierCodes["CTRL"]) {
          s = (s.length > 0 ? s + "-" : "") + "ctrl";
        }
        if (m & modifierCodes["ALT"]) {
          s = (s.length > 0 ? s + "-" : "") + "alt";
        }
        return s;
      }
    };
    Layouts2.generateLayerIds = function(chiral) {
      var layerCnt, offset;
      if (chiral) {
        layerCnt = 32;
        offset = 1;
      } else {
        layerCnt = 8;
        offset = 16;
      }
      var layerIds = [];
      for (var i = 0; i < layerCnt; i++) {
        layerIds.push(Layouts2.getLayerId(i * offset));
      }
      return layerIds;
    };
    Layouts2.formatDefaultLayer = function(layer, chiral, formFactor, key102) {
      var layerId = layer["id"];
      var buttonClasses = Layouts2.buttonClasses;
      for (var i = 0; i < layer["row"].length; i++) {
        var row = layer["row"][i];
        var keys = row["key"];
        for (var j = 0; j < keys.length; j++) {
          var key = keys[j];
          switch (key["id"]) {
            case "K_SHIFT":
            case "K_LSHIFT":
            case "K_RSHIFT":
              if (layerId.indexOf("shift") != -1) {
                key["sp"] = buttonClasses["SHIFT-ON"];
              }
              if (formFactor != "desktop") {
                if (layerId != "default") {
                  key["nextlayer"] = "default";
                } else {
                  key["nextlayer"] = "shift";
                }
              }
              break;
            case "K_LCTRL":
            case "K_LCONTROL":
              if (chiral) {
                if (layerId.indexOf("leftctrl") != -1) {
                  key["sp"] = buttonClasses["SHIFT-ON"];
                }
                break;
              }
            case "K_RCTRL":
            case "K_RCONTROL":
              if (chiral) {
                if (layerId.indexOf("rightctrl") != -1) {
                  key["sp"] = buttonClasses["SHIFT-ON"];
                }
                break;
              }
            case "K_CONTROL":
              if (layerId.indexOf("ctrl") != -1) {
                if (!chiral || layerId.indexOf("leftctrl") != -1 && layerId.indexOf("rightctrl") != -1) {
                  key["sp"] = buttonClasses["SHIFT-ON"];
                }
              }
              break;
            case "K_LALT":
              if (chiral) {
                if (layerId.indexOf("leftalt") != -1) {
                  key["sp"] = buttonClasses["SHIFT-ON"];
                }
                break;
              }
            case "K_RALT":
              if (chiral) {
                if (layerId.indexOf("rightalt") != -1) {
                  key["sp"] = buttonClasses["SHIFT-ON"];
                }
                break;
              }
            case "K_ALT":
              if (layerId.indexOf("alt") != -1) {
                if (!chiral || layerId.indexOf("leftalt") != -1 && layerId.indexOf("rightalt") != -1) {
                  key["sp"] = buttonClasses["SHIFT-ON"];
                }
              }
              break;
            case "K_oE2":
              if (typeof key102 == "undefined" || !key102) {
                if (formFactor == "desktop") {
                  keys.splice(j--, 1);
                  keys[0]["width"] = "200";
                } else {
                  keys[j]["sp"] = buttonClasses["HIDDEN"];
                }
              }
              break;
          }
        }
      }
    };
    Layouts2.processLegacyDefinitions = function(BK) {
      var idList = Layouts2.generateLayerIds(false);
      var KLS = {};
      for (var n = 0; n < idList.length; n++) {
        var id = idList[n], arr = [], valid = false;
        for (var k = 0; k < 65; k++) {
          var index = k + 65 * n;
          arr.push(BK[index]);
          if (index < BK.length && BK[index] != "" && k != Layouts2.dfltCodes.indexOf("K_SPACE")) {
            valid = true;
          }
        }
        if (valid) {
          KLS[id] = arr;
        }
      }
      if (typeof KLS["default"] == "undefined" || !KLS["default"]) {
        KLS["default"] = [""];
      }
      if (typeof KLS["shift"] == "undefined" || !KLS["shift"]) {
        KLS["shift"] = [""];
      }
      return KLS;
    };
    Layouts2.dfltCodes = [
      "K_BKQUOTE",
      "K_1",
      "K_2",
      "K_3",
      "K_4",
      "K_5",
      "K_6",
      "K_7",
      "K_8",
      "K_9",
      "K_0",
      "K_HYPHEN",
      "K_EQUAL",
      "K_*",
      "K_*",
      "K_*",
      "K_Q",
      "K_W",
      "K_E",
      "K_R",
      "K_T",
      "K_Y",
      "K_U",
      "K_I",
      "K_O",
      "K_P",
      "K_LBRKT",
      "K_RBRKT",
      "K_BKSLASH",
      "K_*",
      "K_*",
      "K_*",
      "K_A",
      "K_S",
      "K_D",
      "K_F",
      "K_G",
      "K_H",
      "K_J",
      "K_K",
      "K_L",
      "K_COLON",
      "K_QUOTE",
      "K_*",
      "K_*",
      "K_*",
      "K_*",
      "K_*",
      "K_oE2",
      "K_Z",
      "K_X",
      "K_C",
      "K_V",
      "K_B",
      "K_N",
      "K_M",
      "K_COMMA",
      "K_PERIOD",
      "K_SLASH",
      "K_*",
      "K_*",
      "K_*",
      "K_*",
      "K_*",
      "K_SPACE"
    ];
    Layouts2.dfltText = "`1234567890-=\xA7~~qwertyuiop[]\\~~~asdfghjkl;'~~~~~?zxcvbnm,./~~~~~ ~!@#$%^&*()_+\xA7~~QWERTYUIOP{}\\~~~ASDFGHJKL:\"~~~~~?ZXCVBNM<>?~~~~~ ";
    Layouts2.DEFAULT_RAW_SPEC = { "F": "Tahoma", "BK": Layouts2.dfltText };
    Layouts2.buttonClasses = {
      "DEFAULT": 0,
      "SHIFT": 1,
      "SHIFT-ON": 2,
      "SPECIAL": 3,
      "SPECIAL-ON": 4,
      "DEADKEY": 8,
      "BLANK": 9,
      "HIDDEN": 10
    };
    Layouts2.modifierSpecials = {
      "leftalt": "*LAlt*",
      "rightalt": "*RAlt*",
      "alt": "*Alt*",
      "leftctrl": "*LCtrl*",
      "rightctrl": "*RCtrl*",
      "ctrl": "*Ctrl*",
      "ctrl-alt": "*AltGr*",
      "leftctrl-leftalt": "*LAltCtrl*",
      "rightctrl-rightalt": "*RAltCtrl*",
      "leftctrl-leftalt-shift": "*LAltCtrlShift*",
      "rightctrl-rightalt-shift": "*RAltCtrlShift*",
      "shift": "*Shift*",
      "shift-alt": "*AltShift*",
      "shift-ctrl": "*CtrlShift*",
      "shift-ctrl-alt": "*AltCtrlShift*",
      "leftalt-shift": "*LAltShift*",
      "rightalt-shift": "*RAltShift*",
      "leftctrl-shift": "*LCtrlShift*",
      "rightctrl-shift": "*RCtrlShift*"
    };
    Layouts2.dfltLayout = {
      "desktop": {
        "font": "Tahoma,Helvetica",
        "layer": [
          {
            "id": "default",
            "row": [
              {
                "id": "1",
                "key": [
                  { "id": "K_BKQUOTE" },
                  { "id": "K_1" },
                  { "id": "K_2" },
                  { "id": "K_3" },
                  { "id": "K_4" },
                  { "id": "K_5" },
                  { "id": "K_6" },
                  { "id": "K_7" },
                  { "id": "K_8" },
                  { "id": "K_9" },
                  { "id": "K_0" },
                  { "id": "K_HYPHEN" },
                  { "id": "K_EQUAL" },
                  { "id": "K_BKSP", "text": "*BkSp*", "sp": "1", "width": "130" }
                ]
              },
              {
                "id": "2",
                "key": [
                  { "id": "K_TAB", "text": "*Tab*", "sp": "1", "width": "130" },
                  { "id": "K_Q" },
                  { "id": "K_W" },
                  { "id": "K_E" },
                  { "id": "K_R" },
                  { "id": "K_T" },
                  { "id": "K_Y" },
                  { "id": "K_U" },
                  { "id": "K_I" },
                  { "id": "K_O" },
                  { "id": "K_P" },
                  { "id": "K_LBRKT" },
                  { "id": "K_RBRKT" },
                  { "id": "K_BKSLASH" }
                ]
              },
              {
                "id": "3",
                "key": [
                  { "id": "K_CAPS", "text": "*Caps*", "sp": "1", "width": "165" },
                  { "id": "K_A" },
                  { "id": "K_S" },
                  { "id": "K_D" },
                  { "id": "K_F" },
                  { "id": "K_G" },
                  { "id": "K_H" },
                  { "id": "K_J" },
                  { "id": "K_K" },
                  { "id": "K_L" },
                  { "id": "K_COLON" },
                  { "id": "K_QUOTE" },
                  { "id": "K_ENTER", "text": "*Enter*", "sp": "1", "width": "165" }
                ]
              },
              {
                "id": "4",
                "key": [
                  { "id": "K_SHIFT", "text": "*Shift*", "sp": "1", "width": "130" },
                  { "id": "K_oE2" },
                  { "id": "K_Z" },
                  { "id": "K_X" },
                  { "id": "K_C" },
                  { "id": "K_V" },
                  { "id": "K_B" },
                  { "id": "K_N" },
                  { "id": "K_M" },
                  { "id": "K_COMMA" },
                  { "id": "K_PERIOD" },
                  { "id": "K_SLASH" },
                  { "id": "K_RSHIFT", "text": "*Shift*", "sp": "1", "width": "130" }
                ]
              },
              {
                "id": "5",
                "key": [
                  { "id": "K_LCONTROL", "text": "*Ctrl*", "sp": "1", "width": "170" },
                  { "id": "K_LALT", "text": "*Alt*", "sp": "1", "width": "160" },
                  { "id": "K_SPACE", "text": "", "width": "770" },
                  { "id": "K_RALT", "text": "*Alt*", "sp": "1", "width": "160" },
                  { "id": "K_RCONTROL", "text": "*Ctrl*", "sp": "1", "width": "170" }
                ]
              }
            ]
          }
        ]
      },
      "tablet": {
        "font": "Tahoma,Helvetica",
        "layer": [
          {
            "id": "default",
            "row": [
              {
                "id": "0",
                "key": [
                  { "id": "K_1" },
                  { "id": "K_2" },
                  { "id": "K_3" },
                  { "id": "K_4" },
                  { "id": "K_5" },
                  { "id": "K_6" },
                  { "id": "K_7" },
                  { "id": "K_8" },
                  { "id": "K_9" },
                  { "id": "K_0" },
                  { "id": "K_HYPHEN" },
                  { "id": "K_EQUAL" },
                  { "sp": "10", "width": "1" }
                ]
              },
              {
                "id": "1",
                "key": [
                  { "id": "K_Q", "pad": "25" },
                  { "id": "K_W" },
                  { "id": "K_E" },
                  { "id": "K_R" },
                  { "id": "K_T" },
                  { "id": "K_Y" },
                  { "id": "K_U" },
                  { "id": "K_I" },
                  { "id": "K_O" },
                  { "id": "K_P" },
                  { "id": "K_LBRKT" },
                  { "id": "K_RBRKT" },
                  { "sp": "10", "width": "1" }
                ]
              },
              {
                "id": "2",
                "key": [
                  { "id": "K_A", "pad": "50" },
                  { "id": "K_S" },
                  { "id": "K_D" },
                  { "id": "K_F" },
                  { "id": "K_G" },
                  { "id": "K_H" },
                  { "id": "K_J" },
                  { "id": "K_K" },
                  { "id": "K_L" },
                  { "id": "K_COLON" },
                  { "id": "K_QUOTE" },
                  { "id": "K_BKSLASH", "width": "90" }
                ]
              },
              {
                "id": "3",
                "key": [
                  { "id": "K_oE2", "width": "90" },
                  { "id": "K_Z" },
                  { "id": "K_X" },
                  { "id": "K_C" },
                  { "id": "K_V" },
                  { "id": "K_B" },
                  { "id": "K_N" },
                  { "id": "K_M" },
                  { "id": "K_COMMA" },
                  { "id": "K_PERIOD" },
                  { "id": "K_SLASH" },
                  { "id": "K_BKQUOTE" },
                  { "sp": "10", "width": "1" }
                ]
              },
              {
                "id": "4",
                "key": [
                  {
                    "id": "K_SHIFT",
                    "text": "*Shift*",
                    "sp": "1",
                    "width": "200",
                    "sk": [
                      { "id": "K_LCONTROL", "text": "*Ctrl*", "sp": "1", "width": "50", "nextlayer": "ctrl" },
                      { "id": "K_LCONTROL", "text": "*LCtrl*", "sp": "1", "width": "50", "nextlayer": "leftctrl" },
                      { "id": "K_RCONTROL", "text": "*RCtrl*", "sp": "1", "width": "50", "nextlayer": "rightctrl" },
                      { "id": "K_LALT", "text": "*Alt*", "sp": "1", "width": "50", "nextlayer": "alt" },
                      { "id": "K_LALT", "text": "*LAlt*", "sp": "1", "width": "50", "nextlayer": "leftalt" },
                      { "id": "K_RALT", "text": "*RAlt*", "sp": "1", "width": "50", "nextlayer": "rightalt" },
                      { "id": "K_ALTGR", "text": "*AltGr*", "sp": "1", "width": "50", "nextlayer": "ctrl-alt" }
                    ]
                  },
                  { "id": "K_LOPT", "text": "*Menu*", "sp": "1", "width": "150" },
                  { "id": "K_SPACE", "text": "", "width": "570" },
                  { "id": "K_BKSP", "text": "*BkSp*", "sp": "1", "width": "150" },
                  { "id": "K_ENTER", "text": "*Enter*", "sp": "1", "width": "200" }
                ]
              }
            ]
          }
        ]
      },
      "phone": {
        "font": "Tahoma,Helvetica",
        "layer": [
          {
            "id": "default",
            "row": [
              {
                "id": "0",
                "key": [
                  { "id": "K_1" },
                  { "id": "K_2" },
                  { "id": "K_3" },
                  { "id": "K_4" },
                  { "id": "K_5" },
                  { "id": "K_6" },
                  { "id": "K_7" },
                  { "id": "K_8" },
                  { "id": "K_9" },
                  { "id": "K_0" },
                  { "id": "K_HYPHEN" },
                  { "id": "K_EQUAL" },
                  { "sp": "10", "width": "1" }
                ]
              },
              {
                "id": "1",
                "key": [
                  { "id": "K_Q", "pad": "25" },
                  { "id": "K_W" },
                  { "id": "K_E" },
                  { "id": "K_R" },
                  { "id": "K_T" },
                  { "id": "K_Y" },
                  { "id": "K_U" },
                  { "id": "K_I" },
                  { "id": "K_O" },
                  { "id": "K_P" },
                  { "id": "K_LBRKT" },
                  { "id": "K_RBRKT" },
                  { "sp": "10", "width": "1" }
                ]
              },
              {
                "id": "2",
                "key": [
                  { "id": "K_A", "pad": "50" },
                  { "id": "K_S" },
                  { "id": "K_D" },
                  { "id": "K_F" },
                  { "id": "K_G" },
                  { "id": "K_H" },
                  { "id": "K_J" },
                  { "id": "K_K" },
                  { "id": "K_L" },
                  { "id": "K_COLON" },
                  { "id": "K_QUOTE" },
                  { "id": "K_BKSLASH", "width": "90" }
                ]
              },
              {
                "id": "3",
                "key": [
                  { "id": "K_oE2", "width": "90" },
                  { "id": "K_Z" },
                  { "id": "K_X" },
                  { "id": "K_C" },
                  { "id": "K_V" },
                  { "id": "K_B" },
                  { "id": "K_N" },
                  { "id": "K_M" },
                  { "id": "K_COMMA" },
                  { "id": "K_PERIOD" },
                  { "id": "K_SLASH" },
                  { "id": "K_BKQUOTE" },
                  { "sp": "10", "width": "1" }
                ]
              },
              {
                "id": "4",
                "key": [
                  {
                    "id": "K_SHIFT",
                    "text": "*Shift*",
                    "sp": "1",
                    "width": "200",
                    "sk": [
                      { "id": "K_LCONTROL", "text": "*Ctrl*", "sp": "1", "width": "50", "nextlayer": "ctrl" },
                      { "id": "K_LCONTROL", "text": "*LCtrl*", "sp": "1", "width": "50", "nextlayer": "leftctrl" },
                      { "id": "K_RCONTROL", "text": "*RCtrl*", "sp": "1", "width": "50", "nextlayer": "rightctrl" },
                      { "id": "K_LALT", "text": "*Alt*", "sp": "1", "width": "50", "nextlayer": "alt" },
                      { "id": "K_LALT", "text": "*LAlt*", "sp": "1", "width": "50", "nextlayer": "leftalt" },
                      { "id": "K_RALT", "text": "*RAlt*", "sp": "1", "width": "50", "nextlayer": "rightalt" },
                      { "id": "K_ALTGR", "text": "*AltGr*", "sp": "1", "width": "50", "nextlayer": "ctrl-alt" }
                    ]
                  },
                  { "id": "K_LOPT", "text": "*Menu*", "width": "150", "sp": "1" },
                  { "id": "K_SPACE", "width": "570", "text": "" },
                  { "id": "K_BKSP", "text": "*BkSp*", "width": "150", "sp": "1" },
                  { "id": "K_ENTER", "text": "*Enter*", "width": "200", "sp": "1" }
                ]
              }
            ]
          }
        ]
      }
    };
    return Layouts2;
  }();

  // ../../../../common/web/keyboard-processor/build/obj/keyboards/keyboard.js
  var CacheTag = /* @__PURE__ */ function() {
    function CacheTag2() {
      this.stores = {};
    }
    return CacheTag2;
  }();
  var LayoutState;
  (function(LayoutState2) {
    LayoutState2[LayoutState2["NOT_LOADED"] = void 0] = "NOT_LOADED";
    LayoutState2[LayoutState2["POLYFILLED"] = 1] = "POLYFILLED";
    LayoutState2[LayoutState2["CALIBRATED"] = 2] = "CALIBRATED";
  })(LayoutState || (LayoutState = {}));
  var Keyboard = function() {
    function Keyboard2(keyboardScript) {
      if (keyboardScript) {
        this.scriptObject = keyboardScript;
      } else {
        this.scriptObject = Keyboard2.DEFAULT_SCRIPT_OBJECT;
      }
      this.layoutStates = {};
    }
    Keyboard2.prototype.process = function(outputTarget, keystroke) {
      return this.scriptObject["gs"](outputTarget, keystroke);
    };
    Keyboard2.prototype.processNewContextEvent = function(outputTarget, keystroke) {
      return this.scriptObject["gn"] ? this.scriptObject["gn"](outputTarget, keystroke) : false;
    };
    Keyboard2.prototype.processPostKeystroke = function(outputTarget, keystroke) {
      return this.scriptObject["gpk"] ? this.scriptObject["gpk"](outputTarget, keystroke) : false;
    };
    Object.defineProperty(Keyboard2.prototype, "isHollow", {
      get: function() {
        return this.scriptObject == Keyboard2.DEFAULT_SCRIPT_OBJECT;
      },
      enumerable: false,
      configurable: true
    });
    Object.defineProperty(Keyboard2.prototype, "id", {
      get: function() {
        return this.scriptObject["KI"];
      },
      enumerable: false,
      configurable: true
    });
    Object.defineProperty(Keyboard2.prototype, "name", {
      get: function() {
        return this.scriptObject["KN"];
      },
      enumerable: false,
      configurable: true
    });
    Object.defineProperty(Keyboard2.prototype, "variableStores", {
      get: function() {
        var storeNames = this.scriptObject["KVS"];
        var values = {};
        if (Array.isArray(storeNames)) {
          for (var _i = 0, storeNames_1 = storeNames; _i < storeNames_1.length; _i++) {
            var store = storeNames_1[_i];
            values[store] = this.scriptObject[store];
          }
        }
        return values;
      },
      set: function(values) {
        var storeNames = this.scriptObject["KVS"];
        if (Array.isArray(storeNames)) {
          for (var _i = 0, storeNames_2 = storeNames; _i < storeNames_2.length; _i++) {
            var store = storeNames_2[_i];
            if (typeof values[store] == "string") {
              this.scriptObject[store] = values[store];
            }
          }
        }
      },
      enumerable: false,
      configurable: true
    });
    Object.defineProperty(Keyboard2.prototype, "_legacyLayoutSpec", {
      get: function() {
        return this.scriptObject["KV"];
      },
      enumerable: false,
      configurable: true
    });
    Object.defineProperty(Keyboard2.prototype, "_layouts", {
      get: function() {
        return this.scriptObject["KVKL"];
      },
      set: function(value) {
        this.scriptObject["KVKL"] = value;
      },
      enumerable: false,
      configurable: true
    });
    Object.defineProperty(Keyboard2.prototype, "compilerVersion", {
      get: function() {
        return new version_default(this.scriptObject["KVER"]);
      },
      enumerable: false,
      configurable: true
    });
    Object.defineProperty(Keyboard2.prototype, "isMnemonic", {
      get: function() {
        return !!this.scriptObject["KM"];
      },
      enumerable: false,
      configurable: true
    });
    Object.defineProperty(Keyboard2.prototype, "definesPositionalOrMnemonic", {
      get: function() {
        return typeof this.scriptObject["KM"] != "undefined";
      },
      enumerable: false,
      configurable: true
    });
    Object.defineProperty(Keyboard2.prototype, "helpText", {
      get: function() {
        return this.scriptObject["KH"];
      },
      enumerable: false,
      configurable: true
    });
    Object.defineProperty(Keyboard2.prototype, "hasScript", {
      get: function() {
        return !!this.scriptObject["KHF"];
      },
      enumerable: false,
      configurable: true
    });
    Keyboard2.prototype.embedScript = function(e) {
      this.scriptObject["KHF"](e);
    };
    Object.defineProperty(Keyboard2.prototype, "oskStyling", {
      get: function() {
        return this.scriptObject["KCSS"];
      },
      enumerable: false,
      configurable: true
    });
    Object.defineProperty(Keyboard2.prototype, "isCJK", {
      get: function() {
        var lg;
        if (typeof this.scriptObject["KLC"] != "undefined") {
          lg = this.scriptObject["KLC"];
        } else if (typeof this.scriptObject["LanguageCode"] != "undefined") {
          lg = this.scriptObject["LanguageCode"];
        }
        return lg == "cmn" || lg == "jpn" || lg == "kor";
      },
      enumerable: false,
      configurable: true
    });
    Object.defineProperty(Keyboard2.prototype, "isRTL", {
      get: function() {
        return !!this.scriptObject["KRTL"];
      },
      enumerable: false,
      configurable: true
    });
    Object.defineProperty(Keyboard2.prototype, "modifierBitmask", {
      get: function() {
        return this.scriptObject["KMBM"] || codes_default.modifierBitmasks["NON_CHIRAL"];
      },
      enumerable: false,
      configurable: true
    });
    Object.defineProperty(Keyboard2.prototype, "isChiral", {
      get: function() {
        return !!(this.modifierBitmask & codes_default.modifierBitmasks["IS_CHIRAL"]);
      },
      enumerable: false,
      configurable: true
    });
    Object.defineProperty(Keyboard2.prototype, "desktopFont", {
      get: function() {
        if (this.scriptObject["KV"]) {
          return this.scriptObject["KV"]["F"];
        } else {
          return null;
        }
      },
      enumerable: false,
      configurable: true
    });
    Object.defineProperty(Keyboard2.prototype, "cacheTag", {
      get: function() {
        var tag = this.scriptObject["_kmw"];
        if (!tag) {
          tag = new CacheTag();
          this.scriptObject["_kmw"] = tag;
        }
        return tag;
      },
      enumerable: false,
      configurable: true
    });
    Object.defineProperty(Keyboard2.prototype, "explodedStores", {
      get: function() {
        return this.cacheTag.stores;
      },
      enumerable: false,
      configurable: true
    });
    Object.defineProperty(Keyboard2.prototype, "emulatesAltGr", {
      get: function() {
        var modifierCodes = codes_default.modifierCodes;
        if (!this.isChiral) {
          return false;
        }
        if (this._legacyLayoutSpec == null) {
          return false;
        }
        var layers = this._legacyLayoutSpec["KLS"];
        if (!layers) {
          return false;
        }
        var emulationMask = modifierCodes["LCTRL"] | modifierCodes["LALT"];
        var unshiftedEmulationLayer = layers[Layouts.getLayerId(emulationMask)];
        var shiftedEmulationLayer = layers[Layouts.getLayerId(modifierCodes["SHIFT"] | emulationMask)];
        if (unshiftedEmulationLayer != null && unshiftedEmulationLayer != layers[Layouts.getLayerId(modifierCodes["RALT"])]) {
          return false;
        }
        if (shiftedEmulationLayer != null && shiftedEmulationLayer != layers[Layouts.getLayerId(modifierCodes["RALT"] | modifierCodes["SHIFT"])]) {
          return false;
        }
        var bitmask = this.modifierBitmask;
        if ((bitmask & emulationMask) != emulationMask) {
          return true;
        }
        if (unshiftedEmulationLayer == null && shiftedEmulationLayer == null) {
          return true;
        }
        return true;
      },
      enumerable: false,
      configurable: true
    });
    Object.defineProperty(Keyboard2.prototype, "usesSupplementaryPlaneChars", {
      get: function() {
        var kbd = this.scriptObject;
        return kbd && (kbd["KS"] && kbd["KS"] == 1 || kbd["KN"] == "Hieroglyphic");
      },
      enumerable: false,
      configurable: true
    });
    Object.defineProperty(Keyboard2.prototype, "version", {
      get: function() {
        return this.scriptObject["KBVER"] || "";
      },
      enumerable: false,
      configurable: true
    });
    Keyboard2.prototype.usesDesktopLayoutOnDevice = function(device) {
      if (this.scriptObject["KVKL"]) {
        return device.formFactor == deviceSpec_default.FormFactor.Desktop;
      } else {
        return true;
      }
    };
    Keyboard2.prototype.notify = function(_PCommand, _PTarget, _PData) {
      if (typeof this.scriptObject["KNS"] == "function") {
        this.scriptObject["KNS"](_PCommand, _PTarget, _PData);
      }
    };
    Keyboard2.prototype.findOrConstructLayout = function(formFactor) {
      if (this._layouts) {
        if (this._layouts[formFactor] !== void 0) {
          return this._layouts[formFactor];
        } else if (formFactor == deviceSpec_default.FormFactor.Phone && this._layouts[deviceSpec_default.FormFactor.Tablet]) {
          return this._layouts[deviceSpec_default.FormFactor.Phone] = this._layouts[deviceSpec_default.FormFactor.Tablet];
        } else if (formFactor == deviceSpec_default.FormFactor.Tablet && this._layouts[deviceSpec_default.FormFactor.Phone]) {
          return this._layouts[deviceSpec_default.FormFactor.Tablet] = this._layouts[deviceSpec_default.FormFactor.Phone];
        }
      }
      var rawSpecifications = null;
      if (this._legacyLayoutSpec != null && this._legacyLayoutSpec["KLS"]) {
        rawSpecifications = this._legacyLayoutSpec;
      } else if (this._legacyLayoutSpec != null && this._legacyLayoutSpec["BK"] != null) {
        var keyCaps = this._legacyLayoutSpec["BK"];
        for (var i = 0; i < keyCaps.length; i++) {
          if (keyCaps[i].length > 0) {
            rawSpecifications = this._legacyLayoutSpec;
            break;
          }
        }
      }
      if (!rawSpecifications && (this.helpText == "" || formFactor != deviceSpec_default.FormFactor.Desktop)) {
        rawSpecifications = { "F": "Tahoma", "BK": Layouts.dfltText };
      }
      if (!this._layouts) {
        this._layouts = {};
      }
      if (rawSpecifications) {
        var layout = this._layouts[formFactor] = Layouts.buildDefaultLayout(rawSpecifications, this, formFactor);
        layout.isDefault = true;
        return layout;
      } else {
        this._layouts[formFactor] = null;
        return null;
      }
    };
    Keyboard2.prototype.layout = function(formFactor) {
      var rawLayout = this.findOrConstructLayout(formFactor);
      if (rawLayout) {
        if (this.layoutStates[formFactor] == LayoutState.NOT_LOADED) {
          rawLayout = ActiveLayout.polyfill(rawLayout, this, formFactor);
          this.layoutStates[formFactor] = LayoutState.POLYFILLED;
        }
        return rawLayout;
      } else {
        return null;
      }
    };
    Keyboard2.prototype.refreshLayouts = function() {
      var formFactors = [deviceSpec_default.FormFactor.Desktop, deviceSpec_default.FormFactor.Phone, deviceSpec_default.FormFactor.Tablet];
      var _this = this;
      formFactors.forEach(function(form) {
        _this.layoutStates[form] = LayoutState.NOT_LOADED;
      });
    };
    Keyboard2.prototype.markLayoutCalibrated = function(formFactor) {
      if (this.layoutStates[formFactor] != LayoutState.NOT_LOADED) {
        this.layoutStates[formFactor] = LayoutState.CALIBRATED;
      }
    };
    Keyboard2.prototype.getLayoutState = function(formFactor) {
      return this.layoutStates[formFactor];
    };
    Keyboard2.prototype.constructNullKeyEvent = function(device, stateKeys) {
      stateKeys = stateKeys || {
        K_CAPS: false,
        K_NUMLOCK: false,
        K_SCROLL: false
      };
      var keyEvent = keyEvent_default.constructNullKeyEvent(device);
      this.setSyntheticEventDefaults(keyEvent, stateKeys);
      return keyEvent;
    };
    Keyboard2.prototype.constructKeyEvent = function(key, device, stateKeys) {
      var Lkc = key.baseKeyEvent;
      Lkc.device = device;
      if (this.isMnemonic) {
        Lkc.setMnemonicCode(key.layer.indexOf("shift") != -1, stateKeys["K_CAPS"]);
      }
      this.setSyntheticEventDefaults(Lkc, stateKeys);
      var bitmap = {
        "K_CAPS": codes_default.stateBitmasks.CAPS,
        "K_NUMLOCK": codes_default.stateBitmasks.NUM_LOCK,
        "K_SCROLL": codes_default.stateBitmasks.SCROLL_LOCK
      };
      var bitmask = bitmap[Lkc.kName];
      if (bitmask) {
        Lkc.Lstates ^= bitmask;
        Lkc.LmodifierChange = true;
      }
      return Lkc;
    };
    Keyboard2.prototype.setSyntheticEventDefaults = function(Lkc, stateKeys) {
      if (!Lkc.device.touchable) {
        Lkc.Lstates = 0;
        Lkc.Lstates |= stateKeys["K_CAPS"] ? codes_default.modifierCodes["CAPS"] : codes_default.modifierCodes["NO_CAPS"];
        Lkc.Lstates |= stateKeys["K_NUMLOCK"] ? codes_default.modifierCodes["NUM_LOCK"] : codes_default.modifierCodes["NO_NUM_LOCK"];
        Lkc.Lstates |= stateKeys["K_SCROLL"] ? codes_default.modifierCodes["SCROLL_LOCK"] : codes_default.modifierCodes["NO_SCROLL_LOCK"];
      }
      if (Lkc.kName && Lkc.kName.substr(0, 2) == "U_") {
        Lkc.LisVirtualKey = false;
      }
      if (typeof Lkc.Lcode == "undefined") {
        Lkc.Lcode = this.getVKDictionaryCode(Lkc.kName);
        if (!Lkc.Lcode) {
          Lkc.Lcode = 1;
        }
      }
      if ((Lkc.Lmodifiers & codes_default.modifierBitmasks["ALT_GR_SIM"]) == codes_default.modifierBitmasks["ALT_GR_SIM"] && this.emulatesAltGr) {
        Lkc.Lmodifiers &= ~codes_default.modifierBitmasks["ALT_GR_SIM"];
        Lkc.Lmodifiers |= codes_default.modifierCodes["RALT"];
      }
    };
    Keyboard2.prototype.getVKDictionaryCode = function(keyName) {
      if (!this.scriptObject["VKDictionary"]) {
        var a = [];
        if (typeof this.scriptObject["KVKD"] == "string") {
          var s = this.scriptObject["KVKD"].split(" ");
          for (var i = 0; i < s.length; i++) {
            a[s[i].toUpperCase()] = i + 256;
          }
        }
        this.scriptObject["VKDictionary"] = a;
      }
      var res = this.scriptObject["VKDictionary"][keyName.toUpperCase()];
      return res ? res : 0;
    };
    Keyboard2.DEFAULT_SCRIPT_OBJECT = {
      "gs": function(outputTarget, keystroke) {
        return false;
      },
      "KI": "",
      "KN": "",
      "KV": Layouts.DEFAULT_RAW_SPEC,
      "KM": 0
    };
    return Keyboard2;
  }();
  var keyboard_default = Keyboard;

  // ../../../../common/web/keyboard-processor/build/obj/keyboards/keyboardHarness.js
  var MinimalKeymanGlobal = {
    osk: codes_default
  };
  var KeyboardHarness = /* @__PURE__ */ function() {
    function KeyboardHarness2(_jsGlobal, keymanGlobal) {
      this.loadedKeyboard = null;
      this._jsGlobal = _jsGlobal;
      this.keymanGlobal = keymanGlobal;
      this.install();
    }
    KeyboardHarness2.prototype.KR = function(scriptObject) {
      if (this.loadedKeyboard) {
        throw new Error("Unexpected state:  the most-recently loaded keyboard field was not properly reset.");
      }
      this.loadedKeyboard = new keyboard_default(scriptObject);
    };
    KeyboardHarness2.prototype.install = function() {
      this._jsGlobal.KeymanWeb = this;
      this._jsGlobal.keyman = this.keymanGlobal;
    };
    KeyboardHarness2.prototype.uninstall = function() {
      if (this._jsGlobal.KeymanWeb == this) {
        delete this._jsGlobal.KeymanWeb;
      }
      if (this._jsGlobal.keyman == this.keymanGlobal) {
        delete this._jsGlobal.keyman;
      }
    };
    return KeyboardHarness2;
  }();

  // ../../../../common/web/keyboard-processor/build/obj/keyboards/keyboardLoaderBase.js
  var KeyboardScriptError = /* @__PURE__ */ function(_super) {
    (0, build_exports.__extends)(KeyboardScriptError2, _super);
    function KeyboardScriptError2(msg, cause) {
      var _this = _super.call(this, msg) || this;
      _this.cause = cause;
      return _this;
    }
    return KeyboardScriptError2;
  }(Error);
  var KeyboardMissingError = function(_super) {
    (0, build_exports.__extends)(KeyboardMissingError2, _super);
    function KeyboardMissingError2(msg, cause) {
      var _this = _super.call(this, msg) || this;
      _this.cause = cause;
      return _this;
    }
    return KeyboardMissingError2;
  }(Error);
  var UriBasedErrorBuilder = function() {
    function UriBasedErrorBuilder2(uri) {
      this.uri = uri;
    }
    UriBasedErrorBuilder2.prototype.missingError = function(err) {
      var msg = "Cannot find the keyboard at ".concat(this.uri, ".");
      return new KeyboardMissingError(msg, err);
    };
    UriBasedErrorBuilder2.prototype.scriptError = function(err) {
      var msg = "Error registering the keyboard script at ".concat(this.uri, "; it may contain an error.");
      return new KeyboardScriptError(msg, err);
    };
    return UriBasedErrorBuilder2;
  }();
  var StubBasedErrorBuilder = function() {
    function StubBasedErrorBuilder2(stub) {
      this.stub = stub;
    }
    StubBasedErrorBuilder2.prototype.missingError = function(err) {
      var stub = this.stub;
      var msg = "Cannot find the ".concat(stub.name, " keyboard for ").concat(stub.langName, " at ").concat(stub.filename, ".");
      return new KeyboardMissingError(msg, err);
    };
    StubBasedErrorBuilder2.prototype.scriptError = function(err) {
      var stub = this.stub;
      var msg = "Error registering the ".concat(stub.name, " keyboard for ").concat(stub.langName, "; keyboard script at ").concat(stub.filename, " may contain an error.");
      return new KeyboardScriptError(msg, err);
    };
    return StubBasedErrorBuilder2;
  }();
  var KeyboardLoaderBase = function() {
    function KeyboardLoaderBase2(harness) {
      this._harness = harness;
    }
    Object.defineProperty(KeyboardLoaderBase2.prototype, "harness", {
      get: function() {
        return this._harness;
      },
      enumerable: false,
      configurable: true
    });
    KeyboardLoaderBase2.prototype.loadKeyboardFromPath = function(uri) {
      this.harness.install();
      var promise = this.loadKeyboardInternal(uri, new UriBasedErrorBuilder(uri));
      return promise;
    };
    KeyboardLoaderBase2.prototype.loadKeyboardFromStub = function(stub) {
      this.harness.install();
      var promise = this.loadKeyboardInternal(stub.filename, new StubBasedErrorBuilder(stub), stub.id);
      return promise;
    };
    return KeyboardLoaderBase2;
  }();
  var keyboardLoaderBase_default = KeyboardLoaderBase;

  // ../../../../common/web/keyboard-processor/build/obj/keyboards/spacebarText.js
  var SpacebarText;
  (function(SpacebarText2) {
    SpacebarText2["KEYBOARD"] = "keyboard";
    SpacebarText2["LANGUAGE"] = "language";
    SpacebarText2["LANGUAGE_KEYBOARD"] = "languageKeyboard";
    SpacebarText2["BLANK"] = "blank";
  })(SpacebarText || (SpacebarText = {}));
  var spacebarText_default = SpacebarText;

  // ../../../../common/web/keyboard-processor/build/obj/keyboards/keyboardProperties.js
  function internalizeFont(fontObj, fontPath) {
    if (!fontObj) {
      return void 0;
    } else {
      return {
        family: fontObj.family,
        path: fontPath,
        files: fontObj.filename || fontObj.source
      };
    }
  }
  var KeyboardProperties = /* @__PURE__ */ function() {
    function KeyboardProperties2(arg1, arg2) {
      if (!(typeof arg1 == "string")) {
        if (arg1["KI"] || arg1["KL"] || arg1["KLC"] || arg1["KFont"] || arg1["KOskFont"]) {
          var other = arg1;
          this.KI = other.KI;
          this.KN = other.KN;
          this.KL = other.KL;
          this.KLC = other.KLC;
          this.KFont = other.KFont;
          this.KOskFont = other.KOskFont;
          this._displayName = other instanceof KeyboardProperties2 ? other._displayName : other.displayName;
        } else {
          var apiStub = arg1;
          apiStub.languages || (apiStub.languages = apiStub.language);
          this.KI = apiStub.id, this.KN = apiStub.name, this.KL = apiStub.languages.name, this.KLC = apiStub.languages.id, this.KFont = internalizeFont(apiStub.languages.font, arg2), this.KOskFont = internalizeFont(apiStub.languages.oskFont, arg2);
        }
      } else {
        this.KI = arg1;
        this.KLC = arg2;
      }
    }
    Object.defineProperty(KeyboardProperties2, "spacebarTextMode", {
      get: function() {
        if (typeof this.spacebarTextModeSrc == "string") {
          return this.spacebarTextModeSrc;
        } else {
          return this.spacebarTextModeSrc();
        }
      },
      set: function(source) {
        this.spacebarTextModeSrc = source;
      },
      enumerable: false,
      configurable: true
    });
    KeyboardProperties2.fromMultilanguageAPIStub = function(apiStub) {
      var stubs = [];
      apiStub.languages || (apiStub.languages = apiStub.language);
      for (var _i = 0, _a = apiStub.languages; _i < _a.length; _i++) {
        var langSpec = _a[_i];
        var stub = {
          id: apiStub.id,
          name: apiStub.name,
          languages: langSpec
        };
        stubs.push(new KeyboardProperties2(stub));
      }
      return stubs;
    };
    Object.defineProperty(KeyboardProperties2.prototype, "id", {
      get: function() {
        return this.KI;
      },
      enumerable: false,
      configurable: true
    });
    Object.defineProperty(KeyboardProperties2.prototype, "name", {
      get: function() {
        return this.KN;
      },
      enumerable: false,
      configurable: true
    });
    Object.defineProperty(KeyboardProperties2.prototype, "langId", {
      get: function() {
        return this.KLC;
      },
      enumerable: false,
      configurable: true
    });
    Object.defineProperty(KeyboardProperties2.prototype, "langName", {
      get: function() {
        return this.KL;
      },
      enumerable: false,
      configurable: true
    });
    Object.defineProperty(KeyboardProperties2.prototype, "displayName", {
      get: function() {
        if (this._displayName) {
          return this._displayName;
        }
        var kbdName = this.KN;
        var lgName = this.KL;
        switch (KeyboardProperties2.spacebarTextMode) {
          case spacebarText_default.KEYBOARD:
            return kbdName;
          case spacebarText_default.LANGUAGE:
            return lgName;
          case spacebarText_default.LANGUAGE_KEYBOARD:
            return kbdName == lgName ? lgName : lgName + " - " + kbdName;
          case spacebarText_default.BLANK:
            return "";
          default:
            return kbdName;
        }
      },
      set: function(name) {
        this._displayName = name;
      },
      enumerable: false,
      configurable: true
    });
    Object.defineProperty(KeyboardProperties2.prototype, "textFont", {
      get: function() {
        return this.KFont;
      },
      enumerable: false,
      configurable: true
    });
    Object.defineProperty(KeyboardProperties2.prototype, "oskFont", {
      get: function() {
        return this.KOskFont;
      },
      enumerable: false,
      configurable: true
    });
    KeyboardProperties2.prototype.validateForOSK = function() {
      if (!this.KLC) {
        if (this.KI || this.KN) {
          return new Error("No language code was specified for use with the ".concat(this.KI || this.KN, " keyboard"));
        } else {
          return new Error("No language code was specified for use with the corresponding keyboard");
        }
      }
      if (this.displayName === void 0 || KeyboardProperties2.spacebarTextMode != spacebarText_default.BLANK && !this.displayName) {
        return new Error("A display name is missing for this keyboard and cannot be generated under current settings.");
      }
      return null;
    };
    KeyboardProperties2.prototype.validateForCustomKeyboard = function() {
      if (!this.KI || !this.KN || !this.KL || !this.KLC) {
        return new Error("To use a custom keyboard, you must specify keyboard id, keyboard name, language and language code.");
      } else {
        return null;
      }
    };
    KeyboardProperties2.spacebarTextModeSrc = spacebarText_default.KEYBOARD;
    return KeyboardProperties2;
  }();
  var keyboardProperties_default = KeyboardProperties;

  // ../../../../common/web/keyboard-processor/build/obj/text/deadkeys.js
  var Deadkey = /* @__PURE__ */ function() {
    function Deadkey2(pos, id) {
      this.p = pos;
      this.d = id;
      this.o = Deadkey2.ordinalSeed++;
    }
    Deadkey2.prototype.match = function(p, d) {
      var result = this.p == p && this.d == d;
      return result;
    };
    Deadkey2.prototype.set = function() {
      this.matched = 1;
    };
    Deadkey2.prototype.reset = function() {
      this.matched = 0;
    };
    Deadkey2.prototype.before = function(other) {
      return this.o < other.o;
    };
    Deadkey2.prototype.clone = function() {
      var dk = new Deadkey2(this.p, this.d);
      dk.o = this.o;
      return dk;
    };
    Deadkey2.ordinalSeed = 0;
    Deadkey2.sortFunc = function(a, b) {
      if (a.p != b.p) {
        return b.p - a.p;
      } else {
        return b.o - a.o;
      }
    };
    return Deadkey2;
  }();
  var DeadkeyTracker = function() {
    function DeadkeyTracker2() {
      this.dks = [];
    }
    DeadkeyTracker2.prototype.toSortedArray = function() {
      this.dks = this.dks.sort(Deadkey.sortFunc);
      return [].concat(this.dks);
    };
    DeadkeyTracker2.prototype.clone = function() {
      var dkt = new DeadkeyTracker2();
      var dks = this.toSortedArray();
      dkt.dks = [];
      dks.forEach(function(value) {
        dkt.dks.push(value.clone());
      });
      return dkt;
    };
    DeadkeyTracker2.prototype.isMatch = function(caretPos, n, d) {
      if (this.dks.length == 0) {
        return false;
      }
      var sp = caretPos;
      n = sp - n;
      for (var i = 0; i < this.dks.length; i++) {
        if (this.dks[i].match(n, d) && !this.dks[i].matched) {
          this.dks[i].set();
          return true;
        }
      }
      this.resetMatched();
      return false;
    };
    DeadkeyTracker2.prototype.add = function(dk) {
      this.dks = this.dks.concat(dk);
    };
    DeadkeyTracker2.prototype.remove = function(dk) {
      var index = this.dks.indexOf(dk);
      this.dks.splice(index, 1);
    };
    DeadkeyTracker2.prototype.clear = function() {
      this.dks = [];
    };
    DeadkeyTracker2.prototype.resetMatched = function() {
      for (var _i = 0, _a = this.dks; _i < _a.length; _i++) {
        var dk = _a[_i];
        dk.reset();
      }
    };
    DeadkeyTracker2.prototype.deleteMatched = function() {
      for (var Li = 0; Li < this.dks.length; Li++) {
        if (this.dks[Li].matched) {
          this.dks.splice(Li--, 1);
        }
      }
    };
    DeadkeyTracker2.prototype.adjustPositions = function(Lstart, Ldelta) {
      if (Ldelta == 0) {
        return;
      }
      for (var _i = 0, _a = this.dks; _i < _a.length; _i++) {
        var dk = _a[_i];
        if (dk.p > Lstart) {
          dk.p += Ldelta;
        }
      }
    };
    DeadkeyTracker2.prototype.count = function() {
      return this.dks.length;
    };
    return DeadkeyTracker2;
  }();

  // ../../../../common/web/keyboard-processor/build/obj/text/systemStores.js
  var SystemStore = /* @__PURE__ */ function() {
    function SystemStore2(id) {
      this.id = id;
    }
    SystemStore2.prototype.set = function(value) {
      throw new Error("System store with ID " + this.id + " may not be directly set.");
    };
    return SystemStore2;
  }();
  var MutableSystemStore = function(_super) {
    (0, build_exports.__extends)(MutableSystemStore2, _super);
    function MutableSystemStore2(id, defaultValue) {
      var _this = _super.call(this, id) || this;
      _this.handler = null;
      _this._value = defaultValue;
      return _this;
    }
    Object.defineProperty(MutableSystemStore2.prototype, "value", {
      get: function() {
        return this._value;
      },
      enumerable: false,
      configurable: true
    });
    MutableSystemStore2.prototype.matches = function(value) {
      return this._value == value;
    };
    MutableSystemStore2.prototype.set = function(value) {
      if (this.handler) {
        if (this.handler(this, value)) {
          return;
        }
      }
      this._value = value;
    };
    return MutableSystemStore2;
  }(SystemStore);
  var PlatformSystemStore = function(_super) {
    (0, build_exports.__extends)(PlatformSystemStore2, _super);
    function PlatformSystemStore2(keyboardInterface) {
      var _this = _super.call(this, SystemStoreIDs.TSS_PLATFORM) || this;
      _this.kbdInterface = keyboardInterface;
      return _this;
    }
    PlatformSystemStore2.prototype.matches = function(value) {
      var i, constraint, constraints = value.split(" ");
      var device = this.kbdInterface.activeDevice;
      for (i = 0; i < constraints.length; i++) {
        constraint = constraints[i].toLowerCase();
        switch (constraint) {
          case "touch":
          case "hardware":
            if (device.touchable != (constraint == "touch")) {
              return false;
            }
            break;
          case "macos":
          case "mac":
            constraint = "macosx";
          case "macosx":
          case "windows":
          case "android":
          case "ios":
          case "linux":
            if (device.OS != constraint) {
              return false;
            }
            break;
          case "tablet":
          case "phone":
          case "desktop":
            if (device.formFactor != constraint) {
              return false;
            }
            break;
          case "web":
            if (device.browser == "native") {
              return false;
            }
            break;
          case "native":
          case "chrome":
          case "firefox":
          case "safari":
          case "edge":
          case "opera":
            if (device.browser != constraint) {
              return false;
            }
            break;
          default:
            return false;
        }
      }
      return true;
    };
    return PlatformSystemStore2;
  }(SystemStore);

  // ../../../../common/web/keyboard-processor/build/obj/text/outputTarget.js
  extendString();
  function isEmptyTransform(transform) {
    var _a;
    if (!transform) {
      return false;
    }
    return transform.insert === "" && transform.deleteLeft === 0 && ((_a = transform.deleteRight) !== null && _a !== void 0 ? _a : 0) === 0;
  }
  var TextTransform = /* @__PURE__ */ function() {
    function TextTransform2(insert, deleteLeft, deleteRight) {
      this.insert = insert;
      this.deleteLeft = deleteLeft;
      this.deleteRight = deleteRight || 0;
    }
    TextTransform2.nil = new TextTransform2("", 0, 0);
    return TextTransform2;
  }();
  var Transcription = function() {
    function Transcription2(keystroke, transform, preInput, alternates) {
      var token = this.token = Transcription2.tokenSeed++;
      this.keystroke = keystroke;
      this.transform = transform;
      this.alternates = alternates;
      this.preInput = preInput;
      this.transform.id = this.token;
      if (alternates) {
        alternates.forEach(function(alt) {
          alt.sample.id = token;
        });
      }
    }
    Transcription2.tokenSeed = 0;
    return Transcription2;
  }();
  var OutputTarget = function() {
    function OutputTarget3() {
      this._dks = new DeadkeyTracker();
    }
    Object.defineProperty(OutputTarget3.prototype, "isSynthetic", {
      get: function() {
        return true;
      },
      enumerable: false,
      configurable: true
    });
    OutputTarget3.prototype.resetContext = function() {
      this.deadkeys().clear();
    };
    OutputTarget3.prototype.deadkeys = function() {
      return this._dks;
    };
    OutputTarget3.prototype.hasDeadkeyMatch = function(n, d) {
      return this.deadkeys().isMatch(this.getDeadkeyCaret(), n, d);
    };
    OutputTarget3.prototype.insertDeadkeyBeforeCaret = function(d) {
      var dk = new Deadkey(this.getDeadkeyCaret(), d);
      this.deadkeys().add(dk);
    };
    OutputTarget3.prototype.adjustDeadkeys = function(delta) {
      this.deadkeys().adjustPositions(this.getDeadkeyCaret(), delta);
    };
    OutputTarget3.prototype.setDeadkeys = function(dks) {
      this._dks = dks.clone();
    };
    OutputTarget3.prototype.buildTransformFrom = function(original) {
      var to = this.getText();
      var from = original.getText();
      var fromCaret = original.getDeadkeyCaret();
      var toCaret = this.getDeadkeyCaret();
      var maxSMPLeftMatch = fromCaret < toCaret ? fromCaret : toCaret;
      var maxLeftMatch = to._kmwCodePointToCodeUnit(maxSMPLeftMatch);
      var start = 0;
      var end = maxLeftMatch;
      while (start < end) {
        var mid = Math.floor((end + start + 1) / 2);
        var fromLeft = from.substr(start, mid - start);
        var toLeft = to.substr(start, mid - start);
        if (fromLeft == toLeft) {
          start = mid;
        } else {
          end = mid - 1;
        }
      }
      if (end > 0 && end < maxLeftMatch) {
        var potentialHigh = from.charCodeAt(end - 1);
        var potentialFromLow = from.charCodeAt(end);
        var potentialToLow = to.charCodeAt(end);
        if (potentialHigh >= 55296 && potentialHigh <= 56319) {
          var flag = potentialFromLow >= 56320 && potentialFromLow <= 57343;
          flag = flag || potentialToLow >= 56320 && potentialToLow <= 57343;
          if (flag) {
            end = end - 1;
          }
        }
      }
      var newCaret = from._kmwCodeUnitToCodePoint(end);
      var deletedLeft = fromCaret - newCaret;
      var insertedLength = toCaret - newCaret;
      var delta = to._kmwSubstr(newCaret, insertedLength);
      var undeletedRight = to._kmwLength() - toCaret;
      var originalRight = from._kmwLength() - fromCaret;
      var deletedRight = originalRight - undeletedRight;
      if (deletedRight < 0) {
        delta = delta + to._kmwSubstr(toCaret, -deletedRight);
        deletedRight = 0;
      }
      return new TextTransform(delta, deletedLeft, deletedRight);
    };
    OutputTarget3.prototype.buildTranscriptionFrom = function(original, keyEvent, readonly, alternates) {
      var transform = this.buildTransformFrom(original);
      return new Transcription(keyEvent, transform, Mock.from(original, readonly), alternates);
    };
    OutputTarget3.prototype.restoreTo = function(original) {
      this.setTextBeforeCaret(original.getTextBeforeCaret());
      this.setTextAfterCaret(original.getTextAfterCaret());
      this._dks = original._dks.clone();
    };
    OutputTarget3.prototype.apply = function(transform) {
      if (transform.deleteRight) {
        this.setTextAfterCaret(this.getTextAfterCaret()._kmwSubstr(transform.deleteRight));
      }
      if (transform.deleteLeft) {
        this.deleteCharsBeforeCaret(transform.deleteLeft);
      }
      if (transform.insert) {
        this.insertTextBeforeCaret(transform.insert);
      }
      this._dks.clear();
    };
    OutputTarget3.prototype.setTextBeforeCaret = function(s) {
      this.deleteCharsBeforeCaret(this.getTextBeforeCaret()._kmwLength());
      this.insertTextBeforeCaret(s);
    };
    OutputTarget3.prototype.saveProperties = function() {
    };
    OutputTarget3.prototype.restoreProperties = function() {
    };
    return OutputTarget3;
  }();
  var outputTarget_default = OutputTarget;
  var Mock = function(_super) {
    (0, build_exports.__extends)(Mock2, _super);
    function Mock2(text, selStart, selEnd) {
      var _this = _super.call(this) || this;
      _this.selForward = true;
      _this.text = text ? text : "";
      var defaultLength = _this.text._kmwLength();
      _this.selStart = typeof selStart == "number" ? selStart : defaultLength;
      _this.selEnd = typeof selEnd == "number" ? selEnd : _this.selStart;
      _this.selForward = _this.selEnd >= _this.selStart;
      return _this;
    }
    Mock2.from = function(outputTarget, readonly) {
      var clone;
      if (outputTarget instanceof Mock2) {
        var priorMock = outputTarget;
        clone = new Mock2(priorMock.text, priorMock.selStart, priorMock.selEnd);
      } else {
        var text = outputTarget.getText();
        var textLen = text._kmwLength();
        var selectionStart = textLen;
        var selectionEnd = 0;
        if (outputTarget.hasSelection()) {
          var beforeText = outputTarget.getTextBeforeCaret();
          var afterText = outputTarget.getTextAfterCaret();
          selectionStart = beforeText._kmwLength();
          selectionEnd = textLen - afterText._kmwLength();
        }
        clone = new Mock2(text, selectionStart, selectionEnd);
      }
      clone.setDeadkeys(outputTarget.deadkeys());
      return clone;
    };
    Mock2.prototype.clearSelection = function() {
      this.text = this.getTextBeforeCaret() + this.getTextAfterCaret();
      this.selEnd = this.selStart;
      this.selForward = true;
    };
    Mock2.prototype.invalidateSelection = function() {
      return;
    };
    Mock2.prototype.isSelectionEmpty = function() {
      return this.selStart == this.selEnd;
    };
    Mock2.prototype.hasSelection = function() {
      return true;
    };
    Mock2.prototype.getDeadkeyCaret = function() {
      return this.selStart;
    };
    Mock2.prototype.setSelection = function(start, end) {
      this.selStart = start;
      this.selEnd = typeof end == "number" ? end : start;
      this.selForward = end >= start;
      if (!this.selForward) {
        var temp = this.selStart;
        this.selStart = this.selEnd;
        this.selEnd = temp;
      }
    };
    Mock2.prototype.getTextBeforeCaret = function() {
      return this.text.kmwSubstr(0, this.selStart);
    };
    Mock2.prototype.getSelectedText = function() {
      return this.text.kmwSubstr(this.selStart, this.selEnd - this.selStart);
    };
    Mock2.prototype.getTextAfterCaret = function() {
      return this.text.kmwSubstr(this.selEnd);
    };
    Mock2.prototype.getText = function() {
      return this.text;
    };
    Mock2.prototype.deleteCharsBeforeCaret = function(dn) {
      if (dn >= 0) {
        if (dn > this.selStart) {
          dn = this.selStart;
        }
        this.adjustDeadkeys(-dn);
        this.text = this.text.kmwSubstr(0, this.selStart - dn) + this.text.kmwSubstr(this.selStart);
        this.selStart -= dn;
        this.selEnd -= dn;
      }
    };
    Mock2.prototype.insertTextBeforeCaret = function(s) {
      this.adjustDeadkeys(s._kmwLength());
      this.text = this.getTextBeforeCaret() + s + this.text.kmwSubstr(this.selStart);
      this.selStart += s.kmwLength();
      this.selEnd += s.kmwLength();
    };
    Mock2.prototype.handleNewlineAtCaret = function() {
      this.insertTextBeforeCaret("\n");
    };
    Mock2.prototype.setTextAfterCaret = function(s) {
      this.text = this.getTextBeforeCaret() + s;
    };
    Mock2.prototype.doInputEvent = function() {
    };
    return Mock2;
  }(OutputTarget);

  // ../../../../common/web/keyboard-processor/build/obj/text/ruleBehavior.js
  var RuleBehavior = /* @__PURE__ */ function() {
    function RuleBehavior2() {
      this.transcription = null;
      this.setStore = {};
      this.saveStore = {};
      this.variableStores = {};
      this.triggersDefaultCommand = false;
    }
    RuleBehavior2.prototype.finalize = function(processor, outputTarget, readonly) {
      if (!this.transcription) {
        throw "Cannot finalize a RuleBehavior with no transcription.";
      }
      if (processor.beepHandler && this.beep) {
        processor.beepHandler(outputTarget);
      }
      for (var storeID in this.setStore) {
        var sysStore = processor.keyboardInterface.systemStores[storeID];
        if (sysStore) {
          try {
            sysStore.set(this.setStore[storeID]);
          } catch (error) {
            if (processor.errorLogger) {
              processor.errorLogger("Rule attempted to perform illegal operation - 'platform' may not be changed.");
            }
          }
        } else if (processor.warningLogger) {
          processor.warningLogger("Unknown store affected by keyboard rule: " + storeID);
        }
      }
      processor.keyboardInterface.applyVariableStores(this.variableStores);
      if (processor.keyboardInterface.variableStoreSerializer) {
        for (var storeID in this.saveStore) {
          processor.keyboardInterface.variableStoreSerializer.saveStore(processor.activeKeyboard.id, storeID, this.saveStore[storeID]);
        }
      }
      if (this.triggersDefaultCommand) {
        var keyEvent = this.transcription.keystroke;
        processor.defaultRules.applyCommand(keyEvent, outputTarget);
      }
      if (processor.warningLogger && this.warningLog) {
        processor.warningLogger(this.warningLog);
      } else if (processor.errorLogger && this.errorLog) {
        processor.errorLogger(this.errorLog);
      }
    };
    RuleBehavior2.prototype.mergeInDefaults = function(other) {
      var keystroke = this.transcription.keystroke;
      var keyFromOther = other.transcription.keystroke;
      if (keystroke.Lcode != keyFromOther.Lcode || keystroke.Lmodifiers != keyFromOther.Lmodifiers) {
        throw "RuleBehavior default-merge not supported unless keystrokes are identical!";
      }
      this.triggersDefaultCommand = this.triggersDefaultCommand || other.triggersDefaultCommand;
      var mergingMock = Mock.from(this.transcription.preInput, false);
      mergingMock.apply(this.transcription.transform);
      mergingMock.apply(other.transcription.transform);
      this.transcription = mergingMock.buildTranscriptionFrom(this.transcription.preInput, keystroke, false, this.transcription.alternates);
    };
    return RuleBehavior2;
  }();
  var ruleBehavior_default = RuleBehavior;

  // ../../../../common/web/keyboard-processor/build/obj/text/kbdInterface.js
  var KeyInformation = /* @__PURE__ */ function() {
    function KeyInformation2() {
    }
    return KeyInformation2;
  }();
  var RuleDeadkey = function() {
    function RuleDeadkey2() {
    }
    return RuleDeadkey2;
  }();
  var ContextAny = function() {
    function ContextAny2() {
    }
    return ContextAny2;
  }();
  var RuleIndex = function() {
    function RuleIndex2() {
    }
    return RuleIndex2;
  }();
  var ContextEx = function() {
    function ContextEx2() {
    }
    return ContextEx2;
  }();
  var ContextNul = function() {
    function ContextNul2() {
    }
    return ContextNul2;
  }();
  var StoreBeep = function() {
    function StoreBeep2() {
    }
    return StoreBeep2;
  }();
  var CachedContext = function() {
    function CachedContext2() {
    }
    CachedContext2.prototype.reset = function() {
      this._cache = [];
    };
    CachedContext2.prototype.get = function(n, ln) {
      if (typeof this._cache[n] == "undefined") {
        return null;
      } else if (typeof this._cache[n][ln] == "undefined") {
        return null;
      }
      return this._cache[n][ln];
    };
    CachedContext2.prototype.set = function(n, ln, val) {
      if (typeof this._cache[n] == "undefined") {
        this._cache[n] = [];
      }
      this._cache[n][ln] = val;
    };
    return CachedContext2;
  }();
  var CachedContextEx = function() {
    function CachedContextEx2() {
    }
    CachedContextEx2.prototype.reset = function() {
      this._cache = [];
    };
    CachedContextEx2.prototype.get = function(n, ln) {
      if (typeof this._cache[n] == "undefined") {
        return null;
      } else if (typeof this._cache[n][ln] == "undefined") {
        return null;
      }
      return this._cache[n][ln];
    };
    CachedContextEx2.prototype.set = function(n, ln, val) {
      if (typeof this._cache[n] == "undefined") {
        this._cache[n] = [];
      }
      this._cache[n][ln] = val;
    };
    CachedContextEx2.prototype.clone = function() {
      var r = new CachedContextEx2();
      r._cache = this._cache;
      return r;
    };
    return CachedContextEx2;
  }();
  var SystemStoreIDs;
  (function(SystemStoreIDs2) {
    SystemStoreIDs2[SystemStoreIDs2["TSS_LAYER"] = 33] = "TSS_LAYER";
    SystemStoreIDs2[SystemStoreIDs2["TSS_PLATFORM"] = 31] = "TSS_PLATFORM";
    SystemStoreIDs2[SystemStoreIDs2["TSS_NEWLAYER"] = 42] = "TSS_NEWLAYER";
    SystemStoreIDs2[SystemStoreIDs2["TSS_OLDLAYER"] = 43] = "TSS_OLDLAYER";
  })(SystemStoreIDs || (SystemStoreIDs = {}));
  var KeyboardInterface = function(_super) {
    (0, build_exports.__extends)(KeyboardInterface4, _super);
    function KeyboardInterface4(_jsGlobal, keymanGlobal, variableStoreSerializer) {
      if (variableStoreSerializer === void 0) {
        variableStoreSerializer = null;
      }
      var _this = _super.call(this, _jsGlobal, keymanGlobal) || this;
      _this.cachedContext = new CachedContext();
      _this.cachedContextEx = new CachedContextEx();
      _this._AnyIndices = [];
      _this.systemStores = {};
      _this.systemStores[SystemStoreIDs.TSS_PLATFORM] = new PlatformSystemStore(_this);
      _this.systemStores[SystemStoreIDs.TSS_LAYER] = new MutableSystemStore(SystemStoreIDs.TSS_LAYER, "default");
      _this.systemStores[SystemStoreIDs.TSS_NEWLAYER] = new MutableSystemStore(SystemStoreIDs.TSS_NEWLAYER, "");
      _this.systemStores[SystemStoreIDs.TSS_OLDLAYER] = new MutableSystemStore(SystemStoreIDs.TSS_OLDLAYER, "");
      _this.variableStoreSerializer = variableStoreSerializer;
      return _this;
    }
    Object.defineProperty(KeyboardInterface4.prototype, "Codes", {
      get: function() {
        return codes_default;
      },
      enumerable: false,
      configurable: true
    });
    KeyboardInterface4.prototype.saveFocus = function() {
    };
    KeyboardInterface4.prototype.registerKeyboard = function(Pk) {
      var keyboard = new keyboard_default(Pk);
      this.loadedKeyboard = keyboard;
    };
    KeyboardInterface4.prototype.context = function(n, ln, outputTarget) {
      var v = this.cachedContext.get(n, ln);
      if (v !== null) {
        return v;
      }
      var r = this.KC_(n, ln, outputTarget);
      this.cachedContext.set(n, ln, r);
      return r;
    };
    KeyboardInterface4.prototype.KC_ = function(n, ln, outputTarget) {
      var tempContext = "";
      tempContext = outputTarget.isSelectionEmpty() ? outputTarget.getTextBeforeCaret() : "";
      if (tempContext._kmwLength() < n) {
        tempContext = Array(n - tempContext._kmwLength() + 1).join("\uFFFE") + tempContext;
      }
      return tempContext._kmwSubstr(-n)._kmwSubstr(0, ln);
    };
    KeyboardInterface4.prototype.nul = function(n, outputTarget) {
      var cx = this.context(n + 1, 1, outputTarget);
      return cx === "\uFFFE";
    };
    KeyboardInterface4.prototype.contextMatch = function(n, outputTarget, val, ln) {
      var cx = this.context(n, ln, outputTarget);
      if (cx === val) {
        return true;
      }
      outputTarget.deadkeys().resetMatched();
      return false;
    };
    KeyboardInterface4.prototype._BuildExtendedContext = function(n, ln, outputTarget) {
      var cache = this.cachedContextEx.get(n, ln);
      if (cache !== null) {
        return cache;
      } else {
        cache = this.cachedContextEx.get(n, n);
        if (cache === null) {
          var unmatchedDeadkeys = outputTarget.deadkeys().toSortedArray();
          var index = 0;
          cache = { valContext: [], deadContext: [] };
          while (cache.valContext.length < n) {
            var sp = outputTarget.getDeadkeyCaret();
            var deadPos = sp - index;
            if (unmatchedDeadkeys.length > 0 && unmatchedDeadkeys[0].p > deadPos) {
              unmatchedDeadkeys.splice(0, 1);
              continue;
            } else if (unmatchedDeadkeys.length > 0 && unmatchedDeadkeys[0].p == deadPos) {
              cache.deadContext[n - cache.valContext.length - 1] = unmatchedDeadkeys[0];
              cache.valContext = [unmatchedDeadkeys[0].d].concat(cache.valContext);
              unmatchedDeadkeys.splice(0, 1);
            } else {
              var kc = this.context(++index, 1, outputTarget);
              cache.valContext = [kc].concat(cache.valContext);
            }
          }
          this.cachedContextEx.set(n, n, cache);
        }
        var subCache = cache;
        subCache.valContext = subCache.valContext.slice(0, ln);
        for (var i = 0; i < subCache.valContext.length; i++) {
          if (subCache[i] == "\uFFFE") {
            subCache.valContext.splice(0, 1);
            subCache.deadContext.splice(0, 1);
          }
        }
        if (subCache.valContext.length == 0) {
          subCache.valContext = ["\uFFFE"];
          subCache.deadContext = [];
        }
        this.cachedContextEx.set(n, ln, subCache);
        return subCache;
      }
    };
    KeyboardInterface4.prototype.fullContextMatch = function(n, outputTarget, rule) {
      var fullContext = this._BuildExtendedContext(n, rule.length, outputTarget);
      this.ruleContextEx = this.cachedContextEx.clone();
      var context = fullContext.valContext;
      var deadContext = fullContext.deadContext;
      var mismatch = false;
      var NUL_CONTEXT = "\uFFFE";
      var assertNever = function(x) {
        throw new Error("Unexpected object in fullContextMatch specification: " + x);
      };
      for (var i = 0; i < rule.length; i++) {
        if (typeof rule[i] == "string") {
          var str = rule[i];
          if (str !== context[i]) {
            mismatch = true;
            break;
          }
        } else {
          var r = rule[i];
          switch (r.t) {
            case "d":
              if (r["d"] !== context[i]) {
                mismatch = true;
              } else {
                deadContext[i].set();
              }
              break;
            case "a":
              var lookup;
              if (typeof context[i] == "string") {
                lookup = context[i];
              } else {
                lookup = { "t": "d", "d": context[i] };
              }
              var result = this.any(i, lookup, r.a);
              if (!r.n) {
                if (!result) {
                  mismatch = true;
                } else if (deadContext[i] !== void 0) {
                  deadContext[i].set();
                }
              } else if (r.n && (result || context[i] === NUL_CONTEXT)) {
                mismatch = true;
              }
              break;
            case "i":
              var ch = this._Index(r.i, r.o);
              if (ch !== void 0 && (typeof ch == "string" ? ch : ch.d) !== context[i]) {
                mismatch = true;
              } else if (deadContext[i] !== void 0) {
                deadContext[i].set();
              }
              break;
            case "c":
              if (context[r.c - 1] !== context[i]) {
                mismatch = true;
              } else if (deadContext[i] !== void 0) {
                deadContext[i].set();
              }
              break;
            case "n":
              if (context[i] != NUL_CONTEXT) {
                mismatch = true;
              }
              break;
            default:
              assertNever(r);
          }
        }
      }
      if (mismatch) {
        outputTarget.deadkeys().resetMatched();
        this._AnyIndices = [];
      }
      return !mismatch;
    };
    KeyboardInterface4.prototype.isKeypress = function(e) {
      if (this.activeKeyboard.isMnemonic) {
        return !e.LisVirtualKey;
      } else {
        return keyMapping_default._USKeyCodeToCharCode(e) ? true : false;
      }
    };
    KeyboardInterface4.matchModifiersToRuleChirality = function(eventModifiers, targetModifierMask) {
      var CHIRAL_ALT = codes_default.modifierCodes["LALT"] | codes_default.modifierCodes["RALT"];
      var CHIRAL_CTRL = codes_default.modifierCodes["LCTRL"] | codes_default.modifierCodes["RCTRL"];
      var modifiers = eventModifiers;
      if (!(targetModifierMask & CHIRAL_ALT)) {
        var altIntersection = modifiers & CHIRAL_ALT;
        if (altIntersection) {
          modifiers ^= altIntersection | codes_default.modifierCodes["ALT"];
        }
      }
      if (!(targetModifierMask & CHIRAL_CTRL)) {
        var ctrlIntersection = modifiers & CHIRAL_CTRL;
        if (ctrlIntersection) {
          modifiers ^= ctrlIntersection | codes_default.modifierCodes["CTRL"];
        }
      }
      return modifiers;
    };
    KeyboardInterface4.prototype.keyMatch = function(e, Lruleshift, Lrulekey) {
      var retVal = false;
      var keyCode = e.Lcode == 173 ? 189 : e.Lcode;
      var bitmask = this.activeKeyboard.modifierBitmask;
      var modifierBitmask = bitmask & codes_default.modifierBitmasks["ALL"];
      var stateBitmask = bitmask & codes_default.stateBitmasks["ALL"];
      var eventModifiers = KeyboardInterface4.matchModifiersToRuleChirality(e.Lmodifiers, Lruleshift);
      if (e.vkCode > 255) {
        keyCode = e.vkCode;
      }
      if (e.LisVirtualKey || keyCode > 255) {
        if ((Lruleshift & 16384) == 16384 || keyCode > 255) {
          retVal = Lrulekey == keyCode && (Lruleshift & modifierBitmask) == eventModifiers;
          retVal = retVal && this.stateMatch(e, Lruleshift & stateBitmask);
        }
      } else if ((Lruleshift & 16384) == 0) {
        retVal = keyCode == Lrulekey;
      }
      if (!retVal) {
        this.activeTargetOutput.deadkeys().resetMatched();
      }
      return retVal;
    };
    ;
    KeyboardInterface4.prototype.stateMatch = function(e, Lstate) {
      return (Lstate & e.Lstates) == Lstate;
    };
    KeyboardInterface4.prototype.keyInformation = function(e) {
      var ei = new KeyInformation();
      ei["vk"] = e.LisVirtualKey;
      ei["code"] = e.Lcode;
      ei["modifiers"] = e.Lmodifiers;
      return ei;
    };
    ;
    KeyboardInterface4.prototype.deadkeyMatch = function(n, outputTarget, d) {
      return outputTarget.hasDeadkeyMatch(n, d);
    };
    KeyboardInterface4.prototype.beep = function(outputTarget) {
      this.resetContextCache();
      this.ruleBehavior.beep = true;
    };
    KeyboardInterface4.prototype._ExplodeStore = function(store) {
      if (typeof store == "string") {
        var cachedStores = this.activeKeyboard.explodedStores;
        if (cachedStores[store]) {
          return cachedStores[store];
        }
        var result = [];
        for (var i = 0; i < store._kmwLength(); i++) {
          result.push(store._kmwCharAt(i));
        }
        cachedStores[store] = result;
        return result;
      } else {
        return store;
      }
    };
    KeyboardInterface4.prototype.any = function(n, ch, s) {
      if (ch == "") {
        return false;
      }
      s = this._ExplodeStore(s);
      var Lix = -1;
      for (var i = 0; i < s.length; i++) {
        if (typeof s[i] == "string") {
          if (s[i] == ch) {
            Lix = i;
            break;
          }
        } else if (s[i]["d"] === ch["d"]) {
          Lix = i;
          break;
        }
      }
      this._AnyIndices[n] = Lix;
      return Lix >= 0;
    };
    KeyboardInterface4.prototype._Index = function(Ps, Pn) {
      Ps = this._ExplodeStore(Ps);
      if (this._AnyIndices[Pn - 1] < Ps.length) {
        return Ps[this._AnyIndices[Pn - 1]];
      } else {
        console.warn("Unmatched contextual index() statement detected in rule with index " + Pn + "!");
        return "";
      }
    };
    KeyboardInterface4.prototype.indexOutput = function(Pdn, Ps, Pn, outputTarget) {
      this.resetContextCache();
      var assertNever = function(x) {
        throw new Error("Unexpected object in fullContextMatch specification: " + x);
      };
      var indexChar = this._Index(Ps, Pn);
      if (indexChar !== "") {
        if (typeof indexChar == "string") {
          this.output(Pdn, outputTarget, indexChar);
        } else if (indexChar["t"]) {
          var storeEntry = indexChar;
          switch (storeEntry.t) {
            case "b":
              this.beep(outputTarget);
              break;
            case "d":
              this.deadkeyOutput(Pdn, outputTarget, indexChar["d"]);
              break;
            default:
              assertNever(storeEntry);
          }
        } else {
          this.deadkeyOutput(Pdn, outputTarget, indexChar["d"]);
        }
      }
    };
    KeyboardInterface4.prototype.deleteContext = function(dn, outputTarget) {
      var context;
      if (dn > 0) {
        context = this._BuildExtendedContext(dn, dn, outputTarget);
        var nulCount = 0;
        for (var i = 0; i < context.valContext.length; i++) {
          var dk = context.deadContext[i];
          if (dk) {
            outputTarget.deadkeys().remove(dk);
            dn--;
          } else if (context.valContext[i] == "\uFFFE") {
            nulCount++;
          }
        }
        var contextLength = context.valContext.length - nulCount;
        if (dn > contextLength) {
          dn = contextLength;
        }
      }
      outputTarget.deadkeys().resetMatched();
      this.output(dn, outputTarget, "");
    };
    KeyboardInterface4.prototype.output = function(dn, outputTarget, s) {
      this.resetContextCache();
      outputTarget.saveProperties();
      outputTarget.clearSelection();
      outputTarget.deadkeys().deleteMatched();
      if (dn >= 0) {
        outputTarget.deleteCharsBeforeCaret(dn);
      }
      outputTarget.insertTextBeforeCaret(s);
      outputTarget.restoreProperties();
    };
    KeyboardInterface4.prototype.contextExOutput = function(Pdn, outputTarget, contextLength, contextOffset) {
      this.resetContextCache();
      if (Pdn >= 0) {
        this.output(Pdn, outputTarget, "");
      }
      var context = this.ruleContextEx.get(contextLength, contextLength);
      var dk = context.deadContext[contextOffset - 1], vc = context.valContext[contextOffset - 1];
      if (dk) {
        outputTarget.insertDeadkeyBeforeCaret(dk.d);
      } else if (typeof vc == "string") {
        this.output(-1, outputTarget, vc);
      } else {
        throw new Error("contextExOutput: should never be a numeric valContext with no corresponding deadContext");
      }
    };
    KeyboardInterface4.prototype.deadkeyOutput = function(Pdn, outputTarget, Pd) {
      this.resetContextCache();
      if (Pdn >= 0) {
        this.output(Pdn, outputTarget, "");
      }
      outputTarget.insertDeadkeyBeforeCaret(Pd);
    };
    KeyboardInterface4.prototype.ifStore = function(systemId, strValue, outputTarget) {
      var result = true;
      var store = this.systemStores[systemId];
      if (store) {
        result = store.matches(strValue);
      }
      return result;
    };
    KeyboardInterface4.prototype.setStore = function(systemId, strValue, outputTarget) {
      this.resetContextCache();
      if (systemId == SystemStoreIDs.TSS_LAYER && this.activeDevice.touchable) {
        this.ruleBehavior.setStore[systemId] = strValue;
      } else {
        return false;
      }
    };
    KeyboardInterface4.prototype.loadStore = function(kbdName, storeName, dfltValue) {
      this.resetContextCache();
      if (this.variableStoreSerializer) {
        var cValue = this.variableStoreSerializer.loadStore(kbdName, storeName);
        return cValue[storeName] || dfltValue;
      } else {
        return dfltValue;
      }
    };
    KeyboardInterface4.prototype.saveStore = function(storeName, optValue) {
      this.resetContextCache();
      var kbd = this.activeKeyboard;
      if (!kbd || typeof kbd.id == "undefined" || kbd.id == "") {
        return false;
      }
      var valueObj = {};
      valueObj[storeName] = optValue;
      if (this.ruleBehavior) {
        this.ruleBehavior.saveStore[storeName] = valueObj;
      } else {
        this.variableStoreSerializer.saveStore(this.activeKeyboard.id, storeName, valueObj);
      }
      return true;
    };
    KeyboardInterface4.prototype.resetContextCache = function() {
      this.cachedContext.reset();
      this.cachedContextEx.reset();
    };
    KeyboardInterface4.prototype.defaultBackspace = function(outputTarget) {
      if (outputTarget.isSelectionEmpty()) {
        this.output(1, outputTarget, "");
      } else {
        this.output(0, outputTarget, "");
      }
    };
    KeyboardInterface4.prototype.processNewContextEvent = function(outputTarget, keystroke) {
      if (!this.activeKeyboard) {
        throw "No active keyboard for keystroke processing!";
      }
      return this.process(this.activeKeyboard.processNewContextEvent.bind(this.activeKeyboard), outputTarget, keystroke, true);
    };
    KeyboardInterface4.prototype.processPostKeystroke = function(outputTarget, keystroke) {
      if (!this.activeKeyboard) {
        throw "No active keyboard for keystroke processing!";
      }
      return this.process(this.activeKeyboard.processPostKeystroke.bind(this.activeKeyboard), outputTarget, keystroke, true);
    };
    KeyboardInterface4.prototype.processKeystroke = function(outputTarget, keystroke) {
      if (!this.activeKeyboard) {
        throw "No active keyboard for keystroke processing!";
      }
      return this.process(this.activeKeyboard.process.bind(this.activeKeyboard), outputTarget, keystroke, false);
    };
    KeyboardInterface4.prototype.process = function(callee, outputTarget, keystroke, readonly) {
      if (!outputTarget) {
        throw "No target specified for keyboard output!";
      } else if (!this.activeKeyboard) {
        throw "No active keyboard for keystroke processing!";
      } else if (!callee) {
        throw "No callee for keystroke processing!";
      }
      outputTarget.invalidateSelection();
      outputTarget.deadkeys().resetMatched();
      this.resetContextCache();
      var preInput = Mock.from(outputTarget, true);
      var cachedVariableStores = this.activeKeyboard.variableStores;
      this.ruleBehavior = new ruleBehavior_default();
      this.activeDevice = keystroke.device;
      this.activeTargetOutput = outputTarget;
      var matched = callee(outputTarget, keystroke);
      this.activeTargetOutput = null;
      this.ruleBehavior.transcription = outputTarget.buildTranscriptionFrom(preInput, keystroke, readonly);
      this.ruleBehavior.variableStores = this.activeKeyboard.variableStores;
      this.activeKeyboard.variableStores = cachedVariableStores;
      this.ruleBehavior.triggerKeyDefault = !matched;
      var behavior = this.ruleBehavior;
      this.ruleBehavior = null;
      return behavior;
    };
    KeyboardInterface4.prototype.applyVariableStores = function(stores) {
      this.activeKeyboard.variableStores = stores;
    };
    KeyboardInterface4.__publishShorthandAPI = function() {
      var prototype = this.prototype;
      var exportKBCallback = function(miniName, longName) {
        if (prototype[longName]) {
          prototype[miniName] = prototype[longName];
        }
      };
      exportKBCallback("KSF", "saveFocus");
      exportKBCallback("KBR", "beepReset");
      exportKBCallback("KT", "insertText");
      exportKBCallback("KR", "registerKeyboard");
      exportKBCallback("KRS", "registerStub");
      exportKBCallback("KC", "context");
      exportKBCallback("KN", "nul");
      exportKBCallback("KCM", "contextMatch");
      exportKBCallback("KFCM", "fullContextMatch");
      exportKBCallback("KIK", "isKeypress");
      exportKBCallback("KKM", "keyMatch");
      exportKBCallback("KSM", "stateMatch");
      exportKBCallback("KKI", "keyInformation");
      exportKBCallback("KDM", "deadkeyMatch");
      exportKBCallback("KB", "beep");
      exportKBCallback("KA", "any");
      exportKBCallback("KDC", "deleteContext");
      exportKBCallback("KO", "output");
      exportKBCallback("KDO", "deadkeyOutput");
      exportKBCallback("KCXO", "contextExOutput");
      exportKBCallback("KIO", "indexOutput");
      exportKBCallback("KIFS", "ifStore");
      exportKBCallback("KSETS", "setStore");
      exportKBCallback("KLOAD", "loadStore");
      exportKBCallback("KSAVE", "saveStore");
    };
    KeyboardInterface4.GLOBAL_NAME = "KeymanWeb";
    return KeyboardInterface4;
  }(KeyboardHarness);
  var kbdInterface_default = KeyboardInterface;
  (function() {
    KeyboardInterface.__publishShorthandAPI();
  })();

  // ../../../../common/web/keyboard-processor/build/obj/text/keyboardProcessor.js
  var import_eventemitter3 = __toESM(require_eventemitter3(), 1);
  var KeyboardProcessor = /* @__PURE__ */ function(_super) {
    (0, build_exports.__extends)(KeyboardProcessor2, _super);
    function KeyboardProcessor2(device, options) {
      var _this = _super.call(this) || this;
      _this.stateKeys = {
        "K_CAPS": false,
        "K_NUMLOCK": false,
        "K_SCROLL": false
      };
      _this.modStateFlags = 0;
      if (!options) {
        options = KeyboardProcessor2.DEFAULT_OPTIONS;
      }
      _this.contextDevice = device;
      _this.baseLayout = options.baseLayout || KeyboardProcessor2.DEFAULT_OPTIONS.baseLayout;
      _this.keyboardInterface = options.keyboardInterface || new kbdInterface_default(getGlobalObject(), MinimalKeymanGlobal);
      _this.defaultRules = options.defaultOutputRules || KeyboardProcessor2.DEFAULT_OPTIONS.defaultOutputRules;
      return _this;
    }
    Object.defineProperty(KeyboardProcessor2.prototype, "activeKeyboard", {
      get: function() {
        return this.keyboardInterface.activeKeyboard;
      },
      set: function(keyboard) {
        this.keyboardInterface.activeKeyboard = keyboard;
        this.resetContext();
      },
      enumerable: false,
      configurable: true
    });
    Object.defineProperty(KeyboardProcessor2.prototype, "layerStore", {
      get: function() {
        return this.keyboardInterface.systemStores[SystemStoreIDs.TSS_LAYER];
      },
      enumerable: false,
      configurable: true
    });
    Object.defineProperty(KeyboardProcessor2.prototype, "newLayerStore", {
      get: function() {
        return this.keyboardInterface.systemStores[SystemStoreIDs.TSS_NEWLAYER];
      },
      enumerable: false,
      configurable: true
    });
    Object.defineProperty(KeyboardProcessor2.prototype, "oldLayerStore", {
      get: function() {
        return this.keyboardInterface.systemStores[SystemStoreIDs.TSS_OLDLAYER];
      },
      enumerable: false,
      configurable: true
    });
    Object.defineProperty(KeyboardProcessor2.prototype, "layerId", {
      get: function() {
        return this.layerStore.value;
      },
      set: function(value) {
        this.layerStore.set(value);
      },
      enumerable: false,
      configurable: true
    });
    KeyboardProcessor2.prototype.defaultRuleBehavior = function(Lkc, outputTarget, readonly) {
      var preInput = Mock.from(outputTarget, readonly);
      var ruleBehavior = new ruleBehavior_default();
      var matched = false;
      var char = "";
      var special;
      if (Lkc.isSynthetic || outputTarget.isSynthetic) {
        matched = true;
        if (this.defaultRules.isCommand(Lkc)) {
          ruleBehavior.triggersDefaultCommand = true;
        } else if ((special = this.defaultRules.forSpecialEmulation(Lkc)) != null) {
          switch (special) {
            case EmulationKeystrokes.Backspace:
              this.keyboardInterface.defaultBackspace(outputTarget);
              break;
            case EmulationKeystrokes.Enter:
              outputTarget.handleNewlineAtCaret();
              break;
            default:
              ruleBehavior.errorLog = "Unexpected 'special emulation' character (\\u" + special.kmwCharCodeAt(0).toString(16) + ") went unhandled!";
          }
        } else {
          matched = false;
        }
      }
      var isMnemonic = this.activeKeyboard && this.activeKeyboard.isMnemonic;
      if (!matched) {
        if ((char = this.defaultRules.forAny(Lkc, isMnemonic)) != null) {
          special = this.defaultRules.forSpecialEmulation(Lkc);
          if (special == EmulationKeystrokes.Backspace) {
            this.keyboardInterface.defaultBackspace(outputTarget);
          } else if (special || this.defaultRules.isCommand(Lkc)) {
            return null;
          } else {
            this.keyboardInterface.output(0, outputTarget, char);
          }
        } else {
          return null;
        }
      }
      if (ruleBehavior.errorLog) {
        return ruleBehavior;
      }
      var transcription = outputTarget.buildTranscriptionFrom(preInput, Lkc, readonly);
      ruleBehavior.transcription = transcription;
      return ruleBehavior;
    };
    KeyboardProcessor2.prototype.processNewContextEvent = function(device, outputTarget) {
      return this.activeKeyboard ? this.keyboardInterface.processNewContextEvent(outputTarget, this.activeKeyboard.constructNullKeyEvent(device, this.stateKeys)) : null;
    };
    KeyboardProcessor2.prototype.processPostKeystroke = function(device, outputTarget) {
      return this.activeKeyboard ? this.keyboardInterface.processPostKeystroke(outputTarget, this.activeKeyboard.constructNullKeyEvent(device, this.stateKeys)) : null;
    };
    KeyboardProcessor2.prototype.processKeystroke = function(keyEvent, outputTarget) {
      var matchBehavior;
      if (this.activeKeyboard && keyEvent.Lcode != 0) {
        matchBehavior = this.keyboardInterface.processKeystroke(outputTarget, keyEvent);
      }
      if (!matchBehavior || matchBehavior.triggerKeyDefault) {
        keyEvent.Lcode = keyEvent.vkCode || keyEvent.Lcode;
        this.keyboardInterface.activeTargetOutput = outputTarget;
        var defaultBehavior = this.defaultRuleBehavior(keyEvent, outputTarget, false);
        if (defaultBehavior) {
          if (!matchBehavior) {
            matchBehavior = defaultBehavior;
          } else {
            matchBehavior.mergeInDefaults(defaultBehavior);
          }
          matchBehavior.triggerKeyDefault = false;
        }
        this.keyboardInterface.activeTargetOutput = null;
      }
      return matchBehavior;
    };
    KeyboardProcessor2.prototype._UpdateVKShift = function(e) {
      var keyShiftState = 0;
      var lockNames = ["CAPS", "NUM_LOCK", "SCROLL_LOCK"];
      var lockKeys = ["K_CAPS", "K_NUMLOCK", "K_SCROLL"];
      if (!this.activeKeyboard) {
        return true;
      }
      if (e) {
        keyShiftState = e.Lmodifiers;
        if (this.activeKeyboard.isChiral && this.activeKeyboard.emulatesAltGr && (this.modStateFlags & codes_default.modifierBitmasks["ALT_GR_SIM"]) == codes_default.modifierBitmasks["ALT_GR_SIM"]) {
          keyShiftState |= codes_default.modifierBitmasks["ALT_GR_SIM"];
          keyShiftState &= ~codes_default.modifierCodes["RALT"];
        }
        var stateMutation = false;
        for (var i = 0; i < lockNames.length; i++) {
          if (e.Lstates & codes_default.stateBitmasks[lockNames[i]]) {
            this.stateKeys[lockKeys[i]] = !!(e.Lstates & codes_default.modifierCodes[lockNames[i]]);
            stateMutation = true;
          }
        }
        if (stateMutation) {
          this.emit("statekeychange", this.stateKeys);
        }
      }
      this.updateStates();
      if (this.activeKeyboard.isMnemonic && this.stateKeys["K_CAPS"]) {
        if (!e || !e.isModifier) {
          keyShiftState ^= codes_default.modifierCodes["SHIFT"];
        }
      }
      this.layerId = this.getLayerId(keyShiftState);
      return true;
    };
    KeyboardProcessor2.prototype.updateStates = function() {
      var lockNames = ["CAPS", "NUM_LOCK", "SCROLL_LOCK"];
      var lockKeys = ["K_CAPS", "K_NUMLOCK", "K_SCROLL"];
      for (var i = 0; i < lockKeys.length; i++) {
        var key = lockKeys[i];
        var flag = this.stateKeys[key];
        var onBit = lockNames[i];
        var offBit = "NO_" + lockNames[i];
        if (flag) {
          this.modStateFlags |= codes_default.modifierCodes[onBit];
          this.modStateFlags &= ~codes_default.modifierCodes[offBit];
        } else {
          this.modStateFlags &= ~codes_default.modifierCodes[onBit];
          this.modStateFlags |= codes_default.modifierCodes[offBit];
        }
      }
    };
    KeyboardProcessor2.prototype.getLayerId = function(modifier) {
      return Layouts.getLayerId(modifier);
    };
    KeyboardProcessor2.prototype.selectLayer = function(keyEvent) {
      var keyName = keyEvent.kName;
      var nextLayer = keyEvent.kNextLayer;
      var isChiral = this.activeKeyboard && this.activeKeyboard.isChiral;
      if (typeof nextLayer == "number") {
        nextLayer = this.getLayerId(nextLayer * 16);
      }
      if (!nextLayer) {
        switch (keyName) {
          case "K_LSHIFT":
          case "K_RSHIFT":
          case "K_SHIFT":
            nextLayer = "shift";
            break;
          case "K_LCONTROL":
          case "K_LCTRL":
            if (isChiral) {
              nextLayer = "leftctrl";
              break;
            }
          case "K_RCONTROL":
          case "K_RCTRL":
            if (isChiral) {
              nextLayer = "rightctrl";
              break;
            }
          case "K_CTRL":
            nextLayer = "ctrl";
            break;
          case "K_LMENU":
          case "K_LALT":
            if (isChiral) {
              nextLayer = "leftalt";
              break;
            }
          case "K_RMENU":
          case "K_RALT":
            if (isChiral) {
              nextLayer = "rightalt";
              break;
            }
          case "K_ALT":
            nextLayer = "alt";
            break;
          case "K_ALTGR":
            if (isChiral) {
              nextLayer = "leftctrl-rightalt";
            } else {
              nextLayer = "ctrl-alt";
            }
            break;
          case "K_CURRENCIES":
          case "K_NUMERALS":
          case "K_SHIFTED":
          case "K_UPPER":
          case "K_LOWER":
          case "K_SYMBOLS":
            nextLayer = "default";
            break;
        }
      }
      if (!nextLayer) {
        return false;
      }
      this.updateLayer(keyEvent, nextLayer);
      return true;
    };
    KeyboardProcessor2.prototype.updateLayer = function(keyEvent, id) {
      var activeLayer = this.layerId;
      var s = activeLayer;
      if (id == activeLayer && keyEvent.device.formFactor != deviceSpec_default.FormFactor.Desktop) {
        return false;
      }
      var idx = id;
      var i;
      if (keyEvent.device.formFactor == deviceSpec_default.FormFactor.Desktop) {
        var replacements = ["leftctrl", "rightctrl", "ctrl", "leftalt", "rightalt", "alt", "shift"];
        for (i = 0; i < replacements.length; i++) {
          idx = idx.replace(replacements[i] + "-", "");
          idx = idx.replace(replacements[i], "");
        }
        if (activeLayer == "default" || activeLayer == "numeric" || activeLayer == "symbol" || activeLayer == "currency" || idx != "") {
          s = id;
        } else {
          var modifier = codes_default.getModifierState(s);
          for (i = 0; i < replacements.length; i++) {
            s = s.replace(replacements[i] + "-", "");
            s = s.replace(replacements[i], "");
          }
          switch (id) {
            case "shift":
              modifier ^= codes_default.modifierCodes["SHIFT"];
              break;
            case "leftctrl":
              modifier ^= codes_default.modifierCodes["LCTRL"];
              break;
            case "rightctrl":
              modifier ^= codes_default.modifierCodes["RCTRL"];
              break;
            case "ctrl":
              modifier ^= codes_default.modifierCodes["CTRL"];
              break;
            case "leftalt":
              modifier ^= codes_default.modifierCodes["LALT"];
              break;
            case "rightalt":
              modifier ^= codes_default.modifierCodes["RALT"];
              break;
            case "alt":
              modifier ^= codes_default.modifierCodes["ALT"];
              break;
            default:
              s = id;
          }
          if (s != "default") {
            if (s == "") {
              s = this.getLayerId(modifier);
            } else {
              s = this.getLayerId(modifier) + "-" + s;
            }
          }
        }
        if (s == "") {
          s = "default";
        }
      } else {
        s = id;
      }
      var layout = this.activeKeyboard.layout(keyEvent.device.formFactor);
      if (layout.getLayer(s)) {
        this.layerId = s;
      } else {
        this.layerId = "default";
      }
      var baseModifierState = codes_default.getModifierState(this.layerId);
      this.modStateFlags = baseModifierState | keyEvent.Lstates;
    };
    KeyboardProcessor2.prototype.doModifierPress = function(Levent, outputTarget, isKeyDown) {
      if (!this.activeKeyboard) {
        return false;
      }
      if (Levent.Lcode == 8) {
        outputTarget.deadkeys().clear();
      } else if (Levent.isModifier) {
        this.activeKeyboard.notify(Levent.Lcode, outputTarget, isKeyDown ? 1 : 0);
        if (!Levent.device.touchable) {
          return this._UpdateVKShift(Levent);
        } else {
          return true;
        }
      }
      if (Levent.LmodifierChange) {
        this.activeKeyboard.notify(0, outputTarget, 1);
        if (!Levent.device.touchable) {
          this._UpdateVKShift(Levent);
        }
      }
      return false;
    };
    KeyboardProcessor2.prototype.performNewContextEvent = function(outputTarget) {
      var ruleBehavior = this.processNewContextEvent(this.contextDevice, outputTarget);
      if (ruleBehavior) {
        ruleBehavior.finalize(this, outputTarget, true);
      }
      return ruleBehavior;
    };
    KeyboardProcessor2.prototype.resetContext = function(target) {
      this.layerId = "default";
      this.keyboardInterface.resetContextCache();
      if (target) {
        this.performNewContextEvent(target);
      }
      if (!this.contextDevice.touchable) {
        this._UpdateVKShift(null);
      }
    };
    ;
    KeyboardProcessor2.prototype.setNumericLayer = function(device) {
      if (this.activeKeyboard) {
        var layout = this.activeKeyboard.layout(device.formFactor);
        if (layout.getLayer("numeric")) {
          this.layerId = "numeric";
        }
      }
    };
    ;
    KeyboardProcessor2.DEFAULT_OPTIONS = {
      baseLayout: "us",
      defaultOutputRules: new defaultRules_default()
    };
    return KeyboardProcessor2;
  }(import_eventemitter3.default);
  var keyboardProcessor_default = KeyboardProcessor;

  // ../../../build/engine/paths/obj/pathConfiguration.js
  var addDelimiter = function(p) {
    if (p.substring(p.length - 1) != "/") {
      return p + "/";
    } else {
      return p;
    }
  };
  var PathConfiguration = /* @__PURE__ */ function() {
    function PathConfiguration2(pathSpec, sourcePath) {
      sourcePath = addDelimiter(sourcePath);
      this.sourcePath = sourcePath;
      this.protocol = sourcePath.replace(/(.{3,5}:)(.*)/, "$1");
      this.updateFromOptions(pathSpec);
    }
    PathConfiguration2.prototype.updateFromOptions = function(pathSpec) {
      var _rootPath = this.sourcePath.replace(/(https?:\/\/)([^\/]*)(.*)/, "$1$2/");
      this._root = _rootPath;
      if (pathSpec.root != "") {
        this._root = this.fixPath(pathSpec.root);
      } else {
        this._root = this.fixPath(_rootPath);
      }
      var resources = pathSpec.resources;
      if (resources == "") {
        resources = this.sourcePath;
      }
      this._resources = this.fixPath(resources);
      this._keyboards = this.fixPath(pathSpec.keyboards);
      this._fonts = this.fixPath(pathSpec.fonts);
    };
    PathConfiguration2.prototype.fixPath = function(p) {
      if (p.length == 0) {
        return p;
      }
      p = addDelimiter(p);
      if (p.replace(/^(http)s?:.*/, "$1") == "http" || p.replace(/^(file):.*/, "$1") == "file") {
        return p;
      }
      if (p.substring(0, 2) == "//") {
        return this.protocol + p;
      }
      if (p.substring(0, 1) == "/") {
        return this.root + p.substring(1);
      }
      return this.sourcePath + p;
    };
    Object.defineProperty(PathConfiguration2.prototype, "fonts", {
      get: function() {
        return this._fonts;
      },
      enumerable: false,
      configurable: true
    });
    PathConfiguration2.prototype.updateFontPath = function(path) {
      this._fonts = this.fixPath(path);
    };
    Object.defineProperty(PathConfiguration2.prototype, "root", {
      get: function() {
        return this._root;
      },
      enumerable: false,
      configurable: true
    });
    Object.defineProperty(PathConfiguration2.prototype, "resources", {
      get: function() {
        return this._resources;
      },
      enumerable: false,
      configurable: true
    });
    Object.defineProperty(PathConfiguration2.prototype, "keyboards", {
      get: function() {
        return this._keyboards;
      },
      enumerable: false,
      configurable: true
    });
    return PathConfiguration2;
  }();
  var pathConfiguration_default = PathConfiguration;

  // ../../../build/engine/paths/obj/optionSpec.interface.js
  var PathOptionDefaults = {
    root: "",
    resources: "",
    keyboards: "",
    fonts: ""
  };

  // ../../../build/engine/device-detect/obj/utils/styleConstants.js
  var StyleConstants = /* @__PURE__ */ function() {
    function StyleConstants2(device) {
      if (device.OS == deviceSpec_default.OperatingSystem.Android) {
        this.popupCanvasBackgroundColor = "#999";
      } else {
        this.popupCanvasBackgroundColor = StyleConstants2.prefersDarkMode() ? "#0f1319" : "#ffffff";
      }
    }
    StyleConstants2.prefersDarkMode = function() {
      return window.matchMedia && window.matchMedia("(prefers-color-scheme: dark)").matches;
    };
    return StyleConstants2;
  }();
  var styleConstants_default = StyleConstants;

  // ../../../build/engine/device-detect/obj/index.js
  var Device = /* @__PURE__ */ function() {
    function Device2() {
      this.detected = false;
      this.touchable = !!("ontouchstart" in window);
      this.OS = "";
      this.formFactor = "desktop";
      this.browser = "";
      this.dyPortrait = 0;
      this.dyLandscape = 0;
      this.version = "0";
      this.orientation = window.orientation;
    }
    Device2.prototype.getDPI = function() {
      var t = document.createElement("DIV"), s = t.style, dpi = 96;
      if (document.readyState !== "complete") {
        return dpi;
      }
      t.id = "calculateDPI";
      s.position = "absolute";
      s.display = "block";
      s.visibility = "hidden";
      s.left = "10px";
      s.top = "10px";
      s.width = "1in";
      s.height = "10px";
      document.body.appendChild(t);
      dpi = typeof window.devicePixelRatio == "undefined" ? t.offsetWidth : t.offsetWidth * window.devicePixelRatio;
      document.body.removeChild(t);
      return dpi;
    };
    Device2.prototype.detect = function() {
      var possMacSpoof = false;
      if (navigator && navigator.userAgent) {
        var agent = navigator.userAgent;
        if (agent.indexOf("iPad") >= 0) {
          this.OS = "iOS";
          this.formFactor = "tablet";
          this.dyPortrait = this.dyLandscape = 0;
        } else if (agent.indexOf("iPhone") >= 0) {
          this.OS = "iOS";
          this.formFactor = "phone";
          this.dyPortrait = this.dyLandscape = 25;
        } else if (agent.indexOf("Android") >= 0) {
          this.OS = "Android";
          this.formFactor = "phone";
          this.dyPortrait = 75;
          this.dyLandscape = 25;
          try {
            var rx = new RegExp("(?:Android\\s+)(\\d+\\.\\d+\\.\\d+)");
            this.version = agent.match(rx)[1];
          } catch (ex) {
          }
        } else if (agent.indexOf("Linux") >= 0) {
          this.OS = "Linux";
        } else if (agent.indexOf("Macintosh") >= 0) {
          var regex = /Intel Mac OS X (\d+(?:[_\.]\d+)+)/i;
          var results = regex.exec(agent);
          if (!results) {
            console.warn("KMW could not properly parse the user agent string.A suboptimal keyboard layout may result.");
            this.OS = "MacOSX";
          } else if (results.length > 1 && results[1]) {
            var versionString = results[1].replace("_", ".");
            var version = new version_default(versionString);
            possMacSpoof = version_default.MAC_POSSIBLE_IPAD_ALIAS.compareTo(version) <= 0;
            this.OS = "MacOSX";
          }
        } else if (agent.indexOf("Windows NT") >= 0) {
          this.OS = "Windows";
          if (agent.indexOf("Touch") >= 0) {
            this.formFactor = "phone";
          }
          if (typeof navigator.msMaxTouchPoints == "number" && navigator.msMaxTouchPoints > 0) {
            this.touchable = true;
          }
        }
      }
      var dimMin = Math.min(screen.width, screen.height), dimMax = Math.max(screen.width, screen.height);
      var aspect = dimMin / dimMax;
      if (this.OS != "iOS" && this.formFactor == "phone" && (dimMin >= 600 && aspect > 0.5625 || aspect >= 0.625)) {
        this.formFactor = "tablet";
      }
      var possibleChromeEmulation = navigator.platform == "Win32" || navigator.platform == "MacIntel";
      if (this.OS == "iOS" && !("ongesturestart" in window) && !possibleChromeEmulation) {
        this.OS = "Android";
      }
      this.browser = "web";
      if (this.OS == "iOS" || this.OS.toLowerCase() == "macosx") {
        this.browser = "safari";
      }
      var bMatch = /Firefox|Chrome|OPR|Safari|Edge/;
      if (bMatch.test(navigator.userAgent)) {
        if (navigator.userAgent.indexOf("Firefox") >= 0 && "onmozorientationchange" in screen) {
          this.browser = "firefox";
        } else if (navigator.userAgent.indexOf("OPR") >= 0) {
          this.browser = "opera";
        } else if (navigator.userAgent.indexOf(" Edge/") >= 0) {
          this.browser = "edge";
        } else if (navigator.userAgent.indexOf("Chrome") >= 0) {
          this.browser = "chrome";
        } else if (navigator.userAgent.indexOf("Safari") >= 0) {
          this.browser = "safari";
        }
      }
      if (possMacSpoof && this.browser == "safari") {
        if (window["TouchEvent"]) {
          this.OS = "iOS";
          this.formFactor = "tablet";
          this.dyPortrait = this.dyLandscape = 0;
          var aspectRatio = screen.height / screen.width;
          if (aspectRatio < 1) {
            aspectRatio = 1 / aspectRatio;
          }
          if (aspectRatio > 1.6) {
            this.formFactor = "phone";
            this.dyPortrait = this.dyLandscape = 25;
          }
        }
      }
      this.colorScheme = styleConstants_default.prefersDarkMode() ? "dark" : "light";
      this.detected = true;
      return this.coreSpec;
    };
    Object.defineProperty(Device2.prototype, "coreSpec", {
      get: function() {
        return new deviceSpec_default(this.browser, this.formFactor, this.OS, this.touchable);
      },
      enumerable: false,
      configurable: true
    });
    return Device2;
  }();

  // ../../../build/engine/main/obj/engineConfiguration.js
  var EngineConfiguration = /* @__PURE__ */ function(_super) {
    (0, build_exports.__extends)(EngineConfiguration2, _super);
    function EngineConfiguration2(sourcePath, device) {
      var _this = _super.call(this) || this;
      _this.applyCacheBusting = false;
      if (!device) {
        var deviceDetector = new Device();
        deviceDetector.detect();
        device = deviceDetector.coreSpec;
      }
      _this.sourcePath = sourcePath;
      _this.hostDevice = device;
      _this.deferForInitialization = new managedPromise_default();
      return _this;
    }
    EngineConfiguration2.prototype.initialize = function(options) {
      var _this = this;
      if (!this._paths) {
        this._paths = new pathConfiguration_default(options, this.sourcePath);
      } else {
        this._paths.updateFromOptions(options);
      }
      if (typeof options.setActiveOnRegister == "boolean") {
        this.activateFirstKeyboard = options.setActiveOnRegister;
      } else {
        this.activateFirstKeyboard = true;
      }
      this._spacebarText = options.spacebarText;
      keyboardProperties_default.spacebarTextMode = function() {
        return _this.spacebarText;
      };
    };
    EngineConfiguration2.prototype.finalizeInit = function() {
      this.deferForInitialization.resolve();
    };
    Object.defineProperty(EngineConfiguration2.prototype, "paths", {
      get: function() {
        return this._paths;
      },
      enumerable: false,
      configurable: true
    });
    Object.defineProperty(EngineConfiguration2.prototype, "spacebarText", {
      get: function() {
        return this._spacebarText;
      },
      set: function(value) {
        if (this._spacebarText != value) {
          this._spacebarText = value;
          this.emit("spacebartext", value);
        }
      },
      enumerable: false,
      configurable: true
    });
    Object.defineProperty(EngineConfiguration2.prototype, "softDevice", {
      get: function() {
        return this.hostDevice;
      },
      enumerable: false,
      configurable: true
    });
    Object.defineProperty(EngineConfiguration2.prototype, "hardDevice", {
      get: function() {
        return physicalKeyDeviceAlias(this.hostDevice);
      },
      enumerable: false,
      configurable: true
    });
    Object.defineProperty(EngineConfiguration2.prototype, "stubNamespacer", {
      get: function() {
        return this._stubNamespacer;
      },
      set: function(functor) {
        this._stubNamespacer = functor;
      },
      enumerable: false,
      configurable: true
    });
    EngineConfiguration2.prototype.debugReport = function() {
      return {
        hostDevice: this.hostDevice,
        initialized: this.deferForInitialization.hasFinalized
      };
    };
    EngineConfiguration2.prototype.onRuleFinalization = function(ruleBehavior, outputTarget) {
    };
    ;
    return EngineConfiguration2;
  }(import_eventemitter32.default);
  var InitOptionDefaults = (0, build_exports.__assign)({ setActiveOnRegister: true, spacebarText: spacebarText_default.LANGUAGE_KEYBOARD }, PathOptionDefaults);

  // ../../../build/engine/main/obj/contextManagerBase.js
  var import_eventemitter33 = __toESM(require_eventemitter3(), 1);
  var ContextManagerBase = /* @__PURE__ */ function(_super) {
    (0, build_exports.__extends)(ContextManagerBase2, _super);
    function ContextManagerBase2(engineConfig) {
      var _this = _super.call(this) || this;
      _this.pendingActivations = [];
      _this.engineConfig = engineConfig;
      return _this;
    }
    Object.defineProperty(ContextManagerBase2.prototype, "predictionContext", {
      get: function() {
        return this._predictionContext;
      },
      enumerable: false,
      configurable: true
    });
    ContextManagerBase2.prototype.configure = function(config) {
      this._resetContext = config.resetContext;
      this._predictionContext = config.predictionContext;
      this.keyboardCache = config.keyboardCache;
    };
    ContextManagerBase2.prototype.insertText = function(kbdInterface, Ptext, PdeadKey) {
      var outputTarget = this.activeTarget;
      if (outputTarget != null) {
        if (Ptext != null) {
          kbdInterface.output(0, outputTarget, Ptext);
        }
        if (typeof PdeadKey !== "undefined" && PdeadKey !== null) {
          kbdInterface.deadkeyOutput(0, outputTarget, PdeadKey);
        }
        outputTarget.invalidateSelection();
        return true;
      }
      return false;
    };
    ContextManagerBase2.prototype.resetContext = function() {
      this._resetContext(this.activeTarget);
      this.predictionContext.resetContext();
    };
    ContextManagerBase2.prototype.findAndPopActivation = function(target) {
      var activationIndex;
      for (activationIndex = 0; activationIndex < this.pendingActivations.length; activationIndex++) {
        if (this.pendingActivations[activationIndex].target == target) {
          break;
        }
      }
      if (activationIndex == this.pendingActivations.length) {
        return null;
      }
      return this.pendingActivations.splice(activationIndex, 1)[0];
    };
    ContextManagerBase2.prototype.deferredKeyboardActivation = function(kbdPromise, metadata, target) {
      return (0, build_exports.__awaiter)(this, void 0, void 0, function() {
        var activation, activationAfterAwait;
        return (0, build_exports.__generator)(this, function(_a) {
          switch (_a.label) {
            case 0:
              activation = {
                target: target,
                keyboard: kbdPromise,
                stub: metadata
              };
              this.findAndPopActivation(target);
              this.pendingActivations.push(activation);
              return [4, kbdPromise];
            case 1:
              _a.sent();
              activationAfterAwait = this.findAndPopActivation(target);
              if (activationAfterAwait == activation) {
                return [2, activation];
              } else if (activationAfterAwait) {
                this.pendingActivations.push(activationAfterAwait);
                return [2, null];
              }
              return [2];
          }
        });
      });
    };
    ContextManagerBase2.prototype.activateKeyboard = function(keyboardId, languageCode, saveCookie) {
      return (0, build_exports.__awaiter)(this, void 0, void 0, function() {
        var activatingKeyboard, originalKeyboardTarget, keyboard, kbdStubPair;
        return (0, build_exports.__generator)(this, function(_a) {
          switch (_a.label) {
            case 0:
              this.findAndPopActivation(this.currentKeyboardSrcTarget());
              activatingKeyboard = this.prepareKeyboardForActivation(keyboardId, languageCode);
              originalKeyboardTarget = this.currentKeyboardSrcTarget();
              return [4, activatingKeyboard.keyboard];
            case 1:
              keyboard = _a.sent();
              if (keyboard == null && activatingKeyboard.metadata) {
                return [2, false];
              }
              if (this.currentKeyboardSrcTarget() == originalKeyboardTarget) {
                this.emit("beforekeyboardchange", activatingKeyboard.metadata);
              }
              kbdStubPair = null;
              if (keyboard) {
                kbdStubPair = {
                  keyboard: keyboard,
                  metadata: activatingKeyboard.metadata
                };
              }
              this.activateKeyboardForTarget(kbdStubPair, originalKeyboardTarget);
              if (this.currentKeyboardSrcTarget() == originalKeyboardTarget) {
                this.resetContext();
                this.emit("keyboardchange", this.activeKeyboard);
              }
              return [2, true];
          }
        });
      });
    };
    ContextManagerBase2.prototype.prepareKeyboardForActivation = function(keyboardId, languageCode) {
      var _this = this;
      var _a;
      languageCode || (languageCode = "");
      var requestedStub = null;
      if (keyboardId) {
        requestedStub = this.keyboardCache.getStub(keyboardId, languageCode);
      } else {
        languageCode == "";
      }
      if (!requestedStub) {
        if (keyboardId) {
          throw new Error("No matching stub has been registered.");
        } else {
          return {
            keyboard: Promise.resolve(null),
            metadata: null
          };
        }
      }
      if (((_a = this.activeKeyboard) === null || _a === void 0 ? void 0 : _a.metadata) && keyboardId == this.activeKeyboard.metadata.id) {
        var keyboard_1 = this.activeKeyboard.keyboard;
        return {
          keyboard: Promise.resolve(keyboard_1),
          metadata: requestedStub
        };
      }
      var keyboard;
      if (keyboard = this.keyboardCache.getKeyboardForStub(requestedStub)) {
        return {
          keyboard: Promise.resolve(keyboard),
          metadata: requestedStub
        };
      } else {
        this.emit("beforekeyboardchange", requestedStub);
        var defermentPromise_1 = this.engineConfig.deferForInitialization.then(function() {
          var completionPromise = new managedPromise_default();
          _this.emit("keyboardasyncload", requestedStub, completionPromise.corePromise);
          var keyboardPromise = _this.keyboardCache.fetchKeyboardForStub(requestedStub);
          var timeoutPromise = new Promise(function(resolve, reject) {
            var timeoutMsg = "Sorry, the ".concat(requestedStub.name, " keyboard for ").concat(requestedStub.langName, " is not currently available.");
            window.setTimeout(function() {
              return reject(new Error(timeoutMsg));
            }, ContextManagerBase2.TIMEOUT_THRESHOLD);
          });
          var combinedPromise = Promise.race([keyboardPromise, timeoutPromise]);
          combinedPromise.then(function() {
            completionPromise.resolve(null);
            timeoutPromise.catch(function() {
            });
          });
          combinedPromise.catch(function(err) {
            completionPromise.resolve(err);
            throw err;
          });
          return combinedPromise;
        });
        var promise = this.deferredKeyboardActivation(defermentPromise_1, requestedStub, this.currentKeyboardSrcTarget());
        return {
          keyboard: promise.then(function(activation) {
            return (0, build_exports.__awaiter)(_this, void 0, void 0, function() {
              return (0, build_exports.__generator)(this, function(_a2) {
                if (!activation) {
                  return [2, Promise.resolve(null)];
                } else {
                  return [2, defermentPromise_1];
                }
                return [2];
              });
            });
          }),
          metadata: requestedStub
        };
      }
    };
    ContextManagerBase2.TIMEOUT_THRESHOLD = 1e4;
    return ContextManagerBase2;
  }(import_eventemitter33.default);

  // ../../../build/engine/main/obj/hardKeyboard.js
  var import_eventemitter34 = __toESM(require_eventemitter3(), 1);
  var HardKeyboard = /* @__PURE__ */ function(_super) {
    (0, build_exports.__extends)(HardKeyboard2, _super);
    function HardKeyboard2() {
      return _super !== null && _super.apply(this, arguments) || this;
    }
    return HardKeyboard2;
  }(import_eventemitter34.default);
  var hardKeyboard_default = HardKeyboard;

  // ../../../build/engine/package-cache/obj/stubAndKeyboardCache.js
  var import_eventemitter35 = __toESM(require_eventemitter3(), 1);
  var KEYBOARD_PREFIX = "Keyboard_";
  function prefixed(text) {
    if (!text.startsWith(KEYBOARD_PREFIX)) {
      return KEYBOARD_PREFIX + text;
    } else {
      return text;
    }
  }
  function withoutPrefix(text) {
    if (text.startsWith(KEYBOARD_PREFIX)) {
      return text.substring(KEYBOARD_PREFIX.length);
    } else {
      return text;
    }
  }
  var StubAndKeyboardCache = /* @__PURE__ */ function(_super) {
    (0, build_exports.__extends)(StubAndKeyboardCache2, _super);
    function StubAndKeyboardCache2(keyboardLoader) {
      var _this = _super.call(this) || this;
      _this.stubSetTable = {};
      _this.keyboardTable = {};
      _this.keyboardLoader = keyboardLoader;
      return _this;
    }
    StubAndKeyboardCache2.prototype.getKeyboardForStub = function(stub) {
      return this.getKeyboard(stub.KI);
    };
    StubAndKeyboardCache2.prototype.getKeyboard = function(keyboardID) {
      if (!keyboardID) {
        return null;
      }
      var entry = this.keyboardTable[prefixed(keyboardID)];
      return entry instanceof Promise ? null : entry;
    };
    Object.defineProperty(StubAndKeyboardCache2.prototype, "defaultStub", {
      get: function() {
        function getFirstValue(obj) {
          var keys = Object.keys(obj);
          if (keys.length == 0) {
            return void 0;
          } else {
            return obj[keys[0]];
          }
        }
        ;
        var stubTable = getFirstValue(this.stubSetTable);
        if (!stubTable) {
          return void 0;
        } else {
          return getFirstValue(stubTable);
        }
      },
      enumerable: false,
      configurable: true
    });
    StubAndKeyboardCache2.prototype.addKeyboard = function(keyboard) {
      var keyboardID = prefixed(keyboard.id);
      this.keyboardTable[keyboardID] = keyboard;
      this.emit("keyboardadded", keyboard);
    };
    StubAndKeyboardCache2.prototype.fetchKeyboardForStub = function(stub) {
      return this.fetchKeyboard(stub.KI);
    };
    StubAndKeyboardCache2.prototype.isFetchingKeyboard = function(keyboardID) {
      if (!keyboardID) {
        throw new Error("Keyboard ID must be specified");
      }
      keyboardID = prefixed(keyboardID);
      var cachedEntry = this.keyboardTable[keyboardID];
      return cachedEntry instanceof Promise;
    };
    StubAndKeyboardCache2.prototype.fetchKeyboard = function(keyboardID) {
      var _this = this;
      if (!keyboardID) {
        throw new Error("Keyboard ID must be specified");
      }
      if (!this.keyboardLoader) {
        throw new Error("Cannot load keyboards; this cache was configured without a loader");
      }
      keyboardID = prefixed(keyboardID);
      var cachedEntry = this.keyboardTable[keyboardID];
      if (cachedEntry instanceof keyboard_default) {
        return Promise.resolve(cachedEntry);
      } else if (cachedEntry instanceof Promise) {
        return cachedEntry;
      }
      var stub = this.getStub(keyboardID, null);
      if (!stub) {
        throw new Error("No stub for ".concat(withoutPrefix(keyboardID), " has been registered"));
      }
      if (!stub.filename) {
        throw new Error("The registered stub for ".concat(withoutPrefix(keyboardID), " lacks a path to the main keyboard file"));
      }
      var promise = this.keyboardLoader.loadKeyboardFromStub(stub);
      this.keyboardTable[keyboardID] = promise;
      promise.then(function(kbd) {
        kbd.scriptObject["KI"] = keyboardID;
        _this.addKeyboard(kbd);
      }).catch(function(err) {
        delete _this.keyboardTable[keyboardID];
        throw err;
      });
      return promise;
    };
    StubAndKeyboardCache2.prototype.addStub = function(stub) {
      var _a;
      var keyboardID = prefixed(stub.KI);
      var stubTable = this.stubSetTable[keyboardID] = (_a = this.stubSetTable[keyboardID]) !== null && _a !== void 0 ? _a : {};
      stubTable[stub.KLC] = stub;
      this.emit("stubadded", stub);
    };
    StubAndKeyboardCache2.prototype.findMatchingStub = function(stub) {
      return this.getStub(stub.KI, stub.KLC);
    };
    StubAndKeyboardCache2.prototype.getStub = function(arg0, arg1) {
      var _a;
      var keyboardID;
      var languageID = arg1 || "---";
      if (arg0 instanceof keyboard_default) {
        keyboardID = arg0.id;
      } else {
        keyboardID = arg0;
      }
      if (keyboardID) {
        keyboardID = prefixed(keyboardID);
      }
      var stubTable = (_a = this.stubSetTable[keyboardID]) !== null && _a !== void 0 ? _a : {};
      if (languageID != "---") {
        return stubTable[languageID];
      } else {
        var keys = Object.keys(stubTable);
        if (keys.length == 0) {
          return null;
        } else {
          return stubTable[keys[0]];
        }
      }
      ;
    };
    StubAndKeyboardCache2.prototype.forgetKeyboard = function(keyboard, purge) {
      if (purge === void 0) {
        purge = false;
      }
      var id = keyboard instanceof keyboard_default ? keyboard.id : prefixed(keyboard);
      if (this.stubSetTable[id]) {
        delete this.stubSetTable[id];
      }
      if (purge && this.keyboardTable[id]) {
        delete this.keyboardTable[id];
      }
    };
    StubAndKeyboardCache2.prototype.getStubList = function() {
      var arr = [];
      var kbdIds = Object.keys(this.stubSetTable);
      for (var _i = 0, kbdIds_1 = kbdIds; _i < kbdIds_1.length; _i++) {
        var kbdId = kbdIds_1[_i];
        var row = this.stubSetTable[kbdId];
        var langIds = Object.keys(row);
        for (var _a = 0, langIds_1 = langIds; _a < langIds_1.length; _a++) {
          var langId = langIds_1[_a];
          arr.push(row[langId]);
        }
      }
      return arr;
    };
    return StubAndKeyboardCache2;
  }(import_eventemitter35.default);
  var stubAndKeyboardCache_default = StubAndKeyboardCache;

  // ../../../build/engine/package-cache/obj/keyboardStub.js
  var REGIONS = ["World", "Africa", "Asia", "Europe", "South America", "North America", "Oceania", "Central America", "Middle East"];
  var REGION_CODES = ["un", "af", "as", "eu", "sa", "na", "oc", "ca", "me"];
  var REGEX_FOR_PRECONFIGURED_PATH = RegExp("^(([\\.]/)|([\\.][\\.]/)|(/))|(:)");
  function configureFilePathing(path, configurationBasePath) {
    configurationBasePath = configurationBasePath || "";
    if (path && !REGEX_FOR_PRECONFIGURED_PATH.test(path)) {
      return configurationBasePath + path;
    } else {
      return path;
    }
  }
  var KeyboardStub = /* @__PURE__ */ function(_super) {
    (0, build_exports.__extends)(KeyboardStub2, _super);
    function KeyboardStub2(arg0, arg1, arg2) {
      var _this = this;
      if (typeof arg0 !== "string") {
        if (arg0.id !== void 0) {
          var apiSpec = arg0;
          apiSpec.id = prefixed(apiSpec.id);
          _this = _super.call(this, apiSpec, arg2) || this;
          _this.KF = configureFilePathing(apiSpec.filename, arg1);
          _this.mapRegion(apiSpec.languages);
        } else {
          var rawStub = arg0;
          rawStub.KI = prefixed(rawStub.KI);
          _this = _super.call(this, rawStub, arg2) || this;
          _this.KF = configureFilePathing(rawStub.KF, arg1);
          _this.KP = rawStub.KP;
          _this.KR = rawStub.KR;
          _this.KRC = rawStub.KRC;
          return;
        }
      } else {
        _this = _super.call(this, prefixed(arg0), arg1) || this;
      }
      return _this;
    }
    KeyboardStub2.prototype.mapRegion = function(language) {
      var region = language.region;
      var rIndex = 0;
      if (typeof region == "number") {
        if (region < 1 || region > 9) {
          rIndex = 0;
        } else {
          rIndex = region - 1;
        }
      } else if (typeof region == "string") {
        var list = region.length == 2 ? REGION_CODES : REGIONS;
        for (var i = 0; i < list.length; i++) {
          if (region.toLowerCase() == list[i].toLowerCase()) {
            rIndex = i;
            break;
          }
        }
      }
      this.KR = REGIONS[rIndex];
      this.KRC = REGION_CODES[rIndex];
    };
    Object.defineProperty(KeyboardStub2.prototype, "region", {
      get: function() {
        return this.KR;
      },
      enumerable: false,
      configurable: true
    });
    Object.defineProperty(KeyboardStub2.prototype, "regionCode", {
      get: function() {
        return this.KRC;
      },
      enumerable: false,
      configurable: true
    });
    Object.defineProperty(KeyboardStub2.prototype, "filename", {
      get: function() {
        return this.KF;
      },
      enumerable: false,
      configurable: true
    });
    KeyboardStub2.toStubs = function(arg, keyboardBaseUri, fontBaseUri) {
      var errorMsg = "";
      if (typeof arg.language != "undefined") {
        console.warn("The 'language' property for keyboard stubs has been deprecated.  Please use the 'languages' property instead.");
      }
      arg.languages || (arg.languages = arg.language);
      if (!arg) {
        errorMsg = "Stub undefined";
      } else if (!arg.id) {
        errorMsg = "KeyboardStub has undefined id";
      } else if (!arg.languages) {
        errorMsg = "KeyboardStub has undefined languages";
      }
      if (errorMsg != "") {
        return [{ error: new Error(errorMsg) }];
      }
      var languages = [];
      if (!Array.isArray(arg.languages)) {
        languages.push(arg.languages);
      } else {
        languages = languages.concat(arg.languages);
      }
      var stubs = [];
      languages.forEach(function(language) {
        var intermediate = (0, build_exports.__assign)((0, build_exports.__assign)({}, arg), { languages: language, language: void 0 });
        var stub = new KeyboardStub2(intermediate, keyboardBaseUri, fontBaseUri);
        stubs.push(stub);
      });
      return stubs;
    };
    KeyboardStub2.prototype.merge = function(stub) {
      this.KL || (this.KL = stub.KL);
      this.KR || (this.KR = stub.KR);
      this.KRC || (this.KRC = stub.KRC);
      this.KN || (this.KN = stub.KN);
      this.KF || (this.KF = stub.KF);
      this.KFont || (this.KFont = stub.KFont);
      this.KOskFont || (this.KOskFont = stub.KOskFont);
      if (stub._displayName) {
        this._displayName || (this._displayName = stub._displayName);
      }
    };
    KeyboardStub2.prototype.validateForCustomKeyboard = function() {
      if (_super.prototype.validateForCustomKeyboard.call(this) || !this.KF || !this.KR) {
        return new Error("To use a custom keyboard, you must specify file name, keyboard id, keyboard name, language, language code, and region.");
      } else {
        return null;
      }
    };
    return KeyboardStub2;
  }(keyboardProperties_default);
  var keyboardStub_default = KeyboardStub;
  function mergeAndResolveStubPromises(keyboardStubs, errorStubs) {
    if (errorStubs.length == 0) {
      return Promise.resolve(keyboardStubs);
    }
    if (keyboardStubs.length == 0) {
      return Promise.reject(errorStubs);
    } else {
      var result = keyboardStubs;
      return Promise.resolve(result.concat(errorStubs));
    }
  }

  // ../../../build/engine/package-cache/obj/cloud/queryEngine.js
  var import_eventemitter36 = __toESM(require_eventemitter3(), 1);
  var CLOUD_TIMEOUT_ERR = "The Cloud API request timed out.";
  var CLOUD_MALFORMED_OBJECT_ERR = "Could not find a keyboard with that ID.";
  var CLOUD_STUB_REGISTRATION_ERR = "The Cloud API failed to find an appropriate keyboard.";
  var CLOUD_REGISTRATION_ERR = "Error occurred while registering keyboards: ";
  var MISSING_KEYBOARD = function(kbdid) {
    return kbdid + " keyboard not found.";
  };
  var CloudQueryEngine = /* @__PURE__ */ function(_super) {
    (0, build_exports.__extends)(CloudQueryEngine2, _super);
    function CloudQueryEngine2(requestEngine, pathConfig) {
      var _this = _super.call(this) || this;
      _this.cloudResolutionPromises = {};
      _this.languageFetchStarted = false;
      _this.registerFromCloud = function(x) {
        var promiseid = x.timerid;
        var result;
        try {
          result = _this._registerCore(x);
        } catch (err) {
          result = new Error(CLOUD_REGISTRATION_ERR + err);
        }
        if (!promiseid) {
          _this.emit("unboundregister", result);
          return;
        } else {
          var promise = _this.cloudResolutionPromises[promiseid];
          if (!promise) {
            _this.emit("unboundregister", result);
            return;
          } else {
            try {
              if (result instanceof Error) {
                promise.reject(result);
              } else {
                promise.resolve(result);
              }
            } finally {
              delete _this.cloudResolutionPromises[promiseid];
            }
          }
        }
      };
      _this.requestEngine = requestEngine;
      _this.pathConfig = pathConfig;
      _this._languageListPromise = new managedPromise_default();
      return _this;
    }
    Object.defineProperty(CloudQueryEngine2.prototype, "languageListPromise", {
      get: function() {
        var _this = this;
        if (!this.languageFetchStarted) {
          this.languageFetchStarted = true;
          this.keymanCloudRequest("", true).catch(function(error) {
            _this.languageFetchStarted = false;
            _this._languageListPromise.reject(error);
            _this._languageListPromise = new managedPromise_default();
          });
        }
        return this._languageListPromise.corePromise;
      },
      enumerable: false,
      configurable: true
    });
    CloudQueryEngine2.prototype.keymanCloudRequest = function(cmd, byLanguage) {
      var _this = this;
      var URL2 = "https://api.keyman.com/cloud/4.0/" + (arguments.length > 1 && byLanguage ? "languages" : "keyboards");
      var queryConfig = "?jsonp=keyman.register&languageidtype=bcp47&version=" + version_default.CURRENT.toString();
      var query = URL2 + queryConfig + cmd;
      var _a = this.requestEngine.request(query), promise = _a.promise, queryId = _a.queryId;
      this.cloudResolutionPromises[queryId] = promise;
      promise.finally(function() {
        delete _this.cloudResolutionPromises[queryId];
      });
      return promise.corePromise;
    };
    CloudQueryEngine2.prototype._registerCore = function(queryResult) {
      var options = queryResult.options;
      var fontPath = options["fontBaseUri"];
      if (this.pathConfig.fonts != "") {
        fontPath = this.pathConfig.fonts;
      } else {
        this.pathConfig.updateFontPath(fontPath);
      }
      if (typeof queryResult.error == "string") {
        var badName = "";
        if (typeof queryResult.options.keyboardid == "string") {
          var keyboardId = queryResult.options.keyboardid;
          badName = keyboardId.substring(0, 1).toUpperCase() + keyboardId.substring(1);
        }
        return new Error(MISSING_KEYBOARD(badName));
      }
      if (typeof options == "undefined" || typeof options["context"] == "undefined") {
        return new Error(CLOUD_MALFORMED_OBJECT_ERR);
      }
      var stubs = [];
      if (options.context == "keyboard") {
        var i = void 0, kp = queryResult.keyboard;
        if (Array.isArray(kp)) {
          for (i = 0; i < kp.length; i++) {
            stubs = stubs.concat(CloudQueryEngine2.registerLanguagesForKeyboard(kp[i], options, i));
          }
        } else {
          stubs = stubs.concat(CloudQueryEngine2.registerLanguagesForKeyboard(kp, options, 0));
        }
      } else if (options.context == "language") {
        var languageList = queryResult.languages;
        this._languageListPromise.resolve(languageList);
        return languageList;
      }
      return stubs;
    };
    CloudQueryEngine2.registerLanguagesForKeyboard = function(kp, options, nArg) {
      var kbId = "";
      if (typeof kp == "undefined") {
        return [];
      }
      if (typeof options.keyboardid == "string") {
        kbId = options.keyboardid.split(",")[nArg];
      }
      if (Array.isArray(kp)) {
        if (kp.length == 1 || kbId.substr(-1, 1) == "$" || kbId == "") {
          var stubs = [];
          for (var i = 0; i < kp.length; i++) {
            stubs = stubs.concat(this.registerLanguagesForKeyboard(kp[i], options, nArg));
          }
          return stubs;
        } else {
          var nDflt = 0;
          for (var i = 0; i < kp.length; i++) {
            var id = kp[i].id.toLowerCase();
            if (id == "us") {
              id = "english";
            }
            if (Array.isArray(kp[i].languages)) {
              var langArray = kp[i].languages;
              for (var j = 0; j < langArray.length; j++) {
                if (id == langArray[j].name.toLowerCase()) {
                  nDflt = i;
                  break;
                }
              }
            }
          }
          return this.registerLanguagesForKeyboard(kp[nDflt], options, nArg);
        }
      } else {
        var fontPath = options.fontBaseUri || "";
        var allStubs = keyboardStub_default.toStubs(kp, options.keyboardBaseUri, fontPath);
        var lgCode_1 = kbId.split("@")[1];
        if (allStubs.length == 1 && typeof allStubs[0].error != "undefined") {
          throw allStubs[0].error;
        } else if (typeof lgCode_1 != "string") {
          return allStubs;
        } else {
          lgCode_1 = lgCode_1.replace(/\$$/, "");
          return [allStubs.find(function(stub) {
            return stub.KLC == lgCode_1;
          })];
        }
      }
    };
    CloudQueryEngine2.prototype.fetchCloudStubs = function(cloudList) {
      return (0, build_exports.__awaiter)(this, void 0, void 0, function() {
        var cmd, comma, i, errorStubs, result, err_1, stub;
        return (0, build_exports.__generator)(this, function(_a) {
          switch (_a.label) {
            case 0:
              if (cloudList.length == 0) {
                return [2, Promise.resolve([])];
              }
              cmd = "&keyboardid=";
              comma = "";
              for (i = 0; i < cloudList.length; i++) {
                cmd = cmd + comma + cloudList[i].toString();
                comma = ",";
              }
              errorStubs = [];
              _a.label = 1;
            case 1:
              _a.trys.push([1, 3, , 4]);
              return [4, this.keymanCloudRequest(cmd, false)];
            case 2:
              result = _a.sent();
              return [2, mergeAndResolveStubPromises(result, errorStubs)];
            case 3:
              err_1 = _a.sent();
              console.error(err_1);
              stub = { error: err_1 };
              errorStubs.push(stub);
              return [2, Promise.reject(errorStubs)];
            case 4:
              return [2];
          }
        });
      });
    };
    return CloudQueryEngine2;
  }(import_eventemitter36.default);
  var queryEngine_default = CloudQueryEngine;

  // ../../../build/engine/package-cache/obj/keyboardRequisitioner.js
  var CloudRequestEntry = /* @__PURE__ */ function() {
    function CloudRequestEntry2(id, language) {
      this.id = id;
      this.language = language;
    }
    CloudRequestEntry2.prototype.toString = function() {
      var str = this.id;
      if (this.language) {
        str = str + "@" + this.language;
        if (this.version) {
          str = str + "@" + this.version;
        }
      } else {
        if (this.version) {
          str = str + "@@" + this.version;
        }
      }
      return str;
    };
    return CloudRequestEntry2;
  }();
  function convertToErrorStub(stub, err) {
    return {
      keyboard: {
        id: stub.id,
        name: stub.name
      },
      error: typeof err == "string" ? new Error(err) : err
    };
  }
  function toQuerySpecs(id, langId, version) {
    var obj = new CloudRequestEntry(id, langId);
    if (version) {
      obj.version = version;
    }
    return obj;
  }
  function isUniqueRequest(cache, cloudList, tEntry) {
    if (cache.getStub(tEntry.id, tEntry.language) == null) {
      for (var k = 0; k < cloudList.length; k++) {
        if (cloudList[k].id == tEntry["id"] && cloudList[k].language == tEntry.language) {
          return false;
        }
      }
      return true;
    } else {
      return false;
    }
  }
  var KeyboardRequisitioner = function() {
    function KeyboardRequisitioner2(keyboardLoader, keyboardRequester, pathConfig) {
      var _this = this;
      this.pathConfig = pathConfig;
      this.cache = new stubAndKeyboardCache_default(keyboardLoader);
      this.cloudQueryEngine = new queryEngine_default(keyboardRequester, this.pathConfig);
      this.cloudQueryEngine.on("unboundregister", function(registration) {
        if (Array.isArray(registration)) {
          registration.forEach(function(entry) {
            _this.cache.addStub(entry);
          });
        }
      });
    }
    KeyboardRequisitioner2.prototype.addKeyboardArray = function(x) {
      var _this = this;
      var completeStubs = [];
      var incompleteStubs = [];
      var stubs = [];
      var identifiers = [];
      var errorStubs = [];
      for (var _i = 0, x_1 = x; _i < x_1.length; _i++) {
        var entry = x_1[_i];
        if (typeof entry == "string" && entry.length > 0) {
          identifiers.push(entry);
        } else {
          if (entry["KI"] || entry["KL"] || entry["KLC"] || entry["KFont"] || entry["KOskFont"]) {
            stubs.push(new keyboardStub_default(entry));
          } else {
            var apiSpecEntry = entry;
            if (typeof apiSpecEntry.language != "undefined") {
              console.warn("The 'language' property for keyboard stubs has been deprecated.  Please use the 'languages' property instead.");
            }
            apiSpecEntry.languages || (apiSpecEntry.languages = apiSpecEntry.language);
            if (typeof apiSpecEntry.languages === "undefined") {
              var msg = "To use keyboard '" + apiSpecEntry.id + "', you must specify languages.";
              errorStubs.push(convertToErrorStub(apiSpecEntry, msg));
            } else if (Array.isArray(apiSpecEntry.languages)) {
              var splitStubs = keyboardStub_default.toStubs(apiSpecEntry, this.pathConfig.keyboards, this.pathConfig.fonts);
              for (var _a = 0, splitStubs_1 = splitStubs; _a < splitStubs_1.length; _a++) {
                var stub = splitStubs_1[_a];
                if (stub instanceof keyboardStub_default) {
                  stubs.push(stub);
                } else {
                  errorStubs.push(stub);
                }
              }
            } else {
              var singleLangEntry = apiSpecEntry;
              stubs.push(new keyboardStub_default(singleLangEntry, this.pathConfig.keyboards, this.pathConfig.fonts));
            }
          }
        }
      }
      for (var _b = 0, stubs_1 = stubs; _b < stubs_1.length; _b++) {
        var stub = stubs_1[_b];
        if (stub.KF) {
          var err = stub.validateForCustomKeyboard();
          if (err) {
            errorStubs.push(convertToErrorStub(stub, err));
          } else {
            completeStubs.push(stub);
          }
        } else {
          incompleteStubs.push(stub);
        }
      }
      var cloudList = [];
      for (var _c = 0, incompleteStubs_1 = incompleteStubs; _c < incompleteStubs_1.length; _c++) {
        var incomplete = incompleteStubs_1[_c];
        if (!incomplete.KI && !incomplete.KLC) {
          errorStubs.push(convertToErrorStub(incomplete, "Cannot fetch keyboard information without a keyboard ID or language code."));
          continue;
        }
        var querySpec = toQuerySpecs(withoutPrefix(incomplete.id), incomplete.langId);
        if (isUniqueRequest(this.cache, cloudList, querySpec)) {
          cloudList.push(querySpec);
        }
      }
      for (var _d = 0, identifiers_1 = identifiers; _d < identifiers_1.length; _d++) {
        var identifier = identifiers_1[_d];
        var pList = identifier.split("@");
        var lList = [""];
        if (pList[0].toLowerCase() == "english") {
          pList[0] = "us";
        }
        if (pList.length > 1) {
          lList = pList[1].split(",");
        }
        for (var j = 0; j < lList.length; j++) {
          if (j > 0 && lList[j] == "") {
            continue;
          }
          var querySpec = toQuerySpecs(pList[0], lList[j], pList[2]);
          if (isUniqueRequest(this.cache, cloudList, querySpec)) {
            cloudList.push(querySpec);
          }
        }
      }
      completeStubs.forEach(function(stub2) {
        return _this.cache.addStub(stub2);
      });
      var resultPromise = this.cloudQueryEngine.fetchCloudStubs(cloudList.map(function(spec) {
        return spec.toString();
      }));
      return resultPromise.then(function(queryResults) {
        for (var _i2 = 0, queryResults_1 = queryResults; _i2 < queryResults_1.length; _i2++) {
          var result = queryResults_1[_i2];
          if (result instanceof keyboardStub_default) {
            _this.cache.addStub(result);
            completeStubs.push(result);
          } else {
            errorStubs.push(result);
          }
        }
        return [].concat(errorStubs).concat(completeStubs);
      });
    };
    KeyboardRequisitioner2.prototype.addLanguageKeyboards = function(languages) {
      return (0, build_exports.__awaiter)(this, void 0, void 0, function() {
        var errorStubs, fetchedLanguageList, error_1, languageList, cmd, i, lgName, addAll, languageFound, j, stub;
        var _this = this;
        return (0, build_exports.__generator)(this, function(_a) {
          switch (_a.label) {
            case 0:
              errorStubs = [];
              fetchedLanguageList = [];
              _a.label = 1;
            case 1:
              _a.trys.push([1, 3, , 4]);
              return [4, this.cloudQueryEngine.languageListPromise];
            case 2:
              fetchedLanguageList = _a.sent();
              return [3, 4];
            case 3:
              error_1 = _a.sent();
              console.error(error_1);
              errorStubs.push({ error: error_1 });
              return [2, errorStubs];
            case 4:
              languageList = fetchedLanguageList;
              cmd = "";
              for (i = 0; i < languages.length; i++) {
                lgName = languages[i].toLowerCase();
                addAll = lgName.substr(-1, 1) == "$";
                if (addAll) {
                  lgName = lgName.substr(0, lgName.length - 1);
                }
                languageFound = false;
                for (j = 0; j < languageList.length; j++) {
                  if (lgName == languageList[j]["name"].toLowerCase()) {
                    if (cmd != "") {
                      cmd = cmd + ",";
                    }
                    cmd = cmd + "@" + languageList[j]["id"];
                    if (addAll) {
                      cmd = cmd + "$";
                    }
                    languageFound = true;
                    break;
                  }
                }
                if (!languageFound) {
                  stub = { language: { name: lgName }, error: new Error(this.alertLanguageUnavailable(lgName)) };
                  errorStubs.push(stub);
                }
              }
              if (cmd == "") {
                return [2, Promise.reject(errorStubs)];
              }
              return [2, this.cloudQueryEngine.keymanCloudRequest("&keyboardid=" + cmd, false).then(function(result) {
                return (0, build_exports.__awaiter)(_this, void 0, void 0, function() {
                  var results, _i, results_1, result_1;
                  return (0, build_exports.__generator)(this, function(_a2) {
                    switch (_a2.label) {
                      case 0:
                        return [4, mergeAndResolveStubPromises(result, errorStubs)];
                      case 1:
                        results = _a2.sent();
                        for (_i = 0, results_1 = results; _i < results_1.length; _i++) {
                          result_1 = results_1[_i];
                          if (typeof result_1["error"] == "undefined") {
                            this.cache.addStub(result_1);
                          }
                        }
                        return [2, results];
                    }
                  });
                });
              }, function(err) {
                console.error(err);
                var stub2 = { error: err };
                errorStubs.push(stub2);
                return Promise.reject(errorStubs);
              })];
          }
        });
      });
    };
    KeyboardRequisitioner2.prototype.fetchCloudCatalog = function() {
      return (0, build_exports.__awaiter)(this, void 0, void 0, function() {
        var stubs, error_2;
        var _this = this;
        return (0, build_exports.__generator)(this, function(_a) {
          switch (_a.label) {
            case 0:
              _a.trys.push([0, 2, , 3]);
              return [4, this.cloudQueryEngine.keymanCloudRequest("", false)];
            case 1:
              stubs = _a.sent();
              stubs.forEach(function(stub) {
                return _this.cache.addStub(stub);
              });
              return [2, stubs];
            case 2:
              error_2 = _a.sent();
              return [2, Promise.reject([{ error: error_2 }])];
            case 3:
              return [2];
          }
        });
      });
    };
    KeyboardRequisitioner2.prototype.alertLanguageUnavailable = function(languageName) {
      var msg = "No keyboards are available for " + languageName + ". Does it have another language name?";
      return msg;
    };
    return KeyboardRequisitioner2;
  }();
  var keyboardRequisitioner_default = KeyboardRequisitioner;

  // ../../../build/engine/package-cache/obj/modelCache.js
  var ModelManager = /* @__PURE__ */ function() {
    function ModelManager2() {
      this.registeredModels = {};
      this.languageModelMap = {};
    }
    ModelManager2.prototype.modelForLanguage = function(lgCode) {
      return this.languageModelMap[lgCode];
    };
    ModelManager2.prototype.register = function(model) {
      model.id = model.id.toLowerCase();
      if (JSON.stringify(model) == JSON.stringify(this.registeredModels[model.id])) {
        return;
      }
      this.registeredModels[model.id] = model;
      var mm = this;
      model.languages.forEach(function(code) {
        if (!code) {
          console.warn("Null / undefined language codes are not permitted for registration.");
          return;
        }
        mm.languageModelMap[code] = model;
      });
    };
    ModelManager2.prototype.unregister = function(modelId) {
      var model;
      modelId = modelId.toLowerCase();
      if (this.registeredModels[modelId]) {
        model = this.registeredModels[modelId];
        delete this.registeredModels[modelId];
      } else {
        return;
      }
      var mm = this;
      model.languages.forEach(function(code) {
        if (mm.languageModelMap[code].id == modelId) {
          delete mm.languageModelMap[code];
        }
      });
      return model;
    };
    ModelManager2.prototype.isRegistered = function(model) {
      return !!this.registeredModels[model.id.toLowerCase()];
    };
    return ModelManager2;
  }();
  var modelCache_default = ModelManager;

  // ../../../build/engine/dom-utils/obj/arrayFromNodeList.js
  function arrayFromNodeList(nl) {
    var res = [];
    for (var i = 0; i < nl.length; i++) {
      res.push(nl[i]);
    }
    return res;
  }

  // ../../../build/engine/dom-utils/obj/createUnselectableElement.js
  function createUnselectableElement(nodeName) {
    var e = document.createElement(nodeName);
    e.style.userSelect = "none";
    e.style.webkitUserSelect = "none";
    e.style["MozUserSelect"] = "none";
    return e;
  }

  // ../../../build/engine/dom-utils/obj/stylesheets.js
  var StylesheetManager = /* @__PURE__ */ function() {
    function StylesheetManager2(linkNode, doCacheBusting) {
      this.fontStyleDefinitions = {};
      this.linkedSheets = [];
      if (!linkNode) {
        var _ElemHead = document.getElementsByTagName("HEAD");
        if (_ElemHead.length > 0) {
          linkNode = _ElemHead[0];
        } else {
          linkNode = document.body;
        }
      }
      this.linkNode = linkNode;
      this.doCacheBusting = doCacheBusting || false;
    }
    StylesheetManager2.prototype.linkStylesheet = function(sheet) {
      this.linkedSheets.push(sheet);
      this.linkNode.appendChild(sheet);
    };
    StylesheetManager2.prototype.addStyleSheetForFont = function(fd, fontPathRoot, os) {
      if (!fd) {
        return;
      }
      if (typeof fd.files == "undefined") {
        return;
      }
      var fontKey = fd.family;
      var i, ttf = "", woff = "", eot = "", svg = "", fList = [];
      if (!os) {
        os = deviceSpec_default.OperatingSystem.Other;
      }
      var fontStyleMap = this.fontStyleDefinitions[os] = this.fontStyleDefinitions[os] || {};
      if (fontStyleMap[fontKey]) {
        var sheet_1 = fontStyleMap[fontKey];
        if (!sheet_1.parentNode) {
          this.linkStylesheet(sheet_1);
        }
        return;
      }
      if (typeof fd.files == "string") {
        fList[0] = fd.files;
      } else {
        fList = fd.files;
      }
      for (i = 0; i < fList.length; i++) {
        if (fList[i].toLowerCase().indexOf(".otf") > 0)
          ttf = fList[i];
        if (fList[i].toLowerCase().indexOf(".ttf") > 0)
          ttf = fList[i];
        if (fList[i].toLowerCase().indexOf(".woff") > 0)
          woff = fList[i];
        if (fList[i].toLowerCase().indexOf(".eot") > 0)
          eot = fList[i];
        if (fList[i].toLowerCase().indexOf(".svg") > 0)
          svg = fList[i];
      }
      if (ttf != "" && ttf.indexOf("/") < 0) {
        ttf = fontPathRoot + ttf;
      }
      if (woff != "" && woff.indexOf("/") < 0) {
        woff = fontPathRoot + woff;
      }
      if (eot != "" && eot.indexOf("/") < 0) {
        eot = fontPathRoot + eot;
      }
      if (svg != "" && svg.indexOf("/") < 0) {
        svg = fontPathRoot + svg;
      }
      var s = "@font-face {\nfont-family:" + fd.family + ";\nfont-style:normal;\nfont-weight:normal;\n";
      if (os == deviceSpec_default.OperatingSystem.iOS) {
        if (ttf != "") {
          if (this.doCacheBusting) {
            ttf = this.cacheBust(ttf);
          }
          s = s + "src:url('" + ttf + "') format('truetype');";
        } else {
          return null;
        }
      } else {
        var s0 = [];
        if (os == deviceSpec_default.OperatingSystem.Android) {
          if (svg != "") {
            s0.push("url('" + svg + "') format('svg')");
          }
          if (woff != "") {
            s0.push("url('" + woff + "') format('woff')");
          }
          if (ttf != "") {
            s0.push("url('" + ttf + "') format('truetype')");
          }
        } else {
          if (woff != "") {
            s0.push("url('" + woff + "') format('woff')");
          }
          if (ttf != "") {
            s0.push("url('" + ttf + "') format('truetype')");
          }
          if (svg != "") {
            s0.push("url('" + svg + "') format('svg')");
          }
        }
        if (s0.length == 0) {
          return null;
        }
        s += "src:" + s0.join(",") + ";";
      }
      s = s + "\n}\n";
      var sheet = createStyleSheet(s);
      fontStyleMap[fontKey] = sheet;
      this.linkStylesheet(sheet);
      return sheet;
    };
    StylesheetManager2.prototype.cacheBust = function(uri) {
      return uri + "?v=" + new Date().getTime();
    };
    StylesheetManager2.prototype.linkExternalSheet = function(href) {
      try {
        if (document.querySelector("link[href=" + JSON.stringify(href) + "]") != null) {
          return;
        }
      } catch (e) {
        return;
      }
      var linkElement = document.createElement("link");
      linkElement.type = "text/css";
      linkElement.rel = "stylesheet";
      linkElement.href = href;
      this.linkStylesheet(linkElement);
    };
    StylesheetManager2.prototype.unlink = function(stylesheet) {
      var index = this.linkedSheets.indexOf(stylesheet);
      if (index > -1) {
        this.linkedSheets.splice(index, 1);
        stylesheet.parentNode.removeChild(stylesheet);
        return true;
      }
      return false;
    };
    StylesheetManager2.prototype.unlinkAll = function() {
      for (var _i = 0, _a = this.linkedSheets; _i < _a.length; _i++) {
        var sheet = _a[_i];
        if (sheet.parentNode) {
          sheet.parentNode.removeChild(sheet);
        }
      }
    };
    return StylesheetManager2;
  }();
  function createStyleSheet(styleString) {
    var _ElemStyle = document.createElement("style");
    _ElemStyle.type = "text/css";
    _ElemStyle.appendChild(document.createTextNode(styleString));
    return _ElemStyle;
  }

  // ../../../build/engine/dom-utils/obj/landscapeView.js
  function landscapeView() {
    var orientation;
    if (typeof window.orientation != "undefined") {
      orientation = window.orientation;
    } else if (typeof window.screen.orientation != "undefined") {
      orientation = window.screen.orientation.angle;
    }
    if (orientation !== void 0) {
      return Math.abs(orientation / 90) == 1;
    } else {
      return false;
    }
  }

  // ../../../build/engine/dom-utils/obj/cookieSerializer.js
  var no_change = function(val) {
    return val;
  };
  var CookieSerializer = /* @__PURE__ */ function() {
    function CookieSerializer2(name) {
      this.name = name;
    }
    CookieSerializer2.prototype.load = function(decoder) {
      return this.loadCookie(this.name, decoder || no_change);
    };
    CookieSerializer2.prototype.save = function(cookie, encoder) {
      this.saveCookie(this.name, cookie, encoder || no_change);
    };
    CookieSerializer2.prototype._loadRawCookies = function() {
      var v = {};
      if (typeof document.cookie != "undefined" && document.cookie != "") {
        var c = document.cookie.split(/;\s*/);
        for (var i = 0; i < c.length; i++) {
          var d = c[i].split("=");
          if (d.length == 2) {
            v[d[0]] = d[1];
          }
        }
      }
      return v;
    };
    CookieSerializer2.prototype.loadCookie = function(cookieName, decoder) {
      var cookie = {};
      var allCookies = this._loadRawCookies();
      var encodedCookie = allCookies[cookieName];
      if (encodedCookie) {
        var rawDecode = decodeURIComponent(encodedCookie).split(";");
        for (var i = 0; i < rawDecode.length; i++) {
          if (i == rawDecode.length - 1 && !rawDecode[i]) {
            break;
          }
          var record = rawDecode[i].split("=");
          if (record.length > 1) {
            var key = record[0], value = record[1];
            cookie[key] = decoder(value, key);
          } else {
            cookie[record[0]] = "";
          }
        }
      }
      return cookie;
    };
    CookieSerializer2.prototype.saveCookie = function(cookieName, cookieValueMap, encoder) {
      var serialization = "";
      for (var key in cookieValueMap) {
        serialization += key + "=" + encoder(cookieValueMap[key], key) + ";";
      }
      var d = new Date(new Date().valueOf() + 1e3 * 60 * 60 * 24 * 30).toUTCString();
      var cookieConfig = " path=/; expires=" + d;
      document.cookie = "".concat(cookieName, "=").concat(encodeURIComponent(serialization), "; ").concat(cookieConfig);
    };
    return CookieSerializer2;
  }();
  var cookieSerializer_default = CookieSerializer;

  // ../../../build/engine/dom-utils/obj/getAbsolute.js
  function getAbsoluteX(Pobj) {
    var Lobj;
    if (!Pobj) {
      return 0;
    }
    var Lcurleft = Pobj.offsetLeft ? Pobj.offsetLeft : 0;
    Lobj = Pobj;
    if (Lobj.offsetParent) {
      while (Lobj.offsetParent) {
        Lobj = Lobj.offsetParent;
        Lcurleft += Lobj.offsetLeft;
      }
      var Ldoc_1 = Lobj.ownerDocument;
      if (Lobj.style.position == "fixed" && Ldoc_1 && Ldoc_1.scrollingElement) {
        Lcurleft += Ldoc_1.scrollingElement.scrollLeft;
      }
    }
    if (Lobj && Lobj.ownerDocument && Pobj.ownerDocument != window.document) {
      var Ldoc = Lobj.ownerDocument;
      if (Ldoc && Ldoc.defaultView && Ldoc.defaultView.frameElement) {
        return Lcurleft + getAbsoluteX(Ldoc.defaultView.frameElement) - Ldoc.documentElement.scrollLeft;
      }
    }
    return Lcurleft;
  }
  function getAbsoluteY(Pobj) {
    var Lobj;
    if (!Pobj) {
      return 0;
    }
    var Lcurtop = Pobj.offsetTop ? Pobj.offsetTop : 0;
    Lobj = Pobj;
    if (Lobj.ownerDocument && Lobj instanceof Lobj.ownerDocument.defaultView.HTMLElement) {
      while (Lobj.offsetParent) {
        Lobj = Lobj.offsetParent;
        Lcurtop += Lobj.offsetTop;
      }
      var Ldoc_2 = Lobj.ownerDocument;
      if (Lobj.style.position == "fixed" && Ldoc_2 && Ldoc_2.scrollingElement) {
        Lcurtop += Ldoc_2.scrollingElement.scrollTop;
      }
    }
    if (Lobj && Lobj.ownerDocument && Pobj.ownerDocument != window.document) {
      var Ldoc = Lobj.ownerDocument;
      if (Ldoc && Ldoc.defaultView && Ldoc.defaultView.frameElement) {
        return Lcurtop + getAbsoluteY(Ldoc.defaultView.frameElement);
      }
    }
    return Lcurtop;
  }

  // ../../../build/engine/main/obj/variableStoreCookieSerializer.js
  var VarStoreSerializer = /* @__PURE__ */ function(_super) {
    (0, build_exports.__extends)(VarStoreSerializer2, _super);
    function VarStoreSerializer2(keyboardID, storeName) {
      return _super.call(this, "KeymanWeb_".concat(keyboardID, "_Option_").concat(storeName)) || this;
    }
    VarStoreSerializer2.prototype.load = function() {
      return _super.prototype.load.call(this, decodeURIComponent);
    };
    VarStoreSerializer2.prototype.save = function(storeMap) {
      _super.prototype.save.call(this, storeMap, encodeURIComponent);
    };
    return VarStoreSerializer2;
  }(cookieSerializer_default);
  var VariableStoreCookieSerializer = function() {
    function VariableStoreCookieSerializer2() {
    }
    VariableStoreCookieSerializer2.prototype.loadStore = function(keyboardID, storeName) {
      var storeCookieSerializer = new VarStoreSerializer(keyboardID, storeName);
      return storeCookieSerializer.load();
    };
    VariableStoreCookieSerializer2.prototype.saveStore = function(keyboardID, storeName, storeMap) {
      var storeCookieSerializer = new VarStoreSerializer(keyboardID, storeName);
      storeCookieSerializer.save(storeMap);
    };
    return VariableStoreCookieSerializer2;
  }();

  // ../../../build/engine/main/obj/keyboardInterface.js
  var KeyboardInterface2 = /* @__PURE__ */ function(_super) {
    (0, build_exports.__extends)(KeyboardInterface4, _super);
    function KeyboardInterface4(_jsGlobal, engine, stubNamespacer) {
      var _this = _super.call(this, _jsGlobal, engine, new VariableStoreCookieSerializer()) || this;
      _this.insertText = function(Ptext, PdeadKey) {
        _this.resetContextCache();
        _this.engine.contextManager.insertText(_this, Ptext, PdeadKey);
      };
      _this.KT = _this.insertText;
      _this.engine = engine;
      _this.stubNamespacer = stubNamespacer;
      return _this;
    }
    KeyboardInterface4.prototype.preserveID = function(Pk) {
      var trueID;
      if (document.currentScript) {
        trueID = document.currentScript.id;
      } else {
        var scripts2 = document.getElementsByTagName("script");
        var currentScript = scripts2[scripts2.length - 1];
        trueID = currentScript.id;
      }
      if (!trueID) {
        return;
      } else if (trueID.indexOf(withoutPrefix(Pk["KI"])) != -1) {
        Pk["KI"] = trueID;
      } else {
        console.error("Error when registering keyboard:  current SCRIPT tag's ID does not match!");
      }
    };
    KeyboardInterface4.prototype.registerKeyboard = function(Pk) {
      var _this = this;
      _super.prototype.registerKeyboard.call(this, Pk);
      var registeredKeyboard = this.loadedKeyboard;
      this.preserveID(Pk);
      this.engine.config.deferForInitialization.then(function() {
        if (!_this.engine.keyboardRequisitioner.cache.isFetchingKeyboard(registeredKeyboard.id)) {
          _this.engine.keyboardRequisitioner.cache.addKeyboard(registeredKeyboard);
          _this.loadedKeyboard = null;
        }
      });
    };
    KeyboardInterface4.prototype.registerStub = function(Pstub) {
      var _this = this;
      var _a;
      if (this.stubNamespacer) {
        this.stubNamespacer(Pstub);
      }
      var pathConfig = this.engine.config.paths;
      var stub = new keyboardStub_default(Pstub, pathConfig.keyboards, pathConfig.fonts);
      if ((_a = this.engine.keyboardRequisitioner) === null || _a === void 0 ? void 0 : _a.cache.findMatchingStub(stub)) {
        return 1;
      }
      if (!this.engine.config.deferForInitialization.hasFinalized) {
        this.engine.config.deferForInitialization.then(function() {
          return _this.engine.keyboardRequisitioner.cache.addStub(stub);
        });
      } else {
        this.engine.keyboardRequisitioner.cache.addStub(stub);
      }
      return null;
    };
    return KeyboardInterface4;
  }(kbdInterface_default);
  var keyboardInterface_default = KeyboardInterface2;
  (function() {
    KeyboardInterface2.__publishShorthandAPI();
  })();

  // ../../../../common/web/keyboard-processor/build/obj/keyboards/loaders/domKeyboardLoader.js
  var DOMKeyboardLoader = /* @__PURE__ */ function(_super) {
    (0, build_exports.__extends)(DOMKeyboardLoader2, _super);
    function DOMKeyboardLoader2(harness, cacheBust) {
      var _this = this;
      if (harness && harness._jsGlobal != window) {
        harness._jsGlobal["String"] = window["String"];
      }
      if (!harness) {
        _this = _super.call(this, new KeyboardHarness(window, MinimalKeymanGlobal)) || this;
      } else {
        _this = _super.call(this, harness) || this;
      }
      _this.performCacheBusting = cacheBust || false;
      return _this;
    }
    DOMKeyboardLoader2.prototype.loadKeyboardInternal = function(uri, errorBuilder, id) {
      var _this = this;
      var promise = new managedPromise_default();
      if (this.performCacheBusting) {
        uri = this.cacheBust(uri);
      }
      try {
        var document_1 = this.harness._jsGlobal.document;
        var script_1 = document_1.createElement("script");
        if (id) {
          script_1.id = id;
        }
        document_1.head.appendChild(script_1);
        script_1.onerror = function(err) {
          promise.reject(errorBuilder.missingError(err));
        };
        script_1.onload = function() {
          if (_this.harness.loadedKeyboard) {
            var keyboard = _this.harness.loadedKeyboard;
            _this.harness.loadedKeyboard = null;
            promise.resolve(keyboard);
          } else {
            promise.reject(errorBuilder.scriptError());
          }
        };
        promise.then(function() {
          script_1.remove();
        }).catch(function() {
          script_1.remove();
        });
        script_1.src = uri;
      } catch (err) {
        return Promise.reject(err);
      }
      return promise.corePromise;
    };
    DOMKeyboardLoader2.prototype.cacheBust = function(uri) {
      return uri + "?v=" + new Date().getTime();
    };
    return DOMKeyboardLoader2;
  }(keyboardLoaderBase_default);

  // ../../../../common/web/input-processor/build/obj/text/contextWindow.js
  var ContextWindow = /* @__PURE__ */ function() {
    function ContextWindow2(mock, config, layerId) {
      this.left = mock.getTextBeforeCaret();
      this.startOfBuffer = this.left._kmwLength() <= config.leftContextCodePoints;
      if (!this.startOfBuffer) {
        this.left = this.left._kmwSubstr(-config.leftContextCodePoints);
      }
      this.right = mock.getTextAfterCaret();
      this.endOfBuffer = this.right._kmwLength() <= config.rightContextCodePoints;
      if (!this.endOfBuffer) {
        this.right = this.right._kmwSubstr(0, config.rightContextCodePoints);
      }
      this.casingForm = layerId == "shift" ? "initial" : layerId == "caps" ? "upper" : null;
    }
    ContextWindow2.prototype.toMock = function() {
      var caretPos = this.left._kmwLength();
      return new Mock(this.left + (this.right || ""), caretPos);
    };
    ContextWindow2.ENGINE_RULE_WINDOW = {
      leftContextCodePoints: 64,
      rightContextCodePoints: 32
    };
    return ContextWindow2;
  }();
  var contextWindow_default = ContextWindow;

  // ../../../../common/web/input-processor/build/obj/text/prediction/languageProcessor.js
  var import_eventemitter37 = __toESM(require_eventemitter3(), 1);

  // ../../../../common/predictive-text/build/obj/promise-store.js
  var PromiseStore = /* @__PURE__ */ function() {
    function PromiseStore2() {
      this._promises = /* @__PURE__ */ new Map();
    }
    Object.defineProperty(PromiseStore2.prototype, "length", {
      get: function() {
        return this._promises.size;
      },
      enumerable: false,
      configurable: true
    });
    PromiseStore2.prototype.make = function(token, resolve, reject) {
      if (this._promises.has(token)) {
        return reject("Existing request with token ".concat(token));
      }
      this._promises.set(token, { reject: reject, resolve: resolve });
    };
    PromiseStore2.prototype.keep = function(token, value) {
      var callbacks = this._promises.get(token);
      if (!callbacks) {
        throw new Error("No promise associated with token: ".concat(token));
      }
      var accept = callbacks.resolve;
      this._promises.delete(token);
      return accept(value);
    };
    PromiseStore2.prototype.break = function(token, reason) {
      var callbacks = this._promises.get(token);
      if (!callbacks) {
        throw new Error("No promise associated with token: ".concat(token));
      }
      this._promises.delete(token);
      callbacks.reject(reason);
    };
    return PromiseStore2;
  }();
  var promise_store_default = PromiseStore;

  // ../../../../common/predictive-text/build/obj/lmlayer.js
  var LMLayer = /* @__PURE__ */ function() {
    function LMLayer2(capabilities, worker, testMode) {
      this._worker = worker;
      this._worker.onmessage = this.onMessage.bind(this);
      this._declareLMLayerReady = null;
      this._predictPromises = new promise_store_default();
      this._wordbreakPromises = new promise_store_default();
      this._acceptPromises = new promise_store_default();
      this._revertPromises = new promise_store_default();
      this._nextToken = Number.MIN_SAFE_INTEGER;
      this.sendConfig(capabilities, !!testMode);
    }
    LMLayer2.prototype.sendConfig = function(capabilities, testMode) {
      this._worker.postMessage({
        message: "config",
        capabilities: capabilities,
        testMode: testMode
      });
    };
    LMLayer2.prototype.loadModel = function(modelSource, loadType) {
      var _this = this;
      if (loadType === void 0) {
        loadType = "file";
      }
      return new Promise(function(resolve, _reject) {
        _this._declareLMLayerReady = resolve;
        var modelSourceSpec = {
          type: loadType
        };
        if (loadType == "file") {
          modelSourceSpec.file = modelSource;
        } else {
          modelSourceSpec.code = modelSource;
        }
        _this._worker.postMessage({
          message: "load",
          source: modelSourceSpec
        });
      });
    };
    LMLayer2.prototype.unloadModel = function() {
      this._worker.postMessage({
        message: "unload"
      });
    };
    LMLayer2.prototype.predict = function(transform, context) {
      var _this = this;
      var token = this._nextToken++;
      return new Promise(function(resolve, reject) {
        _this._predictPromises.make(token, resolve, reject);
        _this._worker.postMessage({
          message: "predict",
          token: token,
          transform: transform,
          context: context
        });
      });
    };
    LMLayer2.prototype.wordbreak = function(context) {
      var _this = this;
      var token = this._nextToken++;
      return new Promise(function(resolve, reject) {
        _this._wordbreakPromises.make(token, resolve, reject);
        _this._worker.postMessage({
          message: "wordbreak",
          token: token,
          context: context
        });
      });
    };
    LMLayer2.prototype.acceptSuggestion = function(suggestion, context, postTransform) {
      var _this = this;
      var token = this._nextToken++;
      return new Promise(function(resolve, reject) {
        _this._acceptPromises.make(token, resolve, reject);
        _this._worker.postMessage({
          message: "accept",
          token: token,
          suggestion: suggestion,
          context: context,
          postTransform: postTransform
        });
      });
    };
    LMLayer2.prototype.revertSuggestion = function(reversion, context) {
      var _this = this;
      var token = this._nextToken++;
      return new Promise(function(resolve, reject) {
        _this._revertPromises.make(token, resolve, reject);
        _this._worker.postMessage({
          message: "revert",
          token: token,
          reversion: reversion,
          context: context
        });
      });
    };
    LMLayer2.prototype.resetContext = function(context) {
      this._worker.postMessage({
        message: "reset-context",
        context: context
      });
    };
    LMLayer2.prototype.onMessage = function(event) {
      var payload = event.data;
      if (payload.message === "error") {
        console.error(payload.log);
        if (payload.error) {
          console.error(payload.error);
        }
      } else if (payload.message === "ready") {
        this._declareLMLayerReady(event.data.configuration);
      } else if (payload.message === "suggestions") {
        this._predictPromises.keep(payload.token, payload.suggestions);
      } else if (payload.message === "currentword") {
        this._wordbreakPromises.keep(payload.token, payload.word);
      } else if (payload.message === "postaccept") {
        this._acceptPromises.keep(payload.token, payload.reversion);
      } else if (payload.message === "postrevert") {
        this._revertPromises.keep(payload.token, payload.suggestions);
      } else {
        throw new Error("Message not implemented: ".concat(payload.message));
      }
    };
    LMLayer2.prototype.shutdown = function() {
      this._worker.terminate();
    };
    return LMLayer2;
  }();
  var lmlayer_default = LMLayer;

  // ../../../../common/predictive-text/build/obj/unwrap.js
  function unwrap(encodedSrc) {
    return encodedSrc;
  }

  // ../../../../common/web/lm-worker/build/lib/worker-main.wrapped.js
  var LMLayerWorkerCode2 = '/*! https://mths.be/codepointat v0.2.0 by @mathias */\nif (!String.prototype.codePointAt) {\n	(function() {\n		\'use strict\'; // needed to support `apply`/`call` with `undefined`/`null`\n		var defineProperty = (function() {\n			// IE 8 only supports `Object.defineProperty` on DOM elements\n			try {\n				var object = {};\n				var $defineProperty = Object.defineProperty;\n				var result = $defineProperty(object, object, object) && $defineProperty;\n			} catch(error) {}\n			return result;\n		}());\n		var codePointAt = function(position) {\n			if (this == null) {\n				throw TypeError();\n			}\n			var string = String(this);\n			var size = string.length;\n			// `ToInteger`\n			var index = position ? Number(position) : 0;\n			if (index != index) { // better `isNaN`\n				index = 0;\n			}\n			// Account for out-of-bounds indices:\n			if (index < 0 || index >= size) {\n				return undefined;\n			}\n			// Get the first code unit\n			var first = string.charCodeAt(index);\n			var second;\n			if ( // check if it\u2019s the start of a surrogate pair\n				first >= 0xD800 && first <= 0xDBFF && // high surrogate\n				size > index + 1 // there is a next code unit\n			) {\n				second = string.charCodeAt(index + 1);\n				if (second >= 0xDC00 && second <= 0xDFFF) { // low surrogate\n					// https://mathiasbynens.be/notes/javascript-encoding#surrogate-formulae\n					return (first - 0xD800) * 0x400 + second - 0xDC00 + 0x10000;\n				}\n			}\n			return first;\n		};\n		if (defineProperty) {\n			defineProperty(String.prototype, \'codePointAt\', {\n				\'value\': codePointAt,\n				\'configurable\': true,\n				\'writable\': true\n			});\n		} else {\n			String.prototype.codePointAt = codePointAt;\n		}\n	}());\n}\n\n\n  // From https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/fill\r\nif (!Array.prototype.fill) {\r\n  Object.defineProperty(Array.prototype, \'fill\', {\r\n    value: function(value) {\r\n\r\n      // Steps 1-2.\r\n      if (this == null) {\r\n        throw new TypeError(\'this is null or not defined\');\r\n      }\r\n\r\n      var O = Object(this);\r\n\r\n      // Steps 3-5.\r\n      var len = O.length >>> 0;\r\n\r\n      // Steps 6-7.\r\n      var start = arguments[1];\r\n      var relativeStart = start >> 0;\r\n\r\n      // Step 8.\r\n      var k = relativeStart < 0 ?\r\n        Math.max(len + relativeStart, 0) :\r\n        Math.min(relativeStart, len);\r\n\r\n      // Steps 9-10.\r\n      var end = arguments[2];\r\n      var relativeEnd = end === undefined ?\r\n        len : end >> 0;\r\n\r\n      // Step 11.\r\n      var finalValue = relativeEnd < 0 ?\r\n        Math.max(len + relativeEnd, 0) :\r\n        Math.min(relativeEnd, len);\r\n\r\n      // Step 12.\r\n      while (k < finalValue) {\r\n        O[k] = value;\r\n        k++;\r\n      }\r\n\r\n      // Step 13.\r\n      return O;\r\n    }\r\n  });\r\n}\n\n  /**\r\n * Array.prototype.findIndex() polyfill\r\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/findIndex\r\n * @license MIT\r\n */\r\n if (!Array.prototype.findIndex) {\r\n  Object.defineProperty(Array.prototype, \'findIndex\', {\r\n    value: function(predicate) {\r\n\r\n      if (this == null) {\r\n        throw new TypeError(\'"this" is null or not defined\');\r\n      }\r\n\r\n      // 1. Let O be ? ToObject(this value).\r\n      var o = Object(this);\r\n\r\n      // 2. Let len be ? ToLength(? Get(O, "length")).\r\n      var len = o.length >>> 0;\r\n\r\n      // 3. If IsCallable(predicate) is false, throw a TypeError exception.\r\n      if (typeof predicate !== \'function\') {\r\n        throw new TypeError(\'predicate must be a function\');\r\n      }\r\n\r\n      // 4. If thisArg was supplied, let T be thisArg; else let T be undefined.\r\n      var thisArg = arguments[1];\r\n\r\n      // 5. Let k be 0.\r\n      var k = 0;\r\n\r\n      // 6. Repeat, while k < len\r\n      while (k < len) {\r\n        // a. Let Pk be ! ToString(k).\r\n        // b. Let kValue be ? Get(O, Pk).\r\n        // c. Let testResult be ToBoolean(? Call(predicate, T, \xAB kValue, k, O \xBB)).\r\n        // d. If testResult is true, return k.\r\n        var kValue = o[k];\r\n        if (predicate.call(thisArg, kValue, k, o)) {\r\n          return k;\r\n        }\r\n        // e. Increase k by 1.\r\n        k++;\r\n      }\r\n\r\n      // 7. Return -1.\r\n      return -1;\r\n    },\r\n    configurable: true,\r\n    writable: true\r\n  });\r\n}\r\n\n\n  // From https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/from\r\n// Any npm-based ones require use of `require`, which won\'t work for us.\r\n\r\n// Production steps of ECMA-262, Edition 6, 22.1.2.1\r\nif (!Array.from) {\r\n  Array.from = (function () {\r\n    var toStr = Object.prototype.toString;\r\n    var isCallable = function (fn) {\r\n      return typeof fn === \'function\' || toStr.call(fn) === \'[object Function]\';\r\n    };\r\n    var toInteger = function (value) {\r\n      var number = Number(value);\r\n      if (isNaN(number)) { return 0; }\r\n      if (number === 0 || !isFinite(number)) { return number; }\r\n      return (number > 0 ? 1 : -1) * Math.floor(Math.abs(number));\r\n    };\r\n    var maxSafeInteger = Math.pow(2, 53) - 1;\r\n    var toLength = function (value) {\r\n      var len = toInteger(value);\r\n      return Math.min(Math.max(len, 0), maxSafeInteger);\r\n    };\r\n\r\n    // The length property of the from method is 1.\r\n    return function from(arrayLike/*, mapFn, thisArg */) {\r\n      // 1. Let C be the this value.\r\n      var C = this;\r\n\r\n      // 2. Let items be ToObject(arrayLike).\r\n      var items = Object(arrayLike);\r\n\r\n      // 3. ReturnIfAbrupt(items).\r\n      if (arrayLike == null) {\r\n        throw new TypeError(\'Array.from requires an array-like object - not null or undefined\');\r\n      }\r\n\r\n      // 4. If mapfn is undefined, then let mapping be false.\r\n      var mapFn = arguments.length > 1 ? arguments[1] : void undefined;\r\n      var T;\r\n      if (typeof mapFn !== \'undefined\') {\r\n        // 5. else\r\n        // 5. a If IsCallable(mapfn) is false, throw a TypeError exception.\r\n        if (!isCallable(mapFn)) {\r\n          throw new TypeError(\'Array.from: when provided, the second argument must be a function\');\r\n        }\r\n\r\n        // 5. b. If thisArg was supplied, let T be thisArg; else let T be undefined.\r\n        if (arguments.length > 2) {\r\n          T = arguments[2];\r\n        }\r\n      }\r\n\r\n      // 10. Let lenValue be Get(items, "length").\r\n      // 11. Let len be ToLength(lenValue).\r\n      var len = toLength(items.length);\r\n\r\n      // 13. If IsConstructor(C) is true, then\r\n      // 13. a. Let A be the result of calling the [[Construct]] internal method \r\n      // of C with an argument list containing the single item len.\r\n      // 14. a. Else, Let A be ArrayCreate(len).\r\n      var A = isCallable(C) ? Object(new C(len)) : new Array(len);\r\n\r\n      // 16. Let k be 0.\r\n      var k = 0;\r\n      // 17. Repeat, while k < len\u2026 (also steps a - h)\r\n      var kValue;\r\n      while (k < len) {\r\n        kValue = items[k];\r\n        if (mapFn) {\r\n          A[k] = typeof T === \'undefined\' ? mapFn(kValue, k) : mapFn.call(T, kValue, k);\r\n        } else {\r\n          A[k] = kValue;\r\n        }\r\n        k += 1;\r\n      }\r\n      // 18. Let putStatus be Put(A, "length", len, true).\r\n      A.length = len;\r\n      // 20. Return A.\r\n      return A;\r\n    };\r\n  }());\r\n}\r\n\n\n  // https://stackoverflow.com/questions/53308396/how-to-polyfill-array-prototype-includes-for-ie8\r\nif(!Array.prototype.includes){\r\n  //or use Object.defineProperty\r\n  Array.prototype.includes = function(search){\r\n   return !!~this.indexOf(search);\r\n }\r\n}\r\n\n\n  // From https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/keys\r\nif (!Object.keys) {\r\n  Object.keys = (function() {\r\n    \'use strict\';\r\n    var hasOwnProperty = Object.prototype.hasOwnProperty,\r\n        hasDontEnumBug = !({ toString: null }).propertyIsEnumerable(\'toString\'),\r\n        dontEnums = [\r\n          \'toString\',\r\n          \'toLocaleString\',\r\n          \'valueOf\',\r\n          \'hasOwnProperty\',\r\n          \'isPrototypeOf\',\r\n          \'propertyIsEnumerable\',\r\n          \'constructor\'\r\n        ],\r\n        dontEnumsLength = dontEnums.length;\r\n\r\n    return function(obj) {\r\n      if (typeof obj !== \'function\' && (typeof obj !== \'object\' || obj === null)) {\r\n        throw new TypeError(\'Object.keys called on non-object\');\r\n      }\r\n\r\n      var result = [], prop, i;\r\n\r\n      for (prop in obj) {\r\n        if (hasOwnProperty.call(obj, prop)) {\r\n          result.push(prop);\r\n        }\r\n      }\r\n\r\n      if (hasDontEnumBug) {\r\n        for (i = 0; i < dontEnumsLength; i++) {\r\n          if (hasOwnProperty.call(obj, dontEnums[i])) {\r\n            result.push(dontEnums[i]);\r\n          }\r\n        }\r\n      }\r\n      return result;\r\n    };\r\n  }());\r\n}\r\n\r\n// Now for Object.values, from https://github.com/tc39/proposal-object-values-entries/blob/master/polyfill.js\r\n// Early Android APIs do not support Reflect, hence the need to \'mesh\' them like this.\r\n\r\nvar reduce = Function.bind.call(Function.call, Array.prototype.reduce);\r\nvar isEnumerable = Function.bind.call(Function.call, Object.prototype.propertyIsEnumerable);\r\nvar concat = Function.bind.call(Function.call, Array.prototype.concat);\r\n//var keys = Reflect.ownKeys;\r\nvar keys = Object.keys;\r\n\r\nif (!Object.values) {\r\n	Object.values = function values(O) {\r\n		return reduce(keys(O), function(v, k) { return concat(v, typeof k === \'string\' && isEnumerable(O, k) ? [O[k]] : []) }, []);\r\n	};\r\n}\r\n\r\nif (!Object.entries) {\r\n	Object.entries = function entries(O) {\r\n		return reduce(keys(O), function(e, k) { return concat(e, typeof k === \'string\' && isEnumerable(O, k) ? [[k, O[k]]] : []) }, []);\r\n	};\r\n}\n\n  // From https://rousan.io/symbol-es6/, lightly modified to be worker-compatible for Android Lollipop.\r\n!function(global,factory){"use strict";"object"==typeof module&&"object"==typeof module.exports?module.exports=factory(global):factory(global)}("undefined"!=typeof window?window:(self?self:global),function(global){"use strict";var defineProperty=Object.defineProperty,defineProperties=Object.defineProperties,symbolHiddenCounter=0,globalSymbolRegistry=[],slice=Array.prototype.slice,ES6="object"==typeof global.ES6?global.ES6:global.ES6={},isArray=Array.isArray,objectToString=Object.prototype.toString,push=Array.prototype.push,emptyFunction=function(){},simpleFunction=function(arg){return arg},isCallable=function(fn){return"function"==typeof fn},Iterator=function(){},ArrayIterator=function(array,flag){this._array=array,this._flag=flag,this._nextIndex=0},StringIterator=function(string,flag){this._string=string,this._flag=flag,this._nextIndex=0},isObject=function(value){return null!==value&&("object"==typeof value||"function"==typeof value)},setupSymbolInternals=function(symbol,desc){return defineProperties(symbol,{_description:{value:desc},_isSymbol:{value:!0},_id:{value:symbolHiddenCounter++}}),symbol},appendArray=function(array1,array2){if("number"==typeof array1.length&&array1.length>=0&&"number"==typeof array2.length&&array2.length>=0){var length1=Math.floor(array1.length),length2=Math.floor(array2.length),i=0;for(array1.length=length1+length2;i<length2;++i)array2.hasOwnProperty(i)&&(array1[length1+i]=array2[i])}},simpleInheritance=function(child,parent){if("function"!=typeof child||"function"!=typeof parent)throw new TypeError("Child and Parent must be function type");child.prototype=Object.create(parent.prototype),child.prototype.constructor=child},Symbol=function Symbol(desc){if(desc=void 0===desc?"":String(desc),this instanceof Symbol)throw new TypeError("Symbol is not a constructor");return setupSymbolInternals(Object.create(Symbol.prototype),desc)};defineProperties(Symbol,{for:{value:function(key){key=String(key);for(var record,registryLength=globalSymbolRegistry.length,i=0;i<registryLength;++i)if((record=globalSymbolRegistry[i]).key===key)return record.symbol;return record={key:key,symbol:Symbol(key)},globalSymbolRegistry.push(record),record.symbol},writable:!0,configurable:!0},keyFor:{value:function(symbol){if(!ES6.isSymbol(symbol))throw new TypeError(String(symbol)+" is not a symbol");for(var record,registryLength=globalSymbolRegistry.length,i=0;i<registryLength;++i)if((record=globalSymbolRegistry[i]).symbol===symbol)return record.key},writable:!0,configurable:!0},hasInstance:{value:Symbol("Symbol.hasInstance")},isConcatSpreadable:{value:Symbol("Symbol.isConcatSpreadable")},iterator:{value:Symbol("Symbol.iterator")},toStringTag:{value:Symbol("Symbol.toStringTag")}}),Symbol.prototype.toString=function(){return"@@_____"+this._id+"_____"},Symbol.prototype.valueOf=function(){return this},defineProperty(Iterator.prototype,Symbol.iterator.toString(),{value:function(){return this},writable:!0,configurable:!0}),simpleInheritance(ArrayIterator,Iterator),simpleInheritance(StringIterator,Iterator),defineProperty(ArrayIterator.prototype,Symbol.toStringTag.toString(),{value:"Array Iterator",configurable:!0}),defineProperty(StringIterator.prototype,Symbol.toStringTag.toString(),{value:"String Iterator",configurable:!0}),ArrayIterator.prototype.next=function(){if(!(this instanceof ArrayIterator))throw new TypeError("Method Array Iterator.prototype.next called on incompatible receiver "+String(this));var nextValue;return-1===this._nextIndex?{done:!0,value:void 0}:"number"==typeof this._array.length&&this._array.length>=0&&this._nextIndex<Math.floor(this._array.length)?(1===this._flag?nextValue=[this._nextIndex,this._array[this._nextIndex]]:2===this._flag?nextValue=this._array[this._nextIndex]:3===this._flag&&(nextValue=this._nextIndex),this._nextIndex++,{done:!1,value:nextValue}):(this._nextIndex=-1,{done:!0,value:void 0})},StringIterator.prototype.next=function(){if(!(this instanceof StringIterator))throw new TypeError("Method String Iterator.prototype.next called on incompatible receiver "+String(this));var nextValue,stringObject=new String(this._string);return-1===this._nextIndex?{done:!0,value:void 0}:this._nextIndex<stringObject.length?(nextValue=stringObject[this._nextIndex],this._nextIndex++,{done:!1,value:nextValue}):(this._nextIndex=-1,{done:!0,value:void 0})};var SpreadOperatorImpl=function(target,thisArg){this._target=target,this._values=[],this._thisArg=thisArg};SpreadOperatorImpl.prototype.spread=function(){var self=this;return slice.call(arguments).forEach(function(iterable){ES6.forOf(iterable,function(value){self._values.push(value)})}),self},SpreadOperatorImpl.prototype.add=function(){var self=this;return slice.call(arguments).forEach(function(value){self._values.push(value)}),self},SpreadOperatorImpl.prototype.call=function(thisArg){if("function"!=typeof this._target)throw new TypeError("Target is not a function");return thisArg=arguments.length<=0?this._thisArg:thisArg,this._target.apply(thisArg,this._values)},SpreadOperatorImpl.prototype.new=function(){if("function"!=typeof this._target)throw new TypeError("Target is not a constructor");var temp,returnValue;return temp=Object.create(this._target.prototype),returnValue=this._target.apply(temp,this._values),isObject(returnValue)?returnValue:temp},SpreadOperatorImpl.prototype.array=function(){if(!isArray(this._target))throw new TypeError("Target is not a array");return push.apply(this._target,this._values),this._target};return defineProperties(ES6,{isSymbol:{value:function(symbol){return symbol instanceof Symbol&&function(symbol){return!0===symbol._isSymbol&&"number"==typeof symbol._id&&"string"==typeof symbol._description}(symbol)},writable:!0,configurable:!0},instanceOf:{value:function(object,constructor){if(!isObject(constructor))throw new TypeError("Right-hand side of \'instanceof\' is not an object");var hasInstanceSymbolProp=constructor[Symbol.hasInstance];if(void 0===hasInstanceSymbolProp)return object instanceof constructor;if("function"!=typeof hasInstanceSymbolProp)throw new TypeError(typeof hasInstanceSymbolProp+" is not a function");return hasInstanceSymbolProp.call(constructor,object)},writable:!0,configurable:!0},forOf:{value:function(iterable,callback,thisArg){if(callback="function"!=typeof callback?emptyFunction:callback,"function"!=typeof iterable[Symbol.iterator])throw new TypeError("Iterable[Symbol.iterator] is not a function");var iterationResult,iterator=iterable[Symbol.iterator]();if("function"!=typeof iterator.next)throw new TypeError(".iterator.next is not a function");for(;;){if(iterationResult=iterator.next(),!isObject(iterationResult))throw new TypeError("Iterator result "+iterationResult+" is not an object");if(iterationResult.done)break;callback.call(thisArg,iterationResult.value)}},writable:!0,configurable:!0},spreadOperator:{value:function(target,thisArg){if("function"!=typeof target&&!isArray(target))throw new TypeError("Spread operator only supports on array and function objects at this moment");return new SpreadOperatorImpl(target,thisArg)},writable:!0,configurable:!0}}),defineProperty(global,"Symbol",{value:Symbol,writable:!0,configurable:!0}),defineProperty(Function.prototype,Symbol.hasInstance.toString(),{value:function(instance){return"function"==typeof this&&instance instanceof this}}),defineProperty(Array.prototype,"concat",{value:function(){if(void 0===this||null===this)throw new TypeError("Array.prototype.concat called on null or undefined");var self=Object(this),targets=slice.call(arguments),outputs=[];return targets.unshift(self),targets.forEach(function(target){isObject(target)?void 0!==target[Symbol.isConcatSpreadable]?target[Symbol.isConcatSpreadable]?appendArray(outputs,target):outputs.push(target):isArray(target)?appendArray(outputs,target):outputs.push(target):outputs.push(target)}),outputs},writable:!0,configurable:!0}),defineProperty(Object.prototype,"toString",{value:function(){return void 0===this||null===this?objectToString.call(this):"string"==typeof this[Symbol.toStringTag]?"[object "+this[Symbol.toStringTag]+"]":objectToString.call(this)},writable:!0,configurable:!0}),defineProperty(Array.prototype,Symbol.iterator.toString(),{value:function(){if(void 0===this||null===this)throw new TypeError("Cannot convert undefined or null to object");var self=Object(this);return new ArrayIterator(self,2)},writable:!0,configurable:!0}),defineProperty(Array,"from",{value:function(arrayLike,mapFn,thisArg){var constructor,length,outputs,i=0;if(constructor=isCallable(this)?this:Array,void 0===arrayLike||null===arrayLike)throw new TypeError("Cannot convert undefined or null to object");if(arrayLike=Object(arrayLike),void 0===mapFn)mapFn=simpleFunction;else if(!isCallable(mapFn))throw new TypeError(mapFn+" is not a function");if(void 0===arrayLike[Symbol.iterator]){if(!("number"==typeof arrayLike.length&&arrayLike.length>=0))return(outputs=new constructor(0)).length=0,outputs;for(length=Math.floor(arrayLike.length),(outputs=new constructor(length)).length=length;i<length;++i)outputs[i]=mapFn.call(thisArg,arrayLike[i])}else(outputs=new constructor).length=0,ES6.forOf(arrayLike,function(value){outputs.length++,outputs[outputs.length-1]=mapFn.call(thisArg,value)});return outputs},writable:!0,configurable:!0}),defineProperty(Array.prototype,"entries",{value:function(){if(void 0===this||null===this)throw new TypeError("Cannot convert undefined or null to object");var self=Object(this);return new ArrayIterator(self,1)},writable:!0,configurable:!0}),defineProperty(Array.prototype,"keys",{value:function(){if(void 0===this||null===this)throw new TypeError("Cannot convert undefined or null to object");var self=Object(this);return new ArrayIterator(self,3)},writable:!0,configurable:!0}),defineProperty(String.prototype,Symbol.iterator.toString(),{value:function(){if(void 0===this||null===this)throw new TypeError("String.prototype[Symbol.iterator] called on null or undefined");return new StringIterator(String(this),0)},writable:!0,configurable:!0}),ES6});\n\n  var __create = Object.create;\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __getProtoOf = Object.getPrototypeOf;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __commonJS = function(cb, mod) {\n  return function __require() {\n    return mod || (0, cb[__getOwnPropNames(cb)[0]])((mod = { exports: {} }).exports, mod), mod.exports;\n  };\n};\nvar __export = function(target, all) {\n  for (var name in all)\n    __defProp(target, name, { get: all[name], enumerable: true });\n};\nvar __copyProps = function(to, from, except, desc) {\n  if (from && typeof from === "object" || typeof from === "function")\n    for (var keys = __getOwnPropNames(from), i = 0, n = keys.length, key; i < n; i++) {\n      key = keys[i];\n      if (!__hasOwnProp.call(to, key) && key !== except)\n        __defProp(to, key, { get: function(k) {\n          return from[k];\n        }.bind(null, key), enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });\n    }\n  return to;\n};\nvar __reExport = function(target, mod, secondTarget) {\n  return __copyProps(target, mod, "default"), secondTarget && __copyProps(secondTarget, mod, "default");\n};\nvar __toESM = function(mod, isNodeMode, target) {\n  return target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(\n    isNodeMode || !mod || !mod.__esModule ? __defProp(target, "default", { value: mod, enumerable: true }) : target,\n    mod\n  );\n};\n\n// ../../../node_modules/tslib/tslib.js\nvar require_tslib = __commonJS({\n  "../../../node_modules/tslib/tslib.js": function(exports, module) {\n    var __extends2;\n    var __assign3;\n    var __generator3;\n    var __values7;\n    var __read3;\n    (function(factory) {\n      var root = typeof global === "object" ? global : typeof self === "object" ? self : typeof this === "object" ? this : {};\n      if (typeof define === "function" && define.amd) {\n        define("tslib", ["exports"], function(exports2) {\n          factory(createExporter(root, createExporter(exports2)));\n        });\n      } else if (typeof module === "object" && typeof module.exports === "object") {\n        factory(createExporter(root, createExporter(module.exports)));\n      } else {\n        factory(createExporter(root));\n      }\n      function createExporter(exports2, previous) {\n        if (exports2 !== root) {\n          if (typeof Object.create === "function") {\n            Object.defineProperty(exports2, "__esModule", { value: true });\n          } else {\n            exports2.__esModule = true;\n          }\n        }\n        return function(id, v) {\n          return exports2[id] = previous ? previous(id, v) : v;\n        };\n      }\n    })(function(exporter) {\n      var extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d, b) {\n        d.__proto__ = b;\n      } || function(d, b) {\n        for (var p in b)\n          if (Object.prototype.hasOwnProperty.call(b, p))\n            d[p] = b[p];\n      };\n      __extends2 = function(d, b) {\n        if (typeof b !== "function" && b !== null)\n          throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");\n        extendStatics(d, b);\n        function __() {\n          this.constructor = d;\n        }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n      };\n      __assign3 = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n          s = arguments[i];\n          for (var p in s)\n            if (Object.prototype.hasOwnProperty.call(s, p))\n              t[p] = s[p];\n        }\n        return t;\n      };\n      __generator3 = function(thisArg, body) {\n        var _ = { label: 0, sent: function() {\n          if (t[0] & 1)\n            throw t[1];\n          return t[1];\n        }, trys: [], ops: [] }, f, y, t, g;\n        return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() {\n          return this;\n        }), g;\n        function verb(n) {\n          return function(v) {\n            return step([n, v]);\n          };\n        }\n        function step(op) {\n          if (f)\n            throw new TypeError("Generator is already executing.");\n          while (g && (g = 0, op[0] && (_ = 0)), _)\n            try {\n              if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done)\n                return t;\n              if (y = 0, t)\n                op = [op[0] & 2, t.value];\n              switch (op[0]) {\n                case 0:\n                case 1:\n                  t = op;\n                  break;\n                case 4:\n                  _.label++;\n                  return { value: op[1], done: false };\n                case 5:\n                  _.label++;\n                  y = op[1];\n                  op = [0];\n                  continue;\n                case 7:\n                  op = _.ops.pop();\n                  _.trys.pop();\n                  continue;\n                default:\n                  if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n                    _ = 0;\n                    continue;\n                  }\n                  if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n                    _.label = op[1];\n                    break;\n                  }\n                  if (op[0] === 6 && _.label < t[1]) {\n                    _.label = t[1];\n                    t = op;\n                    break;\n                  }\n                  if (t && _.label < t[2]) {\n                    _.label = t[2];\n                    _.ops.push(op);\n                    break;\n                  }\n                  if (t[2])\n                    _.ops.pop();\n                  _.trys.pop();\n                  continue;\n              }\n              op = body.call(thisArg, _);\n            } catch (e) {\n              op = [6, e];\n              y = 0;\n            } finally {\n              f = t = 0;\n            }\n          if (op[0] & 5)\n            throw op[1];\n          return { value: op[0] ? op[1] : void 0, done: true };\n        }\n      };\n      __values7 = function(o) {\n        var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;\n        if (m)\n          return m.call(o);\n        if (o && typeof o.length === "number")\n          return {\n            next: function() {\n              if (o && i >= o.length)\n                o = void 0;\n              return { value: o && o[i++], done: !o };\n            }\n          };\n        throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");\n      };\n      __read3 = function(o, n) {\n        var m = typeof Symbol === "function" && o[Symbol.iterator];\n        if (!m)\n          return o;\n        var i = m.call(o), r, ar = [], e;\n        try {\n          while ((n === void 0 || n-- > 0) && !(r = i.next()).done)\n            ar.push(r.value);\n        } catch (error) {\n          e = { error: error };\n        } finally {\n          try {\n            if (r && !r.done && (m = i["return"]))\n              m.call(i);\n          } finally {\n            if (e)\n              throw e.error;\n          }\n        }\n        return ar;\n      };\n      exporter("__extends", __extends2);\n      exporter("__assign", __assign3);\n      exporter("__generator", __generator3);\n      exporter("__values", __values7);\n      exporter("__read", __read3);\n    });\n  }\n});\n\n// ../tslib/build/index.js\nvar build_exports = {};\n__export(build_exports, {\n  tslib: function() {\n    return tslib_1;\n  }\n});\n__reExport(build_exports, __toESM(require_tslib(), 1));\nvar tslib_1 = __toESM(require_tslib(), 1);\n\n// ../utils/build/obj/deviceSpec.js\nvar DeviceSpec = /* @__PURE__ */ function() {\n  function DeviceSpec2(browser, formFactor, OS, touchable) {\n    switch (browser.toLowerCase()) {\n      case DeviceSpec2.Browser.Chrome:\n      case DeviceSpec2.Browser.Edge:\n      case DeviceSpec2.Browser.Firefox:\n      case DeviceSpec2.Browser.Native:\n      case DeviceSpec2.Browser.Opera:\n      case DeviceSpec2.Browser.Safari:\n        this.browser = browser.toLowerCase();\n        break;\n      default:\n        this.browser = DeviceSpec2.Browser.Other;\n    }\n    switch (formFactor.toLowerCase()) {\n      case DeviceSpec2.FormFactor.Desktop:\n      case DeviceSpec2.FormFactor.Phone:\n      case DeviceSpec2.FormFactor.Tablet:\n        this.formFactor = formFactor.toLowerCase();\n        break;\n      default:\n        throw "Invalid form factor specified for device: " + formFactor;\n    }\n    switch (OS.toLowerCase()) {\n      case DeviceSpec2.OperatingSystem.Windows.toLowerCase():\n      case DeviceSpec2.OperatingSystem.macOS.toLowerCase():\n      case DeviceSpec2.OperatingSystem.Linux.toLowerCase():\n      case DeviceSpec2.OperatingSystem.Android.toLowerCase():\n      case DeviceSpec2.OperatingSystem.iOS.toLowerCase():\n        this.OS = OS.toLowerCase();\n        break;\n      default:\n        this.OS = DeviceSpec2.OperatingSystem.Other;\n    }\n    this.touchable = touchable;\n  }\n  return DeviceSpec2;\n}();\n(function(DeviceSpec2) {\n  var Browser;\n  (function(Browser2) {\n    Browser2["Chrome"] = "chrome";\n    Browser2["Edge"] = "edge";\n    Browser2["Firefox"] = "firefox";\n    Browser2["Native"] = "native";\n    Browser2["Opera"] = "opera";\n    Browser2["Safari"] = "safari";\n    Browser2["Other"] = "other";\n  })(Browser = DeviceSpec2.Browser || (DeviceSpec2.Browser = {}));\n  var OperatingSystem;\n  (function(OperatingSystem2) {\n    OperatingSystem2["Windows"] = "windows";\n    OperatingSystem2["macOS"] = "macosx";\n    OperatingSystem2["Linux"] = "linux";\n    OperatingSystem2["Android"] = "android";\n    OperatingSystem2["iOS"] = "ios";\n    OperatingSystem2["Other"] = "other";\n  })(OperatingSystem = DeviceSpec2.OperatingSystem || (DeviceSpec2.OperatingSystem = {}));\n  var FormFactor;\n  (function(FormFactor2) {\n    FormFactor2["Desktop"] = "desktop";\n    FormFactor2["Phone"] = "phone";\n    FormFactor2["Tablet"] = "tablet";\n  })(FormFactor = DeviceSpec2.FormFactor || (DeviceSpec2.FormFactor = {}));\n})(DeviceSpec || (DeviceSpec = {}));\n\n// ../utils/build/obj/kmwstring.js\nfunction extendString() {\n  String.kmwFromCharCode = function(cp0) {\n    var chars = [], i;\n    for (i = 0; i < arguments.length; i++) {\n      var c = Number(arguments[i]);\n      if (!isFinite(c) || c < 0 || c > 1114111 || Math.floor(c) !== c) {\n        throw new RangeError("Invalid code point " + c);\n      }\n      if (c < 65536) {\n        chars.push(c);\n      } else {\n        c -= 65536;\n        chars.push((c >> 10) + 55296);\n        chars.push(c % 1024 + 56320);\n      }\n    }\n    return String.fromCharCode.apply(void 0, chars);\n  };\n  String.prototype.kmwCharCodeAt = function(codePointIndex) {\n    var str = String(this);\n    var codeUnitIndex = 0;\n    if (codePointIndex < 0 || codePointIndex >= str.length) {\n      return NaN;\n    }\n    for (var i = 0; i < codePointIndex; i++) {\n      codeUnitIndex = str.kmwNextChar(codeUnitIndex);\n      if (codeUnitIndex === null)\n        return NaN;\n    }\n    var first = str.charCodeAt(codeUnitIndex);\n    if (first >= 55296 && first <= 56319 && str.length > codeUnitIndex + 1) {\n      var second = str.charCodeAt(codeUnitIndex + 1);\n      if (second >= 56320 && second <= 57343) {\n        return (first - 55296 << 10) + (second - 56320) + 65536;\n      }\n    }\n    return first;\n  };\n  String.prototype.kmwIndexOf = function(searchValue, fromIndex) {\n    var str = String(this);\n    var codeUnitIndex = str.indexOf(searchValue, fromIndex);\n    if (codeUnitIndex < 0) {\n      return codeUnitIndex;\n    }\n    var codePointIndex = 0;\n    for (var i = 0; i !== null && i < codeUnitIndex; i = str.kmwNextChar(i))\n      codePointIndex++;\n    return codePointIndex;\n  };\n  String.prototype.kmwLastIndexOf = function(searchValue, fromIndex) {\n    var str = String(this);\n    var codeUnitIndex = str.lastIndexOf(searchValue, fromIndex);\n    if (codeUnitIndex < 0) {\n      return codeUnitIndex;\n    }\n    var codePointIndex = 0;\n    for (var i = 0; i !== null && i < codeUnitIndex; i = str.kmwNextChar(i))\n      codePointIndex++;\n    return codePointIndex;\n  };\n  String.prototype.kmwLength = function() {\n    var str = String(this);\n    if (str.length == 0)\n      return 0;\n    for (var i = 0, codeUnitIndex = 0; codeUnitIndex !== null; i++)\n      codeUnitIndex = str.kmwNextChar(codeUnitIndex);\n    return i;\n  };\n  String.prototype.kmwSlice = function(beginSlice, endSlice) {\n    var str = String(this);\n    var beginSliceCodeUnit = str.kmwCodePointToCodeUnit(beginSlice);\n    var endSliceCodeUnit = str.kmwCodePointToCodeUnit(endSlice);\n    if (beginSliceCodeUnit === null || endSliceCodeUnit === null)\n      return "";\n    else\n      return str.slice(beginSliceCodeUnit, endSliceCodeUnit);\n  };\n  String.prototype.kmwSubstr = function(start, length) {\n    var str = String(this);\n    if (start < 0) {\n      start = str.kmwLength() + start;\n    }\n    if (start < 0)\n      start = 0;\n    var startCodeUnit = str.kmwCodePointToCodeUnit(start);\n    var endCodeUnit = startCodeUnit;\n    if (startCodeUnit === null)\n      return "";\n    if (arguments.length < 2) {\n      endCodeUnit = str.length;\n    } else {\n      for (var i = 0; i < length; i++)\n        endCodeUnit = str.kmwNextChar(endCodeUnit);\n    }\n    if (endCodeUnit === null)\n      return str.substring(startCodeUnit);\n    else\n      return str.substring(startCodeUnit, endCodeUnit);\n  };\n  String.prototype.kmwSubstring = function(indexA, indexB) {\n    var str = String(this), indexACodeUnit, indexBCodeUnit;\n    if (typeof indexB == "undefined") {\n      indexACodeUnit = str.kmwCodePointToCodeUnit(indexA);\n      indexBCodeUnit = str.length;\n    } else {\n      if (indexA > indexB) {\n        var c = indexA;\n        indexA = indexB;\n        indexB = c;\n      }\n      indexACodeUnit = str.kmwCodePointToCodeUnit(indexA);\n      indexBCodeUnit = str.kmwCodePointToCodeUnit(indexB);\n    }\n    if (isNaN(indexACodeUnit) || indexACodeUnit === null)\n      indexACodeUnit = 0;\n    if (isNaN(indexBCodeUnit) || indexBCodeUnit === null)\n      indexBCodeUnit = str.length;\n    return str.substring(indexACodeUnit, indexBCodeUnit);\n  };\n  String.prototype.kmwNextChar = function(codeUnitIndex) {\n    var str = String(this);\n    if (codeUnitIndex === null || codeUnitIndex < 0 || codeUnitIndex >= str.length - 1) {\n      return null;\n    }\n    var first = str.charCodeAt(codeUnitIndex);\n    if (first >= 55296 && first <= 56319 && str.length > codeUnitIndex + 1) {\n      var second = str.charCodeAt(codeUnitIndex + 1);\n      if (second >= 56320 && second <= 57343) {\n        if (codeUnitIndex == str.length - 2) {\n          return null;\n        }\n        return codeUnitIndex + 2;\n      }\n    }\n    return codeUnitIndex + 1;\n  };\n  String.prototype.kmwPrevChar = function(codeUnitIndex) {\n    var str = String(this);\n    if (codeUnitIndex == null || codeUnitIndex <= 0 || codeUnitIndex > str.length) {\n      return null;\n    }\n    var second = str.charCodeAt(codeUnitIndex - 1);\n    if (second >= 56320 && second <= 57343 && codeUnitIndex > 1) {\n      var first = str.charCodeAt(codeUnitIndex - 2);\n      if (first >= 55296 && first <= 56319) {\n        return codeUnitIndex - 2;\n      }\n    }\n    return codeUnitIndex - 1;\n  };\n  String.prototype.kmwCodePointToCodeUnit = function(codePointIndex) {\n    if (codePointIndex === null)\n      return null;\n    var str = String(this);\n    var codeUnitIndex = 0;\n    if (codePointIndex < 0) {\n      codeUnitIndex = str.length;\n      for (var i = 0; i > codePointIndex; i--)\n        codeUnitIndex = str.kmwPrevChar(codeUnitIndex);\n      return codeUnitIndex;\n    }\n    if (codePointIndex == str.kmwLength())\n      return str.length;\n    for (var i = 0; i < codePointIndex; i++)\n      codeUnitIndex = str.kmwNextChar(codeUnitIndex);\n    return codeUnitIndex;\n  };\n  String.prototype.kmwCodeUnitToCodePoint = function(codeUnitIndex) {\n    var str = String(this);\n    if (codeUnitIndex === null)\n      return null;\n    else if (codeUnitIndex == 0)\n      return 0;\n    else if (codeUnitIndex < 0)\n      return str.substr(codeUnitIndex).kmwLength();\n    else\n      return str.substr(0, codeUnitIndex).kmwLength();\n  };\n  String.prototype.kmwCharAt = function(codePointIndex) {\n    var str = String(this);\n    if (codePointIndex >= 0)\n      return str.kmwSubstr(codePointIndex, 1);\n    else\n      return "";\n  };\n  String.prototype.kmwBMPNextChar = function(codeUnitIndex) {\n    var str = String(this);\n    if (codeUnitIndex < 0 || codeUnitIndex >= str.length - 1) {\n      return null;\n    }\n    return codeUnitIndex + 1;\n  };\n  String.prototype.kmwBMPPrevChar = function(codeUnitIndex) {\n    var str = String(this);\n    if (codeUnitIndex <= 0 || codeUnitIndex > str.length) {\n      return null;\n    }\n    return codeUnitIndex - 1;\n  };\n  String.prototype.kmwBMPCodePointToCodeUnit = function(codePointIndex) {\n    return codePointIndex;\n  };\n  String.prototype.kmwBMPCodeUnitToCodePoint = function(codeUnitIndex) {\n    return codeUnitIndex;\n  };\n  String.prototype.kmwBMPLength = function() {\n    var str = String(this);\n    return str.length;\n  };\n  String.prototype.kmwBMPSubstr = function(n, ln) {\n    var str = String(this);\n    if (n > -1)\n      return str.substr(n, ln);\n    else\n      return str.substr(str.length + n, -n);\n  };\n  String.kmwEnableSupplementaryPlane = function(bEnable) {\n    var p = String.prototype;\n    String._kmwFromCharCode = bEnable ? String.kmwFromCharCode : String.fromCharCode;\n    p._kmwCharAt = bEnable ? p.kmwCharAt : p.charAt;\n    p._kmwCharCodeAt = bEnable ? p.kmwCharCodeAt : p.charCodeAt;\n    p._kmwIndexOf = bEnable ? p.kmwIndexOf : p.indexOf;\n    p._kmwLastIndexOf = bEnable ? p.kmwLastIndexOf : p.lastIndexOf;\n    p._kmwSlice = bEnable ? p.kmwSlice : p.slice;\n    p._kmwSubstring = bEnable ? p.kmwSubstring : p.substring;\n    p._kmwSubstr = bEnable ? p.kmwSubstr : p.kmwBMPSubstr;\n    p._kmwLength = bEnable ? p.kmwLength : p.kmwBMPLength;\n    p._kmwNextChar = bEnable ? p.kmwNextChar : p.kmwBMPNextChar;\n    p._kmwPrevChar = bEnable ? p.kmwPrevChar : p.kmwBMPPrevChar;\n    p._kmwCodePointToCodeUnit = bEnable ? p.kmwCodePointToCodeUnit : p.kmwBMPCodePointToCodeUnit;\n    p._kmwCodeUnitToCodePoint = bEnable ? p.kmwCodeUnitToCodePoint : p.kmwBMPCodeUnitToCodePoint;\n  };\n  if (!String._kmwFromCharCode) {\n    String.kmwEnableSupplementaryPlane(false);\n  }\n}\nextendString();\n\n// build/obj/models/index.js\nvar models_exports = {};\n__export(models_exports, {\n  DummyModel: function() {\n    return dummy_model_default;\n  },\n  PriorityQueue: function() {\n    return priority_queue_default;\n  },\n  QuoteBehavior: function() {\n    return quote_behavior_default;\n  },\n  SENTINEL_CODE_UNIT: function() {\n    return SENTINEL_CODE_UNIT;\n  },\n  TrieModel: function() {\n    return trie_model_default;\n  },\n  applyTransform: function() {\n    return applyTransform;\n  },\n  buildMergedTransform: function() {\n    return buildMergedTransform;\n  },\n  defaultApplyCasing: function() {\n    return defaultApplyCasing;\n  },\n  getLastPreCaretToken: function() {\n    return getLastPreCaretToken;\n  },\n  isHighSurrogate: function() {\n    return isHighSurrogate;\n  },\n  isLowSurrogate: function() {\n    return isLowSurrogate;\n  },\n  isSentinel: function() {\n    return isSentinel;\n  },\n  tokenize: function() {\n    return tokenize;\n  },\n  transformToSuggestion: function() {\n    return transformToSuggestion;\n  },\n  wordbreak: function() {\n    return wordbreak;\n  }\n});\n\n// ../../models/templates/build/obj/common.js\nextendString();\nvar SENTINEL_CODE_UNIT = "\\uFDD0";\nfunction applyTransform(transform, context) {\n  var _a, _b;\n  var fullLeftContext = context.left || "";\n  var lLen = fullLeftContext.kmwLength();\n  var lDel = lLen < transform.deleteLeft ? lLen : transform.deleteLeft;\n  var leftContext = fullLeftContext.kmwSubstr(0, lLen - lDel) + (transform.insert || "");\n  var fullRightContext = context.right || "";\n  var rLen = fullRightContext.kmwLength();\n  var rDel = rLen < ((_a = transform.deleteRight) !== null && _a !== void 0 ? _a : 0) ? rLen : (_b = transform.deleteRight) !== null && _b !== void 0 ? _b : 0;\n  var rightContext = fullRightContext.kmwSubstr(rDel);\n  return {\n    left: leftContext,\n    right: rightContext,\n    startOfBuffer: context.startOfBuffer,\n    endOfBuffer: context.endOfBuffer,\n    casingForm: context.casingForm\n  };\n}\nfunction buildMergedTransform(first, second) {\n  var mergedFirstInsert = first.insert;\n  var mergedSecondDelete = second.deleteLeft;\n  if (second.deleteLeft) {\n    var firstLength = first.insert.kmwLength();\n    if (firstLength <= second.deleteLeft) {\n      mergedFirstInsert = "";\n      mergedSecondDelete = second.deleteLeft - firstLength;\n    } else {\n      mergedFirstInsert = first.insert.kmwSubstr(0, firstLength - second.deleteLeft);\n      mergedSecondDelete = 0;\n    }\n  }\n  return {\n    insert: mergedFirstInsert + second.insert,\n    deleteLeft: first.deleteLeft + mergedSecondDelete,\n    deleteRight: (first.deleteRight || 0) + (second.deleteRight || 0)\n  };\n}\nfunction isHighSurrogate(codeUnit) {\n  if (typeof codeUnit == "string") {\n    codeUnit = codeUnit.charCodeAt(0);\n  }\n  return codeUnit >= 55296 && codeUnit <= 56319;\n}\nfunction isLowSurrogate(codeUnit) {\n  if (typeof codeUnit == "string") {\n    codeUnit = codeUnit.charCodeAt(0);\n  }\n  return codeUnit >= 56320 && codeUnit <= 57343;\n}\nfunction isSentinel(char) {\n  return char == SENTINEL_CODE_UNIT;\n}\nfunction transformToSuggestion(transform, p) {\n  var suggestion = {\n    transform: transform,\n    transformId: transform.id,\n    displayAs: transform.insert\n  };\n  if (p === 0 || p) {\n    suggestion.p = p;\n  }\n  return suggestion;\n}\nfunction defaultApplyCasing(casing, text) {\n  switch (casing) {\n    case "lower":\n      return text.toLowerCase();\n    case "upper":\n      return text.toUpperCase();\n    case "initial":\n      var headUnitLength = 1;\n      if (text.length > 1 && isHighSurrogate(text.charAt(0))) {\n        if (isLowSurrogate(text.charCodeAt(1))) {\n          headUnitLength = 2;\n        }\n      }\n      return text.substring(0, headUnitLength).toUpperCase().concat(text.substring(headUnitLength));\n  }\n}\n\n// ../../models/templates/build/obj/priority-queue.js\nvar PriorityQueue = /* @__PURE__ */ function() {\n  function PriorityQueue2(comparator, initialEntries) {\n    if (initialEntries === void 0) {\n      initialEntries = [];\n    }\n    this.comparator = comparator;\n    this.heap = Array.from(initialEntries);\n    this.heapify();\n  }\n  PriorityQueue2.leftChildIndex = function(index) {\n    return index * 2 + 1;\n  };\n  PriorityQueue2.rightChildIndex = function(index) {\n    return index * 2 + 2;\n  };\n  PriorityQueue2.parentIndex = function(index) {\n    return Math.floor((index - 1) / 2);\n  };\n  PriorityQueue2.prototype.heapify = function(start, end) {\n    if (start == void 0 || end == void 0) {\n      this.heapify(0, this.count - 1);\n      return;\n    }\n    var queuedIndices = [];\n    var lastParent = -1;\n    for (var i = end; i >= start; i--) {\n      var parent = PriorityQueue2.parentIndex(i);\n      if (this.siftDown(i) && parent < start && lastParent != parent) {\n        queuedIndices.push(parent);\n        lastParent = parent;\n      }\n    }\n    lastParent = -1;\n    while (queuedIndices.length > 0) {\n      var index = queuedIndices.shift();\n      var parent = PriorityQueue2.parentIndex(index);\n      if (this.siftDown(index) && parent >= 0 && lastParent != parent) {\n        queuedIndices.push(parent);\n        lastParent = parent;\n      }\n    }\n  };\n  Object.defineProperty(PriorityQueue2.prototype, "count", {\n    get: function() {\n      return this.heap.length;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  PriorityQueue2.prototype.peek = function() {\n    return this.heap[0];\n  };\n  PriorityQueue2.prototype.enqueue = function(element) {\n    var index = this.heap.length;\n    this.heap.push(element);\n    var parent = PriorityQueue2.parentIndex;\n    var parentIndex = parent(index);\n    while (index !== 0 && this.comparator(this.heap[index], this.heap[parentIndex]) < 0) {\n      var a = this.heap[index];\n      this.heap[index] = this.heap[parentIndex];\n      this.heap[parentIndex] = a;\n      index = parentIndex;\n      parentIndex = parent(index);\n    }\n  };\n  PriorityQueue2.prototype.enqueueAll = function(elements) {\n    if (elements.length == 0) {\n      return;\n    }\n    var firstIndex = this.count;\n    this.heap = this.heap.concat(elements);\n    var firstParent = PriorityQueue2.parentIndex(firstIndex);\n    this.heapify(firstParent >= 0 ? firstParent : 0, PriorityQueue2.parentIndex(this.count - 1));\n  };\n  PriorityQueue2.prototype.dequeue = function() {\n    if (this.count == 0) {\n      return void 0;\n    }\n    var root = this.heap[0];\n    var tail = this.heap.pop();\n    if (this.heap.length > 0) {\n      this.heap[0] = tail;\n      this.siftDown(0);\n    }\n    return root;\n  };\n  PriorityQueue2.prototype.siftDown = function(index) {\n    var leftIndex = PriorityQueue2.leftChildIndex(index);\n    var rightIndex = PriorityQueue2.rightChildIndex(index);\n    var topMostIndex = index;\n    if (leftIndex < this.heap.length && this.comparator(this.heap[leftIndex], this.heap[topMostIndex]) < 0) {\n      topMostIndex = leftIndex;\n    }\n    if (rightIndex < this.heap.length && this.comparator(this.heap[rightIndex], this.heap[topMostIndex]) < 0) {\n      topMostIndex = rightIndex;\n    }\n    if (topMostIndex != index) {\n      var a = this.heap[index];\n      this.heap[index] = this.heap[topMostIndex];\n      this.heap[topMostIndex] = a;\n      this.siftDown(topMostIndex);\n      return true;\n    } else {\n      return false;\n    }\n  };\n  PriorityQueue2.prototype.toArray = function() {\n    return Array.from(this.heap);\n  };\n  return PriorityQueue2;\n}();\nvar priority_queue_default = PriorityQueue;\n\n// ../../models/templates/build/obj/quote-behavior.js\nvar QuoteBehavior;\n(function(QuoteBehavior2) {\n  QuoteBehavior2["noQuotes"] = "no-quotes";\n  QuoteBehavior2["useQuotes"] = "use-quotes";\n  QuoteBehavior2["default"] = "default-quotes";\n})(QuoteBehavior || (QuoteBehavior = {}));\n(function(QuoteBehavior2) {\n  function apply(behavior, text, punctuation, defaultTo) {\n    if (defaultTo == QuoteBehavior2.default || !defaultTo) {\n      throw "Specified quote behavior may be ambiguous - default behavior not specified (may not be .default)";\n    }\n    if (behavior == QuoteBehavior2.default) {\n      behavior = defaultTo;\n    }\n    switch (behavior) {\n      case QuoteBehavior2.noQuotes:\n        return text;\n      case QuoteBehavior2.useQuotes:\n        var _a = punctuation.quotesForKeepSuggestion, open = _a.open, close = _a.close;\n        return open + text + close;\n      default:\n        throw "Unsupported quote behavior state detected; implementation missing!";\n    }\n  }\n  QuoteBehavior2.apply = apply;\n})(QuoteBehavior || (QuoteBehavior = {}));\nvar quote_behavior_default = QuoteBehavior;\n\n// ../../models/templates/build/obj/tokenization.js\nfunction tokenize(wordBreaker, context) {\n  context = context || {\n    left: void 0,\n    startOfBuffer: void 0,\n    endOfBuffer: void 0\n  };\n  var leftSpans = wordBreaker(context.left || "") || [];\n  var rightSpans = wordBreaker(context.right || "") || [];\n  var leftTail;\n  if (leftSpans.length > 0) {\n    leftTail = leftSpans[leftSpans.length - 1];\n  }\n  if (leftSpans.length > 1) {\n    var leftTailBase = leftSpans[leftSpans.length - 2];\n    if (leftTailBase.end == leftTail.start) {\n      if (leftTail.text == "\'") {\n        var mergedSpan = {\n          text: leftTailBase.text + leftTail.text,\n          start: leftTailBase.start,\n          end: leftTail.end,\n          length: leftTailBase.length + leftTail.length\n        };\n        leftSpans.pop();\n        leftSpans.pop();\n        leftSpans.push(mergedSpan);\n        leftTail = mergedSpan;\n      }\n    }\n  }\n  var tokenization = {\n    left: leftSpans.map(function(span) {\n      return span.text;\n    }),\n    right: rightSpans.map(function(span) {\n      return span.text;\n    }),\n    caretSplitsToken: false\n  };\n  if (leftSpans.length > 0 && rightSpans.length > 0) {\n    var rightHead = rightSpans[0];\n    var leftSuffixWordbreak = leftTail.end != context.left.length;\n    var rightPrefixWordbreak = rightHead.start != 0;\n    if (leftSuffixWordbreak || rightPrefixWordbreak) {\n      return tokenization;\n    }\n    if (wordBreaker(leftTail.text + rightHead.text).length == 1) {\n      tokenization.caretSplitsToken = true;\n    }\n  }\n  return tokenization;\n}\nfunction getLastPreCaretToken(wordBreaker, context) {\n  var tokenization = tokenize(wordBreaker, context);\n  if (tokenization.left.length > 0) {\n    return tokenization.left.pop();\n  }\n  return "";\n}\nfunction wordbreak(wordBreaker, context) {\n  return getLastPreCaretToken(wordBreaker, context);\n}\n\n// ../../models/wordbreakers/build/obj/index.js\nvar obj_exports = {};\n__export(obj_exports, {\n  ascii: function() {\n    return ascii;\n  },\n  default: function() {\n    return default_;\n  },\n  defaultWordbreaker: function() {\n    return default_;\n  },\n  placeholder: function() {\n    return placeholder;\n  }\n});\n\n// ../../models/wordbreakers/build/obj/placeholder.js\nfunction placeholder(phrase) {\n  var nextStart = 0;\n  return phrase.split(/\\s+/).map(function(utterance) {\n    var span = {\n      start: nextStart,\n      end: nextStart + utterance.length,\n      text: utterance,\n      length: utterance.length\n    };\n    nextStart = span.end;\n    return span;\n  });\n}\n\n// ../../models/wordbreakers/build/obj/ascii.js\nfunction ascii(phrase) {\n  var matchWord = /[A-Za-z0-9\']+/g;\n  var words = [];\n  var match;\n  while ((match = matchWord.exec(phrase)) !== null) {\n    words.push(new RegExpDerivedSpan(match[0], match.index));\n  }\n  return words;\n}\nvar RegExpDerivedSpan = /* @__PURE__ */ function() {\n  function RegExpDerivedSpan2(text, start) {\n    this.text = text;\n    this.start = start;\n  }\n  Object.defineProperty(RegExpDerivedSpan2.prototype, "length", {\n    get: function() {\n      return this.text.length;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(RegExpDerivedSpan2.prototype, "end", {\n    get: function() {\n      return this.start + this.text.length;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  return RegExpDerivedSpan2;\n}();\n\n// ../../models/wordbreakers/build/obj/default/data.js\nvar propertyMap = [\n  "Other",\n  "LF",\n  "Newline",\n  "CR",\n  "WSegSpace",\n  "Double_Quote",\n  "Single_Quote",\n  "MidNum",\n  "MidNumLet",\n  "Numeric",\n  "MidLetter",\n  "ALetter",\n  "ExtendNumLet",\n  "Format",\n  "Extend",\n  "Hebrew_Letter",\n  "ZWJ",\n  "Katakana",\n  "Regional_Indicator",\n  "sot",\n  "eot"\n];\nvar WORD_BREAK_PROPERTY = [\n  [0, 0],\n  [10, 1],\n  [11, 2],\n  [13, 3],\n  [14, 0],\n  [32, 4],\n  [33, 0],\n  [34, 5],\n  [35, 0],\n  [39, 6],\n  [40, 0],\n  [44, 7],\n  [45, 0],\n  [46, 8],\n  [47, 0],\n  [48, 9],\n  [58, 10],\n  [59, 7],\n  [60, 0],\n  [65, 11],\n  [91, 0],\n  [95, 12],\n  [96, 0],\n  [97, 11],\n  [123, 0],\n  [133, 2],\n  [134, 0],\n  [170, 11],\n  [171, 0],\n  [173, 13],\n  [174, 0],\n  [181, 11],\n  [182, 0],\n  [183, 10],\n  [184, 0],\n  [186, 11],\n  [187, 0],\n  [192, 11],\n  [215, 0],\n  [216, 11],\n  [247, 0],\n  [248, 11],\n  [728, 0],\n  [734, 11],\n  [768, 14],\n  [880, 11],\n  [885, 0],\n  [886, 11],\n  [888, 0],\n  [890, 11],\n  [894, 7],\n  [895, 11],\n  [896, 0],\n  [902, 11],\n  [903, 10],\n  [904, 11],\n  [907, 0],\n  [908, 11],\n  [909, 0],\n  [910, 11],\n  [930, 0],\n  [931, 11],\n  [1014, 0],\n  [1015, 11],\n  [1154, 0],\n  [1155, 14],\n  [1162, 11],\n  [1328, 0],\n  [1329, 11],\n  [1367, 0],\n  [1369, 11],\n  [1373, 0],\n  [1374, 11],\n  [1375, 10],\n  [1376, 11],\n  [1417, 7],\n  [1418, 11],\n  [1419, 0],\n  [1425, 14],\n  [1470, 0],\n  [1471, 14],\n  [1472, 0],\n  [1473, 14],\n  [1475, 0],\n  [1476, 14],\n  [1478, 0],\n  [1479, 14],\n  [1480, 0],\n  [1488, 15],\n  [1515, 0],\n  [1519, 15],\n  [1523, 11],\n  [1524, 10],\n  [1525, 0],\n  [1536, 13],\n  [1542, 0],\n  [1548, 7],\n  [1550, 0],\n  [1552, 14],\n  [1563, 0],\n  [1564, 13],\n  [1565, 0],\n  [1568, 11],\n  [1611, 14],\n  [1632, 9],\n  [1642, 0],\n  [1643, 9],\n  [1644, 7],\n  [1645, 0],\n  [1646, 11],\n  [1648, 14],\n  [1649, 11],\n  [1748, 0],\n  [1749, 11],\n  [1750, 14],\n  [1757, 13],\n  [1758, 0],\n  [1759, 14],\n  [1765, 11],\n  [1767, 14],\n  [1769, 0],\n  [1770, 14],\n  [1774, 11],\n  [1776, 9],\n  [1786, 11],\n  [1789, 0],\n  [1791, 11],\n  [1792, 0],\n  [1807, 13],\n  [1808, 11],\n  [1809, 14],\n  [1810, 11],\n  [1840, 14],\n  [1867, 0],\n  [1869, 11],\n  [1958, 14],\n  [1969, 11],\n  [1970, 0],\n  [1984, 9],\n  [1994, 11],\n  [2027, 14],\n  [2036, 11],\n  [2038, 0],\n  [2040, 7],\n  [2041, 0],\n  [2042, 11],\n  [2043, 0],\n  [2045, 14],\n  [2046, 0],\n  [2048, 11],\n  [2070, 14],\n  [2074, 11],\n  [2075, 14],\n  [2084, 11],\n  [2085, 14],\n  [2088, 11],\n  [2089, 14],\n  [2094, 0],\n  [2112, 11],\n  [2137, 14],\n  [2140, 0],\n  [2144, 11],\n  [2155, 0],\n  [2208, 11],\n  [2229, 0],\n  [2230, 11],\n  [2248, 0],\n  [2259, 14],\n  [2274, 13],\n  [2275, 14],\n  [2308, 11],\n  [2362, 14],\n  [2365, 11],\n  [2366, 14],\n  [2384, 11],\n  [2385, 14],\n  [2392, 11],\n  [2402, 14],\n  [2404, 0],\n  [2406, 9],\n  [2416, 0],\n  [2417, 11],\n  [2433, 14],\n  [2436, 0],\n  [2437, 11],\n  [2445, 0],\n  [2447, 11],\n  [2449, 0],\n  [2451, 11],\n  [2473, 0],\n  [2474, 11],\n  [2481, 0],\n  [2482, 11],\n  [2483, 0],\n  [2486, 11],\n  [2490, 0],\n  [2492, 14],\n  [2493, 11],\n  [2494, 14],\n  [2501, 0],\n  [2503, 14],\n  [2505, 0],\n  [2507, 14],\n  [2510, 11],\n  [2511, 0],\n  [2519, 14],\n  [2520, 0],\n  [2524, 11],\n  [2526, 0],\n  [2527, 11],\n  [2530, 14],\n  [2532, 0],\n  [2534, 9],\n  [2544, 11],\n  [2546, 0],\n  [2556, 11],\n  [2557, 0],\n  [2558, 14],\n  [2559, 0],\n  [2561, 14],\n  [2564, 0],\n  [2565, 11],\n  [2571, 0],\n  [2575, 11],\n  [2577, 0],\n  [2579, 11],\n  [2601, 0],\n  [2602, 11],\n  [2609, 0],\n  [2610, 11],\n  [2612, 0],\n  [2613, 11],\n  [2615, 0],\n  [2616, 11],\n  [2618, 0],\n  [2620, 14],\n  [2621, 0],\n  [2622, 14],\n  [2627, 0],\n  [2631, 14],\n  [2633, 0],\n  [2635, 14],\n  [2638, 0],\n  [2641, 14],\n  [2642, 0],\n  [2649, 11],\n  [2653, 0],\n  [2654, 11],\n  [2655, 0],\n  [2662, 9],\n  [2672, 14],\n  [2674, 11],\n  [2677, 14],\n  [2678, 0],\n  [2689, 14],\n  [2692, 0],\n  [2693, 11],\n  [2702, 0],\n  [2703, 11],\n  [2706, 0],\n  [2707, 11],\n  [2729, 0],\n  [2730, 11],\n  [2737, 0],\n  [2738, 11],\n  [2740, 0],\n  [2741, 11],\n  [2746, 0],\n  [2748, 14],\n  [2749, 11],\n  [2750, 14],\n  [2758, 0],\n  [2759, 14],\n  [2762, 0],\n  [2763, 14],\n  [2766, 0],\n  [2768, 11],\n  [2769, 0],\n  [2784, 11],\n  [2786, 14],\n  [2788, 0],\n  [2790, 9],\n  [2800, 0],\n  [2809, 11],\n  [2810, 14],\n  [2816, 0],\n  [2817, 14],\n  [2820, 0],\n  [2821, 11],\n  [2829, 0],\n  [2831, 11],\n  [2833, 0],\n  [2835, 11],\n  [2857, 0],\n  [2858, 11],\n  [2865, 0],\n  [2866, 11],\n  [2868, 0],\n  [2869, 11],\n  [2874, 0],\n  [2876, 14],\n  [2877, 11],\n  [2878, 14],\n  [2885, 0],\n  [2887, 14],\n  [2889, 0],\n  [2891, 14],\n  [2894, 0],\n  [2901, 14],\n  [2904, 0],\n  [2908, 11],\n  [2910, 0],\n  [2911, 11],\n  [2914, 14],\n  [2916, 0],\n  [2918, 9],\n  [2928, 0],\n  [2929, 11],\n  [2930, 0],\n  [2946, 14],\n  [2947, 11],\n  [2948, 0],\n  [2949, 11],\n  [2955, 0],\n  [2958, 11],\n  [2961, 0],\n  [2962, 11],\n  [2966, 0],\n  [2969, 11],\n  [2971, 0],\n  [2972, 11],\n  [2973, 0],\n  [2974, 11],\n  [2976, 0],\n  [2979, 11],\n  [2981, 0],\n  [2984, 11],\n  [2987, 0],\n  [2990, 11],\n  [3002, 0],\n  [3006, 14],\n  [3011, 0],\n  [3014, 14],\n  [3017, 0],\n  [3018, 14],\n  [3022, 0],\n  [3024, 11],\n  [3025, 0],\n  [3031, 14],\n  [3032, 0],\n  [3046, 9],\n  [3056, 0],\n  [3072, 14],\n  [3077, 11],\n  [3085, 0],\n  [3086, 11],\n  [3089, 0],\n  [3090, 11],\n  [3113, 0],\n  [3114, 11],\n  [3130, 0],\n  [3133, 11],\n  [3134, 14],\n  [3141, 0],\n  [3142, 14],\n  [3145, 0],\n  [3146, 14],\n  [3150, 0],\n  [3157, 14],\n  [3159, 0],\n  [3160, 11],\n  [3163, 0],\n  [3168, 11],\n  [3170, 14],\n  [3172, 0],\n  [3174, 9],\n  [3184, 0],\n  [3200, 11],\n  [3201, 14],\n  [3204, 0],\n  [3205, 11],\n  [3213, 0],\n  [3214, 11],\n  [3217, 0],\n  [3218, 11],\n  [3241, 0],\n  [3242, 11],\n  [3252, 0],\n  [3253, 11],\n  [3258, 0],\n  [3260, 14],\n  [3261, 11],\n  [3262, 14],\n  [3269, 0],\n  [3270, 14],\n  [3273, 0],\n  [3274, 14],\n  [3278, 0],\n  [3285, 14],\n  [3287, 0],\n  [3294, 11],\n  [3295, 0],\n  [3296, 11],\n  [3298, 14],\n  [3300, 0],\n  [3302, 9],\n  [3312, 0],\n  [3313, 11],\n  [3315, 0],\n  [3328, 14],\n  [3332, 11],\n  [3341, 0],\n  [3342, 11],\n  [3345, 0],\n  [3346, 11],\n  [3387, 14],\n  [3389, 11],\n  [3390, 14],\n  [3397, 0],\n  [3398, 14],\n  [3401, 0],\n  [3402, 14],\n  [3406, 11],\n  [3407, 0],\n  [3412, 11],\n  [3415, 14],\n  [3416, 0],\n  [3423, 11],\n  [3426, 14],\n  [3428, 0],\n  [3430, 9],\n  [3440, 0],\n  [3450, 11],\n  [3456, 0],\n  [3457, 14],\n  [3460, 0],\n  [3461, 11],\n  [3479, 0],\n  [3482, 11],\n  [3506, 0],\n  [3507, 11],\n  [3516, 0],\n  [3517, 11],\n  [3518, 0],\n  [3520, 11],\n  [3527, 0],\n  [3530, 14],\n  [3531, 0],\n  [3535, 14],\n  [3541, 0],\n  [3542, 14],\n  [3543, 0],\n  [3544, 14],\n  [3552, 0],\n  [3558, 9],\n  [3568, 0],\n  [3570, 14],\n  [3572, 0],\n  [3633, 14],\n  [3634, 0],\n  [3636, 14],\n  [3643, 0],\n  [3655, 14],\n  [3663, 0],\n  [3664, 9],\n  [3674, 0],\n  [3761, 14],\n  [3762, 0],\n  [3764, 14],\n  [3773, 0],\n  [3784, 14],\n  [3790, 0],\n  [3792, 9],\n  [3802, 0],\n  [3840, 11],\n  [3841, 0],\n  [3864, 14],\n  [3866, 0],\n  [3872, 9],\n  [3882, 0],\n  [3893, 14],\n  [3894, 0],\n  [3895, 14],\n  [3896, 0],\n  [3897, 14],\n  [3898, 0],\n  [3902, 14],\n  [3904, 11],\n  [3912, 0],\n  [3913, 11],\n  [3949, 0],\n  [3953, 14],\n  [3973, 0],\n  [3974, 14],\n  [3976, 11],\n  [3981, 14],\n  [3992, 0],\n  [3993, 14],\n  [4029, 0],\n  [4038, 14],\n  [4039, 0],\n  [4139, 14],\n  [4159, 0],\n  [4160, 9],\n  [4170, 0],\n  [4182, 14],\n  [4186, 0],\n  [4190, 14],\n  [4193, 0],\n  [4194, 14],\n  [4197, 0],\n  [4199, 14],\n  [4206, 0],\n  [4209, 14],\n  [4213, 0],\n  [4226, 14],\n  [4238, 0],\n  [4239, 14],\n  [4240, 9],\n  [4250, 14],\n  [4254, 0],\n  [4256, 11],\n  [4294, 0],\n  [4295, 11],\n  [4296, 0],\n  [4301, 11],\n  [4302, 0],\n  [4304, 11],\n  [4347, 0],\n  [4348, 11],\n  [4681, 0],\n  [4682, 11],\n  [4686, 0],\n  [4688, 11],\n  [4695, 0],\n  [4696, 11],\n  [4697, 0],\n  [4698, 11],\n  [4702, 0],\n  [4704, 11],\n  [4745, 0],\n  [4746, 11],\n  [4750, 0],\n  [4752, 11],\n  [4785, 0],\n  [4786, 11],\n  [4790, 0],\n  [4792, 11],\n  [4799, 0],\n  [4800, 11],\n  [4801, 0],\n  [4802, 11],\n  [4806, 0],\n  [4808, 11],\n  [4823, 0],\n  [4824, 11],\n  [4881, 0],\n  [4882, 11],\n  [4886, 0],\n  [4888, 11],\n  [4955, 0],\n  [4957, 14],\n  [4960, 0],\n  [4992, 11],\n  [5008, 0],\n  [5024, 11],\n  [5110, 0],\n  [5112, 11],\n  [5118, 0],\n  [5121, 11],\n  [5741, 0],\n  [5743, 11],\n  [5760, 4],\n  [5761, 11],\n  [5787, 0],\n  [5792, 11],\n  [5867, 0],\n  [5870, 11],\n  [5881, 0],\n  [5888, 11],\n  [5901, 0],\n  [5902, 11],\n  [5906, 14],\n  [5909, 0],\n  [5920, 11],\n  [5938, 14],\n  [5941, 0],\n  [5952, 11],\n  [5970, 14],\n  [5972, 0],\n  [5984, 11],\n  [5997, 0],\n  [5998, 11],\n  [6001, 0],\n  [6002, 14],\n  [6004, 0],\n  [6068, 14],\n  [6100, 0],\n  [6109, 14],\n  [6110, 0],\n  [6112, 9],\n  [6122, 0],\n  [6155, 14],\n  [6158, 13],\n  [6159, 0],\n  [6160, 9],\n  [6170, 0],\n  [6176, 11],\n  [6265, 0],\n  [6272, 11],\n  [6277, 14],\n  [6279, 11],\n  [6313, 14],\n  [6314, 11],\n  [6315, 0],\n  [6320, 11],\n  [6390, 0],\n  [6400, 11],\n  [6431, 0],\n  [6432, 14],\n  [6444, 0],\n  [6448, 14],\n  [6460, 0],\n  [6470, 9],\n  [6480, 0],\n  [6608, 9],\n  [6618, 0],\n  [6656, 11],\n  [6679, 14],\n  [6684, 0],\n  [6741, 14],\n  [6751, 0],\n  [6752, 14],\n  [6781, 0],\n  [6783, 14],\n  [6784, 9],\n  [6794, 0],\n  [6800, 9],\n  [6810, 0],\n  [6832, 14],\n  [6849, 0],\n  [6912, 14],\n  [6917, 11],\n  [6964, 14],\n  [6981, 11],\n  [6988, 0],\n  [6992, 9],\n  [7002, 0],\n  [7019, 14],\n  [7028, 0],\n  [7040, 14],\n  [7043, 11],\n  [7073, 14],\n  [7086, 11],\n  [7088, 9],\n  [7098, 11],\n  [7142, 14],\n  [7156, 0],\n  [7168, 11],\n  [7204, 14],\n  [7224, 0],\n  [7232, 9],\n  [7242, 0],\n  [7245, 11],\n  [7248, 9],\n  [7258, 11],\n  [7294, 0],\n  [7296, 11],\n  [7305, 0],\n  [7312, 11],\n  [7355, 0],\n  [7357, 11],\n  [7360, 0],\n  [7376, 14],\n  [7379, 0],\n  [7380, 14],\n  [7401, 11],\n  [7405, 14],\n  [7406, 11],\n  [7412, 14],\n  [7413, 11],\n  [7415, 14],\n  [7418, 11],\n  [7419, 0],\n  [7424, 11],\n  [7616, 14],\n  [7674, 0],\n  [7675, 14],\n  [7680, 11],\n  [7958, 0],\n  [7960, 11],\n  [7966, 0],\n  [7968, 11],\n  [8006, 0],\n  [8008, 11],\n  [8014, 0],\n  [8016, 11],\n  [8024, 0],\n  [8025, 11],\n  [8026, 0],\n  [8027, 11],\n  [8028, 0],\n  [8029, 11],\n  [8030, 0],\n  [8031, 11],\n  [8062, 0],\n  [8064, 11],\n  [8117, 0],\n  [8118, 11],\n  [8125, 0],\n  [8126, 11],\n  [8127, 0],\n  [8130, 11],\n  [8133, 0],\n  [8134, 11],\n  [8141, 0],\n  [8144, 11],\n  [8148, 0],\n  [8150, 11],\n  [8156, 0],\n  [8160, 11],\n  [8173, 0],\n  [8178, 11],\n  [8181, 0],\n  [8182, 11],\n  [8189, 0],\n  [8192, 4],\n  [8199, 0],\n  [8200, 4],\n  [8203, 0],\n  [8204, 14],\n  [8205, 16],\n  [8206, 13],\n  [8208, 0],\n  [8216, 8],\n  [8218, 0],\n  [8228, 8],\n  [8229, 0],\n  [8231, 10],\n  [8232, 2],\n  [8234, 13],\n  [8239, 12],\n  [8240, 0],\n  [8255, 12],\n  [8257, 0],\n  [8260, 7],\n  [8261, 0],\n  [8276, 12],\n  [8277, 0],\n  [8287, 4],\n  [8288, 13],\n  [8293, 0],\n  [8294, 13],\n  [8304, 0],\n  [8305, 11],\n  [8306, 0],\n  [8319, 11],\n  [8320, 0],\n  [8336, 11],\n  [8349, 0],\n  [8400, 14],\n  [8433, 0],\n  [8450, 11],\n  [8451, 0],\n  [8455, 11],\n  [8456, 0],\n  [8458, 11],\n  [8468, 0],\n  [8469, 11],\n  [8470, 0],\n  [8473, 11],\n  [8478, 0],\n  [8484, 11],\n  [8485, 0],\n  [8486, 11],\n  [8487, 0],\n  [8488, 11],\n  [8489, 0],\n  [8490, 11],\n  [8494, 0],\n  [8495, 11],\n  [8506, 0],\n  [8508, 11],\n  [8512, 0],\n  [8517, 11],\n  [8522, 0],\n  [8526, 11],\n  [8527, 0],\n  [8544, 11],\n  [8585, 0],\n  [9398, 11],\n  [9450, 0],\n  [11264, 11],\n  [11311, 0],\n  [11312, 11],\n  [11359, 0],\n  [11360, 11],\n  [11493, 0],\n  [11499, 11],\n  [11503, 14],\n  [11506, 11],\n  [11508, 0],\n  [11520, 11],\n  [11558, 0],\n  [11559, 11],\n  [11560, 0],\n  [11565, 11],\n  [11566, 0],\n  [11568, 11],\n  [11624, 0],\n  [11631, 11],\n  [11632, 0],\n  [11647, 14],\n  [11648, 11],\n  [11671, 0],\n  [11680, 11],\n  [11687, 0],\n  [11688, 11],\n  [11695, 0],\n  [11696, 11],\n  [11703, 0],\n  [11704, 11],\n  [11711, 0],\n  [11712, 11],\n  [11719, 0],\n  [11720, 11],\n  [11727, 0],\n  [11728, 11],\n  [11735, 0],\n  [11736, 11],\n  [11743, 0],\n  [11744, 14],\n  [11776, 0],\n  [11823, 11],\n  [11824, 0],\n  [12288, 4],\n  [12289, 0],\n  [12293, 11],\n  [12294, 0],\n  [12330, 14],\n  [12336, 0],\n  [12337, 17],\n  [12342, 0],\n  [12347, 11],\n  [12349, 0],\n  [12441, 14],\n  [12443, 17],\n  [12445, 0],\n  [12448, 17],\n  [12539, 0],\n  [12540, 17],\n  [12544, 0],\n  [12549, 11],\n  [12592, 0],\n  [12593, 11],\n  [12687, 0],\n  [12704, 11],\n  [12736, 0],\n  [12784, 17],\n  [12800, 0],\n  [13008, 17],\n  [13055, 0],\n  [13056, 17],\n  [13144, 0],\n  [40960, 11],\n  [42125, 0],\n  [42192, 11],\n  [42238, 0],\n  [42240, 11],\n  [42509, 0],\n  [42512, 11],\n  [42528, 9],\n  [42538, 11],\n  [42540, 0],\n  [42560, 11],\n  [42607, 14],\n  [42611, 0],\n  [42612, 14],\n  [42622, 0],\n  [42623, 11],\n  [42654, 14],\n  [42656, 11],\n  [42736, 14],\n  [42738, 0],\n  [42760, 11],\n  [42944, 0],\n  [42946, 11],\n  [42955, 0],\n  [42997, 11],\n  [43010, 14],\n  [43011, 11],\n  [43014, 14],\n  [43015, 11],\n  [43019, 14],\n  [43020, 11],\n  [43043, 14],\n  [43048, 0],\n  [43052, 14],\n  [43053, 0],\n  [43072, 11],\n  [43124, 0],\n  [43136, 14],\n  [43138, 11],\n  [43188, 14],\n  [43206, 0],\n  [43216, 9],\n  [43226, 0],\n  [43232, 14],\n  [43250, 11],\n  [43256, 0],\n  [43259, 11],\n  [43260, 0],\n  [43261, 11],\n  [43263, 14],\n  [43264, 9],\n  [43274, 11],\n  [43302, 14],\n  [43310, 0],\n  [43312, 11],\n  [43335, 14],\n  [43348, 0],\n  [43360, 11],\n  [43389, 0],\n  [43392, 14],\n  [43396, 11],\n  [43443, 14],\n  [43457, 0],\n  [43471, 11],\n  [43472, 9],\n  [43482, 0],\n  [43493, 14],\n  [43494, 0],\n  [43504, 9],\n  [43514, 0],\n  [43520, 11],\n  [43561, 14],\n  [43575, 0],\n  [43584, 11],\n  [43587, 14],\n  [43588, 11],\n  [43596, 14],\n  [43598, 0],\n  [43600, 9],\n  [43610, 0],\n  [43643, 14],\n  [43646, 0],\n  [43696, 14],\n  [43697, 0],\n  [43698, 14],\n  [43701, 0],\n  [43703, 14],\n  [43705, 0],\n  [43710, 14],\n  [43712, 0],\n  [43713, 14],\n  [43714, 0],\n  [43744, 11],\n  [43755, 14],\n  [43760, 0],\n  [43762, 11],\n  [43765, 14],\n  [43767, 0],\n  [43777, 11],\n  [43783, 0],\n  [43785, 11],\n  [43791, 0],\n  [43793, 11],\n  [43799, 0],\n  [43808, 11],\n  [43815, 0],\n  [43816, 11],\n  [43823, 0],\n  [43824, 11],\n  [43882, 0],\n  [43888, 11],\n  [44003, 14],\n  [44011, 0],\n  [44012, 14],\n  [44014, 0],\n  [44016, 9],\n  [44026, 0],\n  [44032, 11],\n  [55204, 0],\n  [55216, 11],\n  [55239, 0],\n  [55243, 11],\n  [55292, 0],\n  [64256, 11],\n  [64263, 0],\n  [64275, 11],\n  [64280, 0],\n  [64285, 15],\n  [64286, 14],\n  [64287, 15],\n  [64297, 0],\n  [64298, 15],\n  [64311, 0],\n  [64312, 15],\n  [64317, 0],\n  [64318, 15],\n  [64319, 0],\n  [64320, 15],\n  [64322, 0],\n  [64323, 15],\n  [64325, 0],\n  [64326, 15],\n  [64336, 11],\n  [64434, 0],\n  [64467, 11],\n  [64830, 0],\n  [64848, 11],\n  [64912, 0],\n  [64914, 11],\n  [64968, 0],\n  [65008, 11],\n  [65020, 0],\n  [65024, 14],\n  [65040, 7],\n  [65041, 0],\n  [65043, 10],\n  [65044, 7],\n  [65045, 0],\n  [65056, 14],\n  [65072, 0],\n  [65075, 12],\n  [65077, 0],\n  [65101, 12],\n  [65104, 7],\n  [65105, 0],\n  [65106, 8],\n  [65107, 0],\n  [65108, 7],\n  [65109, 10],\n  [65110, 0],\n  [65136, 11],\n  [65141, 0],\n  [65142, 11],\n  [65277, 0],\n  [65279, 13],\n  [65280, 0],\n  [65287, 8],\n  [65288, 0],\n  [65292, 7],\n  [65293, 0],\n  [65294, 8],\n  [65295, 0],\n  [65296, 9],\n  [65306, 10],\n  [65307, 7],\n  [65308, 0],\n  [65313, 11],\n  [65339, 0],\n  [65343, 12],\n  [65344, 0],\n  [65345, 11],\n  [65371, 0],\n  [65382, 17],\n  [65438, 14],\n  [65440, 11],\n  [65471, 0],\n  [65474, 11],\n  [65480, 0],\n  [65482, 11],\n  [65488, 0],\n  [65490, 11],\n  [65496, 0],\n  [65498, 11],\n  [65501, 0],\n  [65529, 13],\n  [65532, 0],\n  [65536, 11],\n  [65548, 0],\n  [65549, 11],\n  [65575, 0],\n  [65576, 11],\n  [65595, 0],\n  [65596, 11],\n  [65598, 0],\n  [65599, 11],\n  [65614, 0],\n  [65616, 11],\n  [65630, 0],\n  [65664, 11],\n  [65787, 0],\n  [65856, 11],\n  [65909, 0],\n  [66045, 14],\n  [66046, 0],\n  [66176, 11],\n  [66205, 0],\n  [66208, 11],\n  [66257, 0],\n  [66272, 14],\n  [66273, 0],\n  [66304, 11],\n  [66336, 0],\n  [66349, 11],\n  [66379, 0],\n  [66384, 11],\n  [66422, 14],\n  [66427, 0],\n  [66432, 11],\n  [66462, 0],\n  [66464, 11],\n  [66500, 0],\n  [66504, 11],\n  [66512, 0],\n  [66513, 11],\n  [66518, 0],\n  [66560, 11],\n  [66718, 0],\n  [66720, 9],\n  [66730, 0],\n  [66736, 11],\n  [66772, 0],\n  [66776, 11],\n  [66812, 0],\n  [66816, 11],\n  [66856, 0],\n  [66864, 11],\n  [66916, 0],\n  [67072, 11],\n  [67383, 0],\n  [67392, 11],\n  [67414, 0],\n  [67424, 11],\n  [67432, 0],\n  [67584, 11],\n  [67590, 0],\n  [67592, 11],\n  [67593, 0],\n  [67594, 11],\n  [67638, 0],\n  [67639, 11],\n  [67641, 0],\n  [67644, 11],\n  [67645, 0],\n  [67647, 11],\n  [67670, 0],\n  [67680, 11],\n  [67703, 0],\n  [67712, 11],\n  [67743, 0],\n  [67808, 11],\n  [67827, 0],\n  [67828, 11],\n  [67830, 0],\n  [67840, 11],\n  [67862, 0],\n  [67872, 11],\n  [67898, 0],\n  [67968, 11],\n  [68024, 0],\n  [68030, 11],\n  [68032, 0],\n  [68096, 11],\n  [68097, 14],\n  [68100, 0],\n  [68101, 14],\n  [68103, 0],\n  [68108, 14],\n  [68112, 11],\n  [68116, 0],\n  [68117, 11],\n  [68120, 0],\n  [68121, 11],\n  [68150, 0],\n  [68152, 14],\n  [68155, 0],\n  [68159, 14],\n  [68160, 0],\n  [68192, 11],\n  [68221, 0],\n  [68224, 11],\n  [68253, 0],\n  [68288, 11],\n  [68296, 0],\n  [68297, 11],\n  [68325, 14],\n  [68327, 0],\n  [68352, 11],\n  [68406, 0],\n  [68416, 11],\n  [68438, 0],\n  [68448, 11],\n  [68467, 0],\n  [68480, 11],\n  [68498, 0],\n  [68608, 11],\n  [68681, 0],\n  [68736, 11],\n  [68787, 0],\n  [68800, 11],\n  [68851, 0],\n  [68864, 11],\n  [68900, 14],\n  [68904, 0],\n  [68912, 9],\n  [68922, 0],\n  [69248, 11],\n  [69290, 0],\n  [69291, 14],\n  [69293, 0],\n  [69296, 11],\n  [69298, 0],\n  [69376, 11],\n  [69405, 0],\n  [69415, 11],\n  [69416, 0],\n  [69424, 11],\n  [69446, 14],\n  [69457, 0],\n  [69552, 11],\n  [69573, 0],\n  [69600, 11],\n  [69623, 0],\n  [69632, 14],\n  [69635, 11],\n  [69688, 14],\n  [69703, 0],\n  [69734, 9],\n  [69744, 0],\n  [69759, 14],\n  [69763, 11],\n  [69808, 14],\n  [69819, 0],\n  [69821, 13],\n  [69822, 0],\n  [69837, 13],\n  [69838, 0],\n  [69840, 11],\n  [69865, 0],\n  [69872, 9],\n  [69882, 0],\n  [69888, 14],\n  [69891, 11],\n  [69927, 14],\n  [69941, 0],\n  [69942, 9],\n  [69952, 0],\n  [69956, 11],\n  [69957, 14],\n  [69959, 11],\n  [69960, 0],\n  [69968, 11],\n  [70003, 14],\n  [70004, 0],\n  [70006, 11],\n  [70007, 0],\n  [70016, 14],\n  [70019, 11],\n  [70067, 14],\n  [70081, 11],\n  [70085, 0],\n  [70089, 14],\n  [70093, 0],\n  [70094, 14],\n  [70096, 9],\n  [70106, 11],\n  [70107, 0],\n  [70108, 11],\n  [70109, 0],\n  [70144, 11],\n  [70162, 0],\n  [70163, 11],\n  [70188, 14],\n  [70200, 0],\n  [70206, 14],\n  [70207, 0],\n  [70272, 11],\n  [70279, 0],\n  [70280, 11],\n  [70281, 0],\n  [70282, 11],\n  [70286, 0],\n  [70287, 11],\n  [70302, 0],\n  [70303, 11],\n  [70313, 0],\n  [70320, 11],\n  [70367, 14],\n  [70379, 0],\n  [70384, 9],\n  [70394, 0],\n  [70400, 14],\n  [70404, 0],\n  [70405, 11],\n  [70413, 0],\n  [70415, 11],\n  [70417, 0],\n  [70419, 11],\n  [70441, 0],\n  [70442, 11],\n  [70449, 0],\n  [70450, 11],\n  [70452, 0],\n  [70453, 11],\n  [70458, 0],\n  [70459, 14],\n  [70461, 11],\n  [70462, 14],\n  [70469, 0],\n  [70471, 14],\n  [70473, 0],\n  [70475, 14],\n  [70478, 0],\n  [70480, 11],\n  [70481, 0],\n  [70487, 14],\n  [70488, 0],\n  [70493, 11],\n  [70498, 14],\n  [70500, 0],\n  [70502, 14],\n  [70509, 0],\n  [70512, 14],\n  [70517, 0],\n  [70656, 11],\n  [70709, 14],\n  [70727, 11],\n  [70731, 0],\n  [70736, 9],\n  [70746, 0],\n  [70750, 14],\n  [70751, 11],\n  [70754, 0],\n  [70784, 11],\n  [70832, 14],\n  [70852, 11],\n  [70854, 0],\n  [70855, 11],\n  [70856, 0],\n  [70864, 9],\n  [70874, 0],\n  [71040, 11],\n  [71087, 14],\n  [71094, 0],\n  [71096, 14],\n  [71105, 0],\n  [71128, 11],\n  [71132, 14],\n  [71134, 0],\n  [71168, 11],\n  [71216, 14],\n  [71233, 0],\n  [71236, 11],\n  [71237, 0],\n  [71248, 9],\n  [71258, 0],\n  [71296, 11],\n  [71339, 14],\n  [71352, 11],\n  [71353, 0],\n  [71360, 9],\n  [71370, 0],\n  [71453, 14],\n  [71468, 0],\n  [71472, 9],\n  [71482, 0],\n  [71680, 11],\n  [71724, 14],\n  [71739, 0],\n  [71840, 11],\n  [71904, 9],\n  [71914, 0],\n  [71935, 11],\n  [71943, 0],\n  [71945, 11],\n  [71946, 0],\n  [71948, 11],\n  [71956, 0],\n  [71957, 11],\n  [71959, 0],\n  [71960, 11],\n  [71984, 14],\n  [71990, 0],\n  [71991, 14],\n  [71993, 0],\n  [71995, 14],\n  [71999, 11],\n  [72e3, 14],\n  [72001, 11],\n  [72002, 14],\n  [72004, 0],\n  [72016, 9],\n  [72026, 0],\n  [72096, 11],\n  [72104, 0],\n  [72106, 11],\n  [72145, 14],\n  [72152, 0],\n  [72154, 14],\n  [72161, 11],\n  [72162, 0],\n  [72163, 11],\n  [72164, 14],\n  [72165, 0],\n  [72192, 11],\n  [72193, 14],\n  [72203, 11],\n  [72243, 14],\n  [72250, 11],\n  [72251, 14],\n  [72255, 0],\n  [72263, 14],\n  [72264, 0],\n  [72272, 11],\n  [72273, 14],\n  [72284, 11],\n  [72330, 14],\n  [72346, 0],\n  [72349, 11],\n  [72350, 0],\n  [72384, 11],\n  [72441, 0],\n  [72704, 11],\n  [72713, 0],\n  [72714, 11],\n  [72751, 14],\n  [72759, 0],\n  [72760, 14],\n  [72768, 11],\n  [72769, 0],\n  [72784, 9],\n  [72794, 0],\n  [72818, 11],\n  [72848, 0],\n  [72850, 14],\n  [72872, 0],\n  [72873, 14],\n  [72887, 0],\n  [72960, 11],\n  [72967, 0],\n  [72968, 11],\n  [72970, 0],\n  [72971, 11],\n  [73009, 14],\n  [73015, 0],\n  [73018, 14],\n  [73019, 0],\n  [73020, 14],\n  [73022, 0],\n  [73023, 14],\n  [73030, 11],\n  [73031, 14],\n  [73032, 0],\n  [73040, 9],\n  [73050, 0],\n  [73056, 11],\n  [73062, 0],\n  [73063, 11],\n  [73065, 0],\n  [73066, 11],\n  [73098, 14],\n  [73103, 0],\n  [73104, 14],\n  [73106, 0],\n  [73107, 14],\n  [73112, 11],\n  [73113, 0],\n  [73120, 9],\n  [73130, 0],\n  [73440, 11],\n  [73459, 14],\n  [73463, 0],\n  [73648, 11],\n  [73649, 0],\n  [73728, 11],\n  [74650, 0],\n  [74752, 11],\n  [74863, 0],\n  [74880, 11],\n  [75076, 0],\n  [77824, 11],\n  [78895, 0],\n  [78896, 13],\n  [78905, 0],\n  [82944, 11],\n  [83527, 0],\n  [92160, 11],\n  [92729, 0],\n  [92736, 11],\n  [92767, 0],\n  [92768, 9],\n  [92778, 0],\n  [92880, 11],\n  [92910, 0],\n  [92912, 14],\n  [92917, 0],\n  [92928, 11],\n  [92976, 14],\n  [92983, 0],\n  [92992, 11],\n  [92996, 0],\n  [93008, 9],\n  [93018, 0],\n  [93027, 11],\n  [93048, 0],\n  [93053, 11],\n  [93072, 0],\n  [93760, 11],\n  [93824, 0],\n  [93952, 11],\n  [94027, 0],\n  [94031, 14],\n  [94032, 11],\n  [94033, 14],\n  [94088, 0],\n  [94095, 14],\n  [94099, 11],\n  [94112, 0],\n  [94176, 11],\n  [94178, 0],\n  [94179, 11],\n  [94180, 14],\n  [94181, 0],\n  [94192, 14],\n  [94194, 0],\n  [110592, 17],\n  [110593, 0],\n  [110948, 17],\n  [110952, 0],\n  [113664, 11],\n  [113771, 0],\n  [113776, 11],\n  [113789, 0],\n  [113792, 11],\n  [113801, 0],\n  [113808, 11],\n  [113818, 0],\n  [113821, 14],\n  [113823, 0],\n  [113824, 13],\n  [113828, 0],\n  [119141, 14],\n  [119146, 0],\n  [119149, 14],\n  [119155, 13],\n  [119163, 14],\n  [119171, 0],\n  [119173, 14],\n  [119180, 0],\n  [119210, 14],\n  [119214, 0],\n  [119362, 14],\n  [119365, 0],\n  [119808, 11],\n  [119893, 0],\n  [119894, 11],\n  [119965, 0],\n  [119966, 11],\n  [119968, 0],\n  [119970, 11],\n  [119971, 0],\n  [119973, 11],\n  [119975, 0],\n  [119977, 11],\n  [119981, 0],\n  [119982, 11],\n  [119994, 0],\n  [119995, 11],\n  [119996, 0],\n  [119997, 11],\n  [120004, 0],\n  [120005, 11],\n  [120070, 0],\n  [120071, 11],\n  [120075, 0],\n  [120077, 11],\n  [120085, 0],\n  [120086, 11],\n  [120093, 0],\n  [120094, 11],\n  [120122, 0],\n  [120123, 11],\n  [120127, 0],\n  [120128, 11],\n  [120133, 0],\n  [120134, 11],\n  [120135, 0],\n  [120138, 11],\n  [120145, 0],\n  [120146, 11],\n  [120486, 0],\n  [120488, 11],\n  [120513, 0],\n  [120514, 11],\n  [120539, 0],\n  [120540, 11],\n  [120571, 0],\n  [120572, 11],\n  [120597, 0],\n  [120598, 11],\n  [120629, 0],\n  [120630, 11],\n  [120655, 0],\n  [120656, 11],\n  [120687, 0],\n  [120688, 11],\n  [120713, 0],\n  [120714, 11],\n  [120745, 0],\n  [120746, 11],\n  [120771, 0],\n  [120772, 11],\n  [120780, 0],\n  [120782, 9],\n  [120832, 0],\n  [121344, 14],\n  [121399, 0],\n  [121403, 14],\n  [121453, 0],\n  [121461, 14],\n  [121462, 0],\n  [121476, 14],\n  [121477, 0],\n  [121499, 14],\n  [121504, 0],\n  [121505, 14],\n  [121520, 0],\n  [122880, 14],\n  [122887, 0],\n  [122888, 14],\n  [122905, 0],\n  [122907, 14],\n  [122914, 0],\n  [122915, 14],\n  [122917, 0],\n  [122918, 14],\n  [122923, 0],\n  [123136, 11],\n  [123181, 0],\n  [123184, 14],\n  [123191, 11],\n  [123198, 0],\n  [123200, 9],\n  [123210, 0],\n  [123214, 11],\n  [123215, 0],\n  [123584, 11],\n  [123628, 14],\n  [123632, 9],\n  [123642, 0],\n  [124928, 11],\n  [125125, 0],\n  [125136, 14],\n  [125143, 0],\n  [125184, 11],\n  [125252, 14],\n  [125259, 11],\n  [125260, 0],\n  [125264, 9],\n  [125274, 0],\n  [126464, 11],\n  [126468, 0],\n  [126469, 11],\n  [126496, 0],\n  [126497, 11],\n  [126499, 0],\n  [126500, 11],\n  [126501, 0],\n  [126503, 11],\n  [126504, 0],\n  [126505, 11],\n  [126515, 0],\n  [126516, 11],\n  [126520, 0],\n  [126521, 11],\n  [126522, 0],\n  [126523, 11],\n  [126524, 0],\n  [126530, 11],\n  [126531, 0],\n  [126535, 11],\n  [126536, 0],\n  [126537, 11],\n  [126538, 0],\n  [126539, 11],\n  [126540, 0],\n  [126541, 11],\n  [126544, 0],\n  [126545, 11],\n  [126547, 0],\n  [126548, 11],\n  [126549, 0],\n  [126551, 11],\n  [126552, 0],\n  [126553, 11],\n  [126554, 0],\n  [126555, 11],\n  [126556, 0],\n  [126557, 11],\n  [126558, 0],\n  [126559, 11],\n  [126560, 0],\n  [126561, 11],\n  [126563, 0],\n  [126564, 11],\n  [126565, 0],\n  [126567, 11],\n  [126571, 0],\n  [126572, 11],\n  [126579, 0],\n  [126580, 11],\n  [126584, 0],\n  [126585, 11],\n  [126589, 0],\n  [126590, 11],\n  [126591, 0],\n  [126592, 11],\n  [126602, 0],\n  [126603, 11],\n  [126620, 0],\n  [126625, 11],\n  [126628, 0],\n  [126629, 11],\n  [126634, 0],\n  [126635, 11],\n  [126652, 0],\n  [127280, 11],\n  [127306, 0],\n  [127312, 11],\n  [127338, 0],\n  [127344, 11],\n  [127370, 0],\n  [127462, 18],\n  [127488, 0],\n  [127995, 14],\n  [128e3, 0],\n  [130032, 9],\n  [130042, 0],\n  [917505, 13],\n  [917506, 0],\n  [917536, 14],\n  [917632, 0],\n  [917760, 14],\n  [918e3, 0]\n];\n\n// ../../models/wordbreakers/build/obj/default/index.js\nfunction default_(text, options) {\n  var boundaries = findBoundaries(text, options);\n  if (boundaries.length == 0) {\n    return [];\n  }\n  var spans = [];\n  for (var i = 0; i < boundaries.length - 1; i++) {\n    var start = boundaries[i];\n    var end = boundaries[i + 1];\n    var span = new LazySpan(text, start, end);\n    if (isNonSpace(span.text, options)) {\n      spans.push(span);\n    } else if (i == boundaries.length - 2) {\n      span = new LazySpan(text, end, end);\n      spans.push(span);\n    }\n  }\n  return spans;\n}\nvar LazySpan = /* @__PURE__ */ function() {\n  function LazySpan2(source, start, end) {\n    this._source = source;\n    this.start = start;\n    this.end = end;\n  }\n  Object.defineProperty(LazySpan2.prototype, "text", {\n    get: function() {\n      return this._source.substring(this.start, this.end);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(LazySpan2.prototype, "length", {\n    get: function() {\n      return this.end - this.start;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  return LazySpan2;\n}();\nvar BreakerContext = function() {\n  function BreakerContext2(text, options, prop1, prop2, prop3, prop4) {\n    this.lookbehind = 19;\n    this.left = 19;\n    this.right = 19;\n    this.text = text;\n    this.options = options;\n    if (arguments.length == 3) {\n      this.lookahead = this.wordbreakPropertyAt(prop1);\n    } else {\n      this.lookbehind = prop1;\n      this.left = prop2;\n      this.right = prop3;\n      this.lookahead = prop4;\n    }\n  }\n  BreakerContext2.prototype.next = function(lookaheadPos) {\n    var newLookahead = this.wordbreakPropertyAt(lookaheadPos);\n    return new BreakerContext2(this.text, this.options, this.left, this.right, this.lookahead, newLookahead);\n  };\n  BreakerContext2.prototype.ignoringRight = function(lookaheadPos) {\n    var newLookahead = this.wordbreakPropertyAt(lookaheadPos);\n    return new BreakerContext2(this.text, this.options, this.lookbehind, this.left, this.lookahead, newLookahead);\n  };\n  BreakerContext2.prototype.ignoringLookahead = function(lookaheadPos) {\n    var newLookahead = this.wordbreakPropertyAt(lookaheadPos);\n    return new BreakerContext2(this.text, this.options, this.lookbehind, this.left, this.right, newLookahead);\n  };\n  BreakerContext2.prototype.wordbreakPropertyAt = function(pos) {\n    if (pos < 0) {\n      return 19;\n    } else if (pos >= this.text.length) {\n      return 20;\n    } else if (isStartOfSurrogatePair(this.text[pos])) {\n      return property(this.text[pos] + this.text[pos + 1]);\n    }\n    return property(this.text[pos], this.options);\n  };\n  BreakerContext2.prototype.match = function(lookbehindSet, leftSet, rightSet, lookaheadSet) {\n    var _a, _b, _c, _d;\n    var result = (_a = lookbehindSet === null || lookbehindSet === void 0 ? void 0 : lookbehindSet.includes(this.lookbehind)) !== null && _a !== void 0 ? _a : true;\n    result = result && ((_b = leftSet === null || leftSet === void 0 ? void 0 : leftSet.includes(this.left)) !== null && _b !== void 0 ? _b : true);\n    result = result && ((_c = rightSet === null || rightSet === void 0 ? void 0 : rightSet.includes(this.right)) !== null && _c !== void 0 ? _c : true);\n    return result && ((_d = lookaheadSet === null || lookaheadSet === void 0 ? void 0 : lookaheadSet.includes(this.lookahead)) !== null && _d !== void 0 ? _d : true);\n  };\n  BreakerContext2.prototype.propertyMatch = function(lookbehindSet, leftSet, rightSet, lookaheadSet) {\n    var _this = this;\n    var propMapper = function(name) {\n      return propertyVal(name, _this.options);\n    };\n    return this.match(lookbehindSet === null || lookbehindSet === void 0 ? void 0 : lookbehindSet.map(propMapper), leftSet === null || leftSet === void 0 ? void 0 : leftSet.map(propMapper), rightSet === null || rightSet === void 0 ? void 0 : rightSet.map(propMapper), lookaheadSet === null || lookaheadSet === void 0 ? void 0 : lookaheadSet.map(propMapper));\n  };\n  return BreakerContext2;\n}();\nfunction isNonSpace(chunk, options) {\n  return !Array.from(chunk).map(function(char) {\n    return property(char, options);\n  }).every(function(wb) {\n    return wb === 3 || wb === 1 || wb === 2 || wb === 4;\n  });\n}\nfunction findBoundaries(text, options) {\n  var _a, e_1, _b;\n  if (text.length === 0) {\n    return [];\n  }\n  if (options && !options.rules) {\n    options.rules = [];\n  }\n  var boundaries = [];\n  var rightPos;\n  var lookaheadPos = 0;\n  var state = new BreakerContext(text, options, lookaheadPos);\n  var nConsecutiveRegionalIndicators = 0;\n  do {\n    rightPos = lookaheadPos;\n    lookaheadPos = positionAfter(lookaheadPos);\n    state = state.next(lookaheadPos);\n    if (state.match(null, [19], null, null)) {\n      boundaries.push(rightPos);\n      continue;\n    }\n    if (state.match(null, null, [20], null)) {\n      boundaries.push(rightPos);\n      break;\n    }\n    if (state.match(null, [3], [1], null)) {\n      continue;\n    }\n    var NEWLINE_SET = [2, 3, 1];\n    if (state.match(null, NEWLINE_SET, null, null)) {\n      boundaries.push(rightPos);\n      continue;\n    }\n    if (state.match(null, null, NEWLINE_SET, null)) {\n      boundaries.push(rightPos);\n      continue;\n    }\n    if (state.match(null, [4], [4], null)) {\n      continue;\n    }\n    var SET_WB4_IGNORE = [13, 14, 16];\n    while (state.match(null, null, SET_WB4_IGNORE, null)) {\n      _a = (0, build_exports.__read)([lookaheadPos, positionAfter(lookaheadPos)], 2), rightPos = _a[0], lookaheadPos = _a[1];\n      state = state.ignoringRight(lookaheadPos);\n    }\n    if (state.right === 20) {\n      boundaries.push(rightPos);\n      break;\n    }\n    while (state.match(null, null, null, SET_WB4_IGNORE)) {\n      lookaheadPos = positionAfter(lookaheadPos);\n      state = state.ignoringLookahead(lookaheadPos);\n    }\n    var SET_AHLETTER = [11, 15];\n    var SET_MIDNUMLETQ = [8, 6];\n    if (options === null || options === void 0 ? void 0 : options.rules) {\n      var customMatch = false;\n      try {\n        for (var _c = (e_1 = void 0, (0, build_exports.__values)(options.rules)), _d = _c.next(); !_d.done; _d = _c.next()) {\n          var rule = _d.value;\n          customMatch = rule.match(state);\n          if (customMatch) {\n            if (rule.breakIfMatch) {\n              boundaries.push(rightPos);\n            }\n            break;\n          }\n        }\n      } catch (e_1_1) {\n        e_1 = { error: e_1_1 };\n      } finally {\n        try {\n          if (_d && !_d.done && (_b = _c.return))\n            _b.call(_c);\n        } finally {\n          if (e_1)\n            throw e_1.error;\n        }\n      }\n      if (customMatch) {\n        continue;\n      }\n    }\n    if (state.match(null, SET_AHLETTER, SET_AHLETTER, null)) {\n      continue;\n    }\n    var SET_ALL_MIDLETTER = [10].concat(SET_MIDNUMLETQ);\n    if (state.match(null, SET_AHLETTER, SET_ALL_MIDLETTER, SET_AHLETTER)) {\n      continue;\n    }\n    if (state.match(SET_AHLETTER, SET_ALL_MIDLETTER, SET_AHLETTER, null)) {\n      continue;\n    }\n    if (state.match(null, [15], [6], null)) {\n      continue;\n    }\n    if (state.match(null, [15], [5], [15])) {\n      continue;\n    }\n    if (state.match([15], [5], [15], null)) {\n      continue;\n    }\n    if (state.match(null, [9], [9], null)) {\n      continue;\n    }\n    if (state.match(null, SET_AHLETTER, [9], null)) {\n      continue;\n    }\n    if (state.match(null, [9], SET_AHLETTER, null)) {\n      continue;\n    }\n    var SET_ALL_MIDNUM = [7].concat(SET_MIDNUMLETQ);\n    if (state.match([9], SET_ALL_MIDNUM, [9], null)) {\n      continue;\n    }\n    if (state.match(null, [9], SET_ALL_MIDNUM, [9])) {\n      continue;\n    }\n    if (state.match(null, [17], [17], null)) {\n      continue;\n    }\n    var SET_NUM_KAT_LET = [17, 9].concat(SET_AHLETTER);\n    if (state.match(null, SET_NUM_KAT_LET, [12], null)) {\n      continue;\n    }\n    if (state.match(null, [12], [12], null)) {\n      continue;\n    }\n    if (state.match(null, [12], SET_NUM_KAT_LET, null)) {\n      continue;\n    }\n    if (state.right === 18) {\n      nConsecutiveRegionalIndicators += 1;\n      if (nConsecutiveRegionalIndicators % 2 == 1) {\n        continue;\n      }\n    } else {\n      nConsecutiveRegionalIndicators = 0;\n    }\n    boundaries.push(rightPos);\n  } while (rightPos < text.length);\n  return boundaries;\n  function positionAfter(pos) {\n    if (pos >= text.length) {\n      return text.length;\n    } else if (isStartOfSurrogatePair(text[pos])) {\n      return pos + 2;\n    }\n    return pos + 1;\n  }\n}\nfunction isStartOfSurrogatePair(character) {\n  var codeUnit = character.charCodeAt(0);\n  return codeUnit >= 55296 && codeUnit <= 56319;\n}\nfunction property(character, options) {\n  if (options === null || options === void 0 ? void 0 : options.propertyMapping) {\n    var propName = options.propertyMapping(character);\n    if (propName) {\n      return propertyVal(propName, options);\n    }\n  }\n  var codepoint = character.codePointAt(0);\n  return searchForProperty(codepoint, 0, WORD_BREAK_PROPERTY.length - 1);\n}\nfunction propertyVal(propName, options) {\n  var _a, _b;\n  var matcher = function(name) {\n    return name.toLowerCase() == propName.toLowerCase();\n  };\n  var customIndex = (_b = (_a = options === null || options === void 0 ? void 0 : options.customProperties) === null || _a === void 0 ? void 0 : _a.findIndex(matcher)) !== null && _b !== void 0 ? _b : -1;\n  return customIndex != -1 ? -customIndex - 1 : propertyMap.findIndex(matcher);\n}\nfunction searchForProperty(codePoint, left, right) {\n  if (right < left) {\n    return 0;\n  }\n  var midpoint = left + ~~((right - left) / 2);\n  var candidate = WORD_BREAK_PROPERTY[midpoint];\n  var nextRange = WORD_BREAK_PROPERTY[midpoint + 1];\n  var startOfNextRange = nextRange ? nextRange[0] : Infinity;\n  if (codePoint < candidate[0]) {\n    return searchForProperty(codePoint, left, midpoint - 1);\n  } else if (codePoint >= startOfNextRange) {\n    return searchForProperty(codePoint, midpoint + 1, right);\n  }\n  return candidate[1];\n}\n\n// ../../models/templates/build/obj/trie-model.js\nvar MAX_SUGGESTIONS = 12;\nvar TrieModel = /* @__PURE__ */ function() {\n  function TrieModel2(trieData, options) {\n    if (options === void 0) {\n      options = {};\n    }\n    this.languageUsesCasing = options.languageUsesCasing;\n    this.applyCasing = options.applyCasing;\n    this._trie = new Trie(trieData["root"], trieData["totalWeight"], options.searchTermToKey || defaultSearchTermToKey);\n    this.breakWords = options.wordBreaker || default_;\n    this.punctuation = options.punctuation;\n  }\n  TrieModel2.prototype.configure = function(capabilities) {\n    var _a;\n    return this.configuration = {\n      leftContextCodePoints: capabilities.maxLeftContextCodePoints,\n      rightContextCodePoints: (_a = capabilities.maxRightContextCodePoints) !== null && _a !== void 0 ? _a : 0\n    };\n  };\n  TrieModel2.prototype.toKey = function(text) {\n    return this._trie.toKey(text);\n  };\n  TrieModel2.prototype.predict = function(transform, context) {\n    if (!transform.insert && !context.left && !context.right && context.startOfBuffer && context.endOfBuffer) {\n      return makeDistribution(this._trie.firstN(MAX_SUGGESTIONS).map(function(_a) {\n        var text = _a.text, p = _a.p;\n        return {\n          transform: {\n            insert: text,\n            deleteLeft: 0\n          },\n          displayAs: text,\n          p: p\n        };\n      }));\n    }\n    var newContext = applyTransform(transform, context);\n    var leftDelOffset = transform.deleteLeft - transform.insert.kmwLength();\n    var prefix = getLastPreCaretToken(this.breakWords, newContext);\n    return makeDistribution(this._trie.lookup(prefix).map(function(_a) {\n      var text = _a.text, p = _a.p;\n      return transformToSuggestion({\n        insert: text,\n        deleteLeft: leftDelOffset + prefix.kmwLength()\n      }, p);\n    }));\n    function makeDistribution(suggestions) {\n      var e_1, _a;\n      var distribution = [];\n      try {\n        for (var suggestions_1 = (0, build_exports.__values)(suggestions), suggestions_1_1 = suggestions_1.next(); !suggestions_1_1.done; suggestions_1_1 = suggestions_1.next()) {\n          var s = suggestions_1_1.value;\n          distribution.push({ sample: s, p: s.p });\n        }\n      } catch (e_1_1) {\n        e_1 = { error: e_1_1 };\n      } finally {\n        try {\n          if (suggestions_1_1 && !suggestions_1_1.done && (_a = suggestions_1.return))\n            _a.call(suggestions_1);\n        } finally {\n          if (e_1)\n            throw e_1.error;\n        }\n      }\n      return distribution;\n    }\n  };\n  Object.defineProperty(TrieModel2.prototype, "wordbreaker", {\n    get: function() {\n      return this.breakWords;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  TrieModel2.prototype.traverseFromRoot = function() {\n    return new TrieModel2.Traversal(this._trie["root"], "");\n  };\n  TrieModel2.Traversal = function() {\n    function class_1(root, prefix) {\n      this.root = root;\n      this.prefix = prefix;\n    }\n    class_1.prototype.children = function() {\n      var root, _loop_1, this_1, _a, _b, entry, e_2_1, prefix_1, children, _loop_2, children_1, children_1_1, key, e_3_1;\n      var e_2, _c, e_3, _d;\n      return (0, build_exports.__generator)(this, function(_e) {\n        switch (_e.label) {\n          case 0:\n            root = this.root;\n            if (!(root.type == "internal"))\n              return [3, 9];\n            _loop_1 = function(entry2) {\n              var entryNode, internalNode_1, _loop_3, _f, _g, lowSurrogate, e_4_1, fullText, prefix_2, prefix_3;\n              var e_4, _h;\n              return (0, build_exports.__generator)(this, function(_j) {\n                switch (_j.label) {\n                  case 0:\n                    entryNode = root.children[entry2];\n                    if (!isHighSurrogate(entry2))\n                      return [3, 12];\n                    if (!(entryNode.type == "internal"))\n                      return [3, 9];\n                    internalNode_1 = entryNode;\n                    _loop_3 = function(lowSurrogate2) {\n                      var prefix;\n                      return (0, build_exports.__generator)(this, function(_k) {\n                        switch (_k.label) {\n                          case 0:\n                            prefix = this_1.prefix + entry2 + lowSurrogate2;\n                            return [4, {\n                              char: entry2 + lowSurrogate2,\n                              traversal: function() {\n                                return new TrieModel2.Traversal(internalNode_1.children[lowSurrogate2], prefix);\n                              }\n                            }];\n                          case 1:\n                            _k.sent();\n                            return [2];\n                        }\n                      });\n                    };\n                    _j.label = 1;\n                  case 1:\n                    _j.trys.push([1, 6, 7, 8]);\n                    _f = (e_4 = void 0, (0, build_exports.__values)(internalNode_1.values)), _g = _f.next();\n                    _j.label = 2;\n                  case 2:\n                    if (!!_g.done)\n                      return [3, 5];\n                    lowSurrogate = _g.value;\n                    return [5, _loop_3(lowSurrogate)];\n                  case 3:\n                    _j.sent();\n                    _j.label = 4;\n                  case 4:\n                    _g = _f.next();\n                    return [3, 2];\n                  case 5:\n                    return [3, 8];\n                  case 6:\n                    e_4_1 = _j.sent();\n                    e_4 = { error: e_4_1 };\n                    return [3, 8];\n                  case 7:\n                    try {\n                      if (_g && !_g.done && (_h = _f.return))\n                        _h.call(_f);\n                    } finally {\n                      if (e_4)\n                        throw e_4.error;\n                    }\n                    return [7];\n                  case 8:\n                    return [3, 11];\n                  case 9:\n                    fullText = entryNode.entries[0].key;\n                    entry2 = entry2 + fullText[this_1.prefix.length + 1];\n                    prefix_2 = this_1.prefix + entry2;\n                    return [4, {\n                      char: entry2,\n                      traversal: function() {\n                        return new TrieModel2.Traversal(entryNode, prefix_2);\n                      }\n                    }];\n                  case 10:\n                    _j.sent();\n                    _j.label = 11;\n                  case 11:\n                    return [3, 16];\n                  case 12:\n                    if (!isSentinel(entry2))\n                      return [3, 13];\n                    return [2, "continue"];\n                  case 13:\n                    if (!!entry2)\n                      return [3, 14];\n                    return [2, "continue"];\n                  case 14:\n                    prefix_3 = this_1.prefix + entry2;\n                    return [4, {\n                      char: entry2,\n                      traversal: function() {\n                        return new TrieModel2.Traversal(entryNode, prefix_3);\n                      }\n                    }];\n                  case 15:\n                    _j.sent();\n                    _j.label = 16;\n                  case 16:\n                    return [2];\n                }\n              });\n            };\n            this_1 = this;\n            _e.label = 1;\n          case 1:\n            _e.trys.push([1, 6, 7, 8]);\n            _a = (0, build_exports.__values)(root.values), _b = _a.next();\n            _e.label = 2;\n          case 2:\n            if (!!_b.done)\n              return [3, 5];\n            entry = _b.value;\n            return [5, _loop_1(entry)];\n          case 3:\n            _e.sent();\n            _e.label = 4;\n          case 4:\n            _b = _a.next();\n            return [3, 2];\n          case 5:\n            return [3, 8];\n          case 6:\n            e_2_1 = _e.sent();\n            e_2 = { error: e_2_1 };\n            return [3, 8];\n          case 7:\n            try {\n              if (_b && !_b.done && (_c = _a.return))\n                _c.call(_a);\n            } finally {\n              if (e_2)\n                throw e_2.error;\n            }\n            return [7];\n          case 8:\n            return [2];\n          case 9:\n            prefix_1 = this.prefix;\n            children = root.entries.filter(function(entry2) {\n              return entry2.key != prefix_1 && prefix_1.length < entry2.key.length;\n            });\n            _loop_2 = function(key2) {\n              var nodeKey;\n              return (0, build_exports.__generator)(this, function(_l) {\n                switch (_l.label) {\n                  case 0:\n                    nodeKey = key2[prefix_1.length];\n                    if (isHighSurrogate(nodeKey)) {\n                      nodeKey = nodeKey + key2[prefix_1.length + 1];\n                    }\n                    return [4, {\n                      char: nodeKey,\n                      traversal: function() {\n                        return new TrieModel2.Traversal(root, prefix_1 + nodeKey);\n                      }\n                    }];\n                  case 1:\n                    _l.sent();\n                    return [2];\n                }\n              });\n            };\n            _e.label = 10;\n          case 10:\n            _e.trys.push([10, 15, 16, 17]);\n            children_1 = (0, build_exports.__values)(children), children_1_1 = children_1.next();\n            _e.label = 11;\n          case 11:\n            if (!!children_1_1.done)\n              return [3, 14];\n            key = children_1_1.value.key;\n            return [5, _loop_2(key)];\n          case 12:\n            _e.sent();\n            _e.label = 13;\n          case 13:\n            children_1_1 = children_1.next();\n            return [3, 11];\n          case 14:\n            return [3, 17];\n          case 15:\n            e_3_1 = _e.sent();\n            e_3 = { error: e_3_1 };\n            return [3, 17];\n          case 16:\n            try {\n              if (children_1_1 && !children_1_1.done && (_d = children_1.return))\n                _d.call(children_1);\n            } finally {\n              if (e_3)\n                throw e_3.error;\n            }\n            return [7];\n          case 17:\n            ;\n            return [2];\n        }\n      });\n    };\n    Object.defineProperty(class_1.prototype, "entries", {\n      get: function() {\n        if (this.root.type == "leaf") {\n          var prefix_4 = this.prefix;\n          var matches = this.root.entries.filter(function(entry) {\n            return entry.key == prefix_4;\n          });\n          return matches.map(function(value) {\n            return value.content;\n          });\n        } else {\n          var matchingLeaf = this.root.children[SENTINEL_CODE_UNIT];\n          if (matchingLeaf && matchingLeaf.type == "leaf") {\n            return matchingLeaf.entries.map(function(value) {\n              return value.content;\n            });\n          } else {\n            return [];\n          }\n        }\n      },\n      enumerable: false,\n      configurable: true\n    });\n    return class_1;\n  }();\n  return TrieModel2;\n}();\nvar trie_model_default = TrieModel;\nvar Trie = function() {\n  function Trie2(root, totalWeight, wordform2key) {\n    this.root = root;\n    this.toKey = wordform2key;\n    this.totalWeight = totalWeight;\n  }\n  Trie2.prototype.lookup = function(prefix) {\n    var searchKey = this.toKey(prefix);\n    var lowestCommonNode = findPrefix(this.root, searchKey);\n    if (lowestCommonNode === null) {\n      return [];\n    }\n    return getSortedResults(lowestCommonNode, searchKey, this.totalWeight);\n  };\n  Trie2.prototype.firstN = function(n) {\n    return getSortedResults(this.root, "", this.totalWeight, n);\n  };\n  return Trie2;\n}();\nfunction findPrefix(node, key, index) {\n  if (index === void 0) {\n    index = 0;\n  }\n  if (node.type === "leaf" || index === key.length) {\n    return node;\n  }\n  var char = key[index];\n  if (node.children[char]) {\n    return findPrefix(node.children[char], key, index + 1);\n  }\n  return null;\n}\nfunction getSortedResults(node, prefix, N, limit) {\n  var e_5, _a;\n  if (limit === void 0) {\n    limit = MAX_SUGGESTIONS;\n  }\n  var queue = new priority_queue_default(function(a, b) {\n    return (b ? b.weight : 0) - (a ? a.weight : 0);\n  });\n  var results = [];\n  if (node.type === "leaf") {\n    try {\n      for (var _b = (0, build_exports.__values)(node.entries), _c = _b.next(); !_c.done; _c = _b.next()) {\n        var item = _c.value;\n        if (item.key.indexOf(prefix) == 0) {\n          var content = item.content, weight = item.weight;\n          results.push({\n            text: content,\n            p: weight / N\n          });\n          if (results.length >= limit) {\n            return results;\n          }\n        }\n      }\n    } catch (e_5_1) {\n      e_5 = { error: e_5_1 };\n    } finally {\n      try {\n        if (_c && !_c.done && (_a = _b.return))\n          _a.call(_b);\n      } finally {\n        if (e_5)\n          throw e_5.error;\n      }\n    }\n  } else {\n    queue.enqueue(node);\n    var next = void 0;\n    var _loop_4 = function() {\n      if (isNode(next)) {\n        if (next.type === "leaf") {\n          queue.enqueueAll(next.entries);\n        } else {\n          var internal_1 = next;\n          queue.enqueueAll(next.values.map(function(char) {\n            return internal_1.children[char];\n          }));\n        }\n      } else {\n        results.push({\n          text: next.content,\n          p: next.weight / N\n        });\n        if (results.length >= limit) {\n          return { value: results };\n        }\n      }\n    };\n    while (next = queue.dequeue()) {\n      var state_1 = _loop_4();\n      if (typeof state_1 === "object")\n        return state_1.value;\n    }\n  }\n  return results;\n}\nfunction isNode(x) {\n  return "type" in x;\n}\nfunction defaultSearchTermToKey(wordform) {\n  return wordform.normalize("NFD").replace(/[\\u0300-\\u036f]/g, "").toLowerCase();\n}\n\n// ../../models/templates/build/obj/index.js\nextendString();\n\n// build/obj/models/dummy-model.js\nvar DummyModel = /* @__PURE__ */ function() {\n  function DummyModel2(options) {\n    options = options || {};\n    this._futureSuggestions = options.futureSuggestions ? options.futureSuggestions.slice() : [];\n    if (options.punctuation) {\n      this.punctuation = options.punctuation;\n    }\n  }\n  DummyModel2.prototype.configure = function(capabilities) {\n    this.configuration = {\n      leftContextCodePoints: capabilities.maxLeftContextCodePoints,\n      rightContextCodePoints: capabilities.maxRightContextCodePoints\n    };\n    return this.configuration;\n  };\n  DummyModel2.prototype.predict = function(transform, context, injectedSuggestions) {\n    var makeUniformDistribution = function(suggestions) {\n      var e_1, _a;\n      var distribution = [];\n      var n = suggestions.length;\n      try {\n        for (var suggestions_1 = (0, build_exports.__values)(suggestions), suggestions_1_1 = suggestions_1.next(); !suggestions_1_1.done; suggestions_1_1 = suggestions_1.next()) {\n          var s = suggestions_1_1.value;\n          distribution.push({ sample: s, p: 1 });\n        }\n      } catch (e_1_1) {\n        e_1 = { error: e_1_1 };\n      } finally {\n        try {\n          if (suggestions_1_1 && !suggestions_1_1.done && (_a = suggestions_1.return))\n            _a.call(suggestions_1);\n        } finally {\n          if (e_1)\n            throw e_1.error;\n        }\n      }\n      return distribution;\n    };\n    if (injectedSuggestions) {\n      return makeUniformDistribution(injectedSuggestions);\n    }\n    var currentSet = this._futureSuggestions.shift();\n    if (!currentSet) {\n      return [];\n    } else {\n      return makeUniformDistribution(currentSet);\n    }\n  };\n  return DummyModel2;\n}();\nvar dummy_model_default = DummyModel;\n\n// build/obj/correction/index.js\nvar correction_exports = {};\n__export(correction_exports, {\n  ClassicalDistanceCalculation: function() {\n    return ClassicalDistanceCalculation;\n  },\n  ContextTracker: function() {\n    return ContextTracker;\n  },\n  QUEUE_NODE_COMPARATOR: function() {\n    return QUEUE_NODE_COMPARATOR;\n  },\n  SearchNode: function() {\n    return SearchNode;\n  },\n  SearchResult: function() {\n    return SearchResult;\n  },\n  SearchSpace: function() {\n    return SearchSpace;\n  },\n  TrackedContextState: function() {\n    return TrackedContextState;\n  },\n  TrackedContextSuggestion: function() {\n    return TrackedContextSuggestion;\n  },\n  TrackedContextToken: function() {\n    return TrackedContextToken;\n  }\n});\n\n// build/obj/correction/classical-calculation.js\nvar ClassicalDistanceCalculation = /* @__PURE__ */ function() {\n  function ClassicalDistanceCalculation2(other) {\n    this.diagonalWidth = 2;\n    this.inputSequence = [];\n    this.matchSequence = [];\n    if (other) {\n      var rowCount = other.resolvedDistances.length;\n      this.resolvedDistances = Array(rowCount);\n      for (var r = 0; r < rowCount; r++) {\n        this.resolvedDistances[r] = Array.from(other.resolvedDistances[r]);\n      }\n      this.inputSequence = Array.from(other.inputSequence);\n      this.matchSequence = Array.from(other.matchSequence);\n      this.diagonalWidth = other.diagonalWidth;\n    } else {\n      this.resolvedDistances = [];\n    }\n  }\n  ClassicalDistanceCalculation2.prototype.getTrueIndex = function(r, c, width) {\n    var retVal = {\n      row: r,\n      col: c - r + width,\n      sparse: false\n    };\n    if (retVal.col < 0 || retVal.col > 2 * width) {\n      retVal.sparse = true;\n    }\n    return retVal;\n  };\n  ClassicalDistanceCalculation2.prototype.getCostAt = function(i, j, width) {\n    if (width === void 0) {\n      width = this.diagonalWidth;\n    }\n    if (i < 0 || j < 0) {\n      if (i == -1 && j >= -1) {\n        return j + 1;\n      } else if (j == -1 && i >= -1) {\n        return i + 1;\n      }\n      return Number.MAX_VALUE;\n    }\n    var index = this.getTrueIndex(i, j, width);\n    return index.sparse ? Number.MAX_VALUE : this.resolvedDistances[index.row][index.col];\n  };\n  ClassicalDistanceCalculation2.prototype.getFinalCost = function() {\n    var buffer = this;\n    var val = buffer.getHeuristicFinalCost();\n    while (val > buffer.diagonalWidth) {\n      buffer = buffer.increaseMaxDistance();\n      val = buffer.getHeuristicFinalCost();\n    }\n    return val;\n  };\n  ClassicalDistanceCalculation2.prototype.getHeuristicFinalCost = function() {\n    return this.getCostAt(this.inputSequence.length - 1, this.matchSequence.length - 1);\n  };\n  ClassicalDistanceCalculation2.prototype.hasFinalCostWithin = function(threshold) {\n    var buffer = this;\n    var val = buffer.getHeuristicFinalCost();\n    var guaranteedBound = this.diagonalWidth;\n    do {\n      if (val <= threshold) {\n        return true;\n      } else if (guaranteedBound < threshold) {\n        buffer = buffer.increaseMaxDistance();\n        guaranteedBound++;\n        val = buffer.getHeuristicFinalCost();\n      } else {\n        break;\n      }\n    } while (true);\n    return false;\n  };\n  ClassicalDistanceCalculation2.prototype.editPath = function(row, col) {\n    if (row === void 0) {\n      row = this.inputSequence.length - 1;\n    }\n    if (col === void 0) {\n      col = this.matchSequence.length - 1;\n    }\n    var currentCost = this.getCostAt(row, col);\n    var ops = null;\n    var parent = null;\n    var insertParentCost = this.getCostAt(row, col - 1);\n    var deleteParentCost = this.getCostAt(row - 1, col);\n    var substitutionParentCost = this.getCostAt(row - 1, col - 1);\n    var _a = (0, build_exports.__read)(ClassicalDistanceCalculation2.getTransposeParent(this, row, col), 2), lastInputIndex = _a[0], lastMatchIndex = _a[1];\n    if (lastInputIndex >= 0 && lastMatchIndex >= 0) {\n      var expectedCost = 1;\n      ops = ["transpose-start"];\n      if (lastInputIndex != row - 1) {\n        var count = row - lastInputIndex - 1;\n        ops = ops.concat(Array(count).fill("transpose-delete"));\n        expectedCost += count;\n      } else {\n        var count = col - lastMatchIndex - 1;\n        ops = ops.concat(Array(count).fill("transpose-insert"));\n        expectedCost += count;\n      }\n      ops.push("transpose-end");\n      if (this.getCostAt(lastInputIndex - 1, lastMatchIndex - 1) != currentCost - expectedCost) {\n        ops = null;\n      }\n      parent = [lastInputIndex - 1, lastMatchIndex - 1];\n    }\n    if (ops) {\n    } else if (substitutionParentCost == currentCost - 1) {\n      ops = ["substitute"];\n      parent = [row - 1, col - 1];\n    } else if (insertParentCost == currentCost - 1) {\n      ops = ["insert"];\n      parent = [row, col - 1];\n    } else if (deleteParentCost == currentCost - 1) {\n      ops = ["delete"];\n      parent = [row - 1, col];\n    } else {\n      ops = ["match"];\n      parent = [row - 1, col - 1];\n    }\n    if (parent[0] >= 0 && parent[1] >= 0) {\n      return this.editPath(parent[0], parent[1]).concat(ops);\n    } else {\n      if (parent[0] > -1) {\n        return Array(parent[0] + 1).fill("delete").concat(ops);\n      } else if (parent[1] > -1) {\n        return Array(parent[1] + 1).fill("insert").concat(ops);\n      } else {\n        return ops;\n      }\n    }\n  };\n  ClassicalDistanceCalculation2.getTransposeParent = function(buffer, r, c) {\n    if (r < 0 || c < 0 || buffer.inputSequence[r].key == buffer.matchSequence[c].key) {\n      return [-1, -1];\n    }\n    var lastInputIndex = -1;\n    for (var i = r - 1; i >= 0; i--) {\n      if (buffer.inputSequence[i].key == buffer.matchSequence[c].key) {\n        lastInputIndex = i;\n        break;\n      }\n    }\n    var lastMatchIndex = -1;\n    for (var i = c - 1; i >= 0; i--) {\n      if (buffer.matchSequence[i].key == buffer.inputSequence[r].key) {\n        lastMatchIndex = i;\n        break;\n      }\n    }\n    return [lastInputIndex, lastMatchIndex];\n  };\n  ClassicalDistanceCalculation2.initialCostAt = function(buffer, r, c, insertCost, deleteCost) {\n    var baseSubstitutionCost = buffer.inputSequence[r].key == buffer.matchSequence[c].key ? 0 : 1;\n    var substitutionCost = buffer.getCostAt(r - 1, c - 1) + baseSubstitutionCost;\n    var insertionCost = insertCost || buffer.getCostAt(r, c - 1) + 1;\n    var deletionCost = deleteCost || buffer.getCostAt(r - 1, c) + 1;\n    var transpositionCost = Number.MAX_VALUE;\n    if (r > 0 && c > 0) {\n      var _a = (0, build_exports.__read)(ClassicalDistanceCalculation2.getTransposeParent(buffer, r, c), 2), lastInputIndex = _a[0], lastMatchIndex = _a[1];\n      transpositionCost = buffer.getCostAt(lastInputIndex - 1, lastMatchIndex - 1) + (r - lastInputIndex - 1) + 1 + (c - lastMatchIndex - 1);\n    }\n    return Math.min(substitutionCost, deletionCost, insertionCost, transpositionCost);\n  };\n  ClassicalDistanceCalculation2.prototype.getSubset = function(inputLength, matchLength) {\n    var trimmedInstance = new ClassicalDistanceCalculation2(this);\n    if (inputLength > this.inputSequence.length || matchLength > this.matchSequence.length) {\n      throw "Invalid dimensions specified for trim operation";\n    }\n    trimmedInstance.inputSequence.splice(inputLength);\n    trimmedInstance.matchSequence.splice(matchLength);\n    trimmedInstance.resolvedDistances.splice(inputLength);\n    var finalTrueIndex = this.getTrueIndex(inputLength - 1, matchLength - 1, this.diagonalWidth);\n    for (var diagonalIndex = finalTrueIndex.col; diagonalIndex <= 2 * this.diagonalWidth; diagonalIndex++) {\n      var row = finalTrueIndex.row - (diagonalIndex - finalTrueIndex.col);\n      if (row < 0) {\n        break;\n      }\n      if (diagonalIndex < 0) {\n        trimmedInstance.resolvedDistances[row] = Array(2 * trimmedInstance.diagonalWidth + 1).fill(Number.MAX_VALUE);\n      } else {\n        var newCount = 2 * this.diagonalWidth - diagonalIndex;\n        var keptEntries = trimmedInstance.resolvedDistances[row].splice(0, diagonalIndex + 1);\n        var newEntries = Array(newCount).fill(Number.MAX_VALUE);\n        trimmedInstance.resolvedDistances[row] = keptEntries.concat(newEntries);\n      }\n    }\n    return trimmedInstance;\n  };\n  ClassicalDistanceCalculation2.forDiagonalOfAxis = function(diagonalWidth, centerIndex, axisCap, closure) {\n    var diagonalCap = axisCap - centerIndex < diagonalWidth ? axisCap - centerIndex + diagonalWidth : 2 * diagonalWidth;\n    var startOffset = centerIndex - diagonalWidth;\n    var diagonalStart = startOffset < 0 ? 0 : startOffset;\n    for (var diagonalIndex = diagonalStart - startOffset; diagonalIndex <= diagonalCap; diagonalIndex++) {\n      closure(startOffset + diagonalIndex, diagonalIndex);\n    }\n  };\n  ClassicalDistanceCalculation2.prototype.addInputChar = function(token) {\n    var returnBuffer = new ClassicalDistanceCalculation2(this);\n    var r = returnBuffer.inputSequence.length;\n    returnBuffer.inputSequence.push(token);\n    var row = Array(2 * returnBuffer.diagonalWidth + 1).fill(Number.MAX_VALUE);\n    returnBuffer.resolvedDistances[r] = row;\n    if (returnBuffer.matchSequence.length == 0) {\n      return returnBuffer;\n    }\n    ClassicalDistanceCalculation2.forDiagonalOfAxis(returnBuffer.diagonalWidth, r, returnBuffer.matchSequence.length - 1, function(c, diagIndex) {\n      row[diagIndex] = ClassicalDistanceCalculation2.initialCostAt(returnBuffer, r, c);\n    });\n    return returnBuffer;\n  };\n  ClassicalDistanceCalculation2.prototype.addMatchChar = function(token) {\n    var returnBuffer = new ClassicalDistanceCalculation2(this);\n    var c = returnBuffer.matchSequence.length;\n    returnBuffer.matchSequence.push(token);\n    if (returnBuffer.inputSequence.length == 0) {\n      return returnBuffer;\n    }\n    ClassicalDistanceCalculation2.forDiagonalOfAxis(returnBuffer.diagonalWidth, c, returnBuffer.inputSequence.length - 1, function(r, diagIndex) {\n      var row = returnBuffer.resolvedDistances[r];\n      row[2 * returnBuffer.diagonalWidth - diagIndex] = ClassicalDistanceCalculation2.initialCostAt(returnBuffer, r, c);\n    });\n    return returnBuffer;\n  };\n  ClassicalDistanceCalculation2.prototype.increaseMaxDistance = function() {\n    var returnBuffer = new ClassicalDistanceCalculation2(this);\n    returnBuffer.diagonalWidth++;\n    if (returnBuffer.inputSequence.length < 1 || returnBuffer.matchSequence.length < 1) {\n      return returnBuffer;\n    }\n    function forPossibleTranspositionsInDiagonal(startPos, fixedChar, lookupString, closure) {\n      var diagonalCap = 2 * (returnBuffer.diagonalWidth - 1);\n      var axisCap = lookupString.length - 1;\n      diagonalCap = diagonalCap < axisCap - startPos ? diagonalCap : axisCap - startPos;\n      for (var diagonalIndex = 0; diagonalIndex <= diagonalCap; diagonalIndex++) {\n        if (fixedChar == lookupString[startPos + diagonalIndex].key) {\n          closure(startPos + diagonalIndex, diagonalIndex);\n        }\n      }\n    }\n    var _loop_1 = function(r2) {\n      var leftCell = Number.MAX_VALUE;\n      var c = r2 - returnBuffer.diagonalWidth;\n      if (c >= 0) {\n        var insertionCost_1 = c == 0 ? r2 + 2 : Number.MAX_VALUE;\n        leftCell = ClassicalDistanceCalculation2.initialCostAt(returnBuffer, r2, c, insertionCost_1, void 0);\n        var addedCost_1 = leftCell;\n        if (c < returnBuffer.matchSequence.length - 1) {\n          ClassicalDistanceCalculation2.propagateUpdateFrom(returnBuffer, r2, c + 1, addedCost_1 + 1, 0);\n          var transposeRow_1 = r2 + 2;\n          if (r2 + 2 < this_1.inputSequence.length) {\n            var rowChar = returnBuffer.inputSequence[r2 + 1].key;\n            forPossibleTranspositionsInDiagonal(c + 3, rowChar, returnBuffer.matchSequence, function(axisIndex, diagIndex) {\n              ClassicalDistanceCalculation2.propagateUpdateFrom(returnBuffer, transposeRow_1, axisIndex, addedCost_1 + diagIndex + 2, diagIndex);\n            });\n          }\n        }\n      }\n      var rightCell = Number.MAX_VALUE;\n      c = r2 + returnBuffer.diagonalWidth;\n      if (c < returnBuffer.matchSequence.length) {\n        var deletionCost = r2 == 0 ? c + 2 : Number.MAX_VALUE;\n        insertionCost = returnBuffer.getCostAt(r2, c - 1, this_1.diagonalWidth) + 1;\n        rightCell = ClassicalDistanceCalculation2.initialCostAt(returnBuffer, r2, c, insertionCost, deletionCost);\n        var addedCost_2 = rightCell;\n        if (r2 < returnBuffer.inputSequence.length - 1) {\n          ClassicalDistanceCalculation2.propagateUpdateFrom(returnBuffer, r2 + 1, c, addedCost_2 + 1, 2 * this_1.diagonalWidth);\n          var transposeCol_1 = c + 2;\n          if (c + 2 < this_1.matchSequence.length) {\n            var colChar = returnBuffer.matchSequence[r2 + 1].key;\n            forPossibleTranspositionsInDiagonal(r2 + 3, colChar, returnBuffer.inputSequence, function(axisIndex, diagIndex) {\n              var diagColIndex = 2 * (returnBuffer.diagonalWidth - 1) - diagIndex;\n              ClassicalDistanceCalculation2.propagateUpdateFrom(returnBuffer, axisIndex, transposeCol_1, addedCost_2 + diagIndex + 2, diagColIndex);\n            });\n          }\n        }\n      }\n      returnBuffer.resolvedDistances[r2] = [leftCell].concat(returnBuffer.resolvedDistances[r2], rightCell);\n    };\n    var this_1 = this, insertionCost;\n    for (var r = 0; r < returnBuffer.inputSequence.length; r++) {\n      _loop_1(r);\n    }\n    return returnBuffer;\n  };\n  ClassicalDistanceCalculation2.propagateUpdateFrom = function(buffer, r, c, value, diagonalIndex) {\n    if (value < buffer.resolvedDistances[r][diagonalIndex]) {\n      buffer.resolvedDistances[r][diagonalIndex] = value;\n    } else {\n      return;\n    }\n    var internalRow = r < buffer.inputSequence.length - 1;\n    var internalCol = c < buffer.matchSequence.length - 1;\n    if (diagonalIndex < 2 * (buffer.diagonalWidth - 1) && internalCol) {\n      var updateCost = value + 1;\n      this.propagateUpdateFrom(buffer, r, c + 1, updateCost, diagonalIndex + 1);\n    }\n    if (diagonalIndex > 0 && internalRow) {\n      var updateCost = value + 1;\n      this.propagateUpdateFrom(buffer, r + 1, c, updateCost, diagonalIndex - 1);\n    }\n    if (internalRow && internalCol) {\n      var updateCost = value + (buffer.inputSequence[r + 1].key == buffer.matchSequence[c + 1].key ? 0 : 1);\n      this.propagateUpdateFrom(buffer, r + 1, c + 1, updateCost, diagonalIndex);\n      var nextInputIndex = -1;\n      for (var i = r + 2; i < buffer.inputSequence.length; i++) {\n        if (buffer.inputSequence[i].key == buffer.matchSequence[c + 1].key) {\n          nextInputIndex = i;\n          break;\n        }\n      }\n      var nextMatchIndex = -1;\n      for (var i = c + 2; i < buffer.matchSequence.length; i++) {\n        if (buffer.matchSequence[i].key == buffer.inputSequence[r + 1].key) {\n          nextMatchIndex = i;\n          break;\n        }\n      }\n      if (nextInputIndex > 0 && nextMatchIndex > 0) {\n        var transpositionCost = value + (nextInputIndex - r - 2) + 1 + (nextMatchIndex - c - 2);\n        this.propagateUpdateFrom(buffer, nextInputIndex, nextMatchIndex, transpositionCost, buffer.diagonalWidth - 1 + nextMatchIndex - nextInputIndex);\n      }\n    }\n  };\n  Object.defineProperty(ClassicalDistanceCalculation2.prototype, "mapKey", {\n    get: function() {\n      var inputString = this.inputSequence.map(function(value) {\n        return value.key;\n      }).join("");\n      var matchString = this.matchSequence.map(function(value) {\n        return value.key;\n      }).join("");\n      return inputString + SENTINEL_CODE_UNIT + matchString + SENTINEL_CODE_UNIT + this.diagonalWidth;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(ClassicalDistanceCalculation2.prototype, "lastInputEntry", {\n    get: function() {\n      return this.inputSequence[this.inputSequence.length - 1];\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(ClassicalDistanceCalculation2.prototype, "lastMatchEntry", {\n    get: function() {\n      return this.matchSequence[this.matchSequence.length - 1];\n    },\n    enumerable: false,\n    configurable: true\n  });\n  ClassicalDistanceCalculation2.computeDistance = function(input, match, bandSize) {\n    if (bandSize === void 0) {\n      bandSize = 1;\n    }\n    var buffer = new ClassicalDistanceCalculation2();\n    bandSize = bandSize || 1;\n    buffer.diagonalWidth = bandSize;\n    for (var i = 0; i < input.length; i++) {\n      buffer = buffer.addInputChar(input[i]);\n    }\n    for (var j = 0; j < match.length; j++) {\n      buffer = buffer.addMatchChar(match[j]);\n    }\n    return buffer;\n  };\n  return ClassicalDistanceCalculation2;\n}();\n\n// build/obj/correction/distance-modeler.js\nvar QUEUE_NODE_COMPARATOR = function(arg1, arg2) {\n  return arg1.currentCost - arg2.currentCost;\n};\nvar SearchNode = /* @__PURE__ */ function() {\n  function SearchNode2(rootTraversal, toKey) {\n    this.toKey = function(str) {\n      return str;\n    };\n    toKey = toKey || function(x) {\n      return x;\n    };\n    if (rootTraversal instanceof SearchNode2) {\n      var priorNode = rootTraversal;\n      this.calculation = priorNode.calculation;\n      this.currentTraversal = priorNode.currentTraversal;\n      this.priorInput = priorNode.priorInput;\n      this.toKey = priorNode.toKey;\n    } else {\n      this.calculation = new ClassicalDistanceCalculation();\n      this.currentTraversal = rootTraversal;\n      this.priorInput = [];\n      this.toKey = toKey;\n    }\n  }\n  Object.defineProperty(SearchNode2.prototype, "knownCost", {\n    get: function() {\n      return this.calculation.getHeuristicFinalCost();\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(SearchNode2.prototype, "inputSamplingCost", {\n    get: function() {\n      if (this._inputCost !== void 0) {\n        return this._inputCost;\n      } else {\n        var MIN_P_1 = SearchSpace.MIN_KEYSTROKE_PROBABILITY;\n        this._inputCost = this.priorInput.map(function(mass) {\n          return mass.p > MIN_P_1 ? mass.p : MIN_P_1;\n        }).reduce(function(previous, current) {\n          return previous - Math.log(current);\n        }, 0);\n        return this._inputCost;\n      }\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(SearchNode2.prototype, "currentCost", {\n    get: function() {\n      return SearchSpace.EDIT_DISTANCE_COST_SCALE * this.knownCost + this.inputSamplingCost;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  SearchNode2.prototype.buildInsertionEdges = function() {\n    var e_1, _a;\n    var edges = [];\n    try {\n      for (var _b = (0, build_exports.__values)(this.currentTraversal.children()), _c = _b.next(); !_c.done; _c = _b.next()) {\n        var lexicalChild = _c.value;\n        var traversal = lexicalChild.traversal();\n        var matchToken = {\n          key: lexicalChild.char,\n          traversal: traversal\n        };\n        var childCalc = this.calculation.addMatchChar(matchToken);\n        var searchChild = new SearchNode2(this);\n        searchChild.calculation = childCalc;\n        searchChild.priorInput = this.priorInput;\n        searchChild.currentTraversal = traversal;\n        edges.push(searchChild);\n      }\n    } catch (e_1_1) {\n      e_1 = { error: e_1_1 };\n    } finally {\n      try {\n        if (_c && !_c.done && (_a = _b.return))\n          _a.call(_b);\n      } finally {\n        if (e_1)\n          throw e_1.error;\n      }\n    }\n    return edges;\n  };\n  SearchNode2.prototype.buildDeletionEdges = function(inputDistribution) {\n    var e_2, _a;\n    var edges = [];\n    try {\n      for (var inputDistribution_1 = (0, build_exports.__values)(inputDistribution), inputDistribution_1_1 = inputDistribution_1.next(); !inputDistribution_1_1.done; inputDistribution_1_1 = inputDistribution_1.next()) {\n        var probMass = inputDistribution_1_1.value;\n        if (probMass.p < inputDistribution[0].p * Math.exp(-SearchSpace.EDIT_DISTANCE_COST_SCALE)) {\n          break;\n        }\n        var edgeCalc = this.calculation;\n        var transform = probMass.sample;\n        if (transform.deleteLeft) {\n          edgeCalc = edgeCalc.getSubset(edgeCalc.inputSequence.length - transform.deleteLeft, edgeCalc.matchSequence.length);\n        }\n        var inputPath = Array.from(this.priorInput);\n        inputPath.push(probMass);\n        for (var i = 0; i < transform.insert.length; i++) {\n          var char = transform.insert[i];\n          if (isHighSurrogate(char)) {\n            i++;\n            char = char + transform.insert[i];\n          }\n          var keyedChar = this.toKey(char);\n          if (keyedChar) {\n            edgeCalc = edgeCalc.addInputChar({ key: keyedChar });\n          }\n        }\n        var childEdge = new SearchNode2(this);\n        childEdge.calculation = edgeCalc;\n        childEdge.priorInput = inputPath;\n        edges.push(childEdge);\n      }\n    } catch (e_2_1) {\n      e_2 = { error: e_2_1 };\n    } finally {\n      try {\n        if (inputDistribution_1_1 && !inputDistribution_1_1.done && (_a = inputDistribution_1.return))\n          _a.call(inputDistribution_1);\n      } finally {\n        if (e_2)\n          throw e_2.error;\n      }\n    }\n    return edges;\n  };\n  SearchNode2.prototype.buildSubstitutionEdges = function(inputDistribution) {\n    var e_3, _a, e_4, _b;\n    var intermediateEdges = this.buildDeletionEdges(inputDistribution);\n    var edges = [];\n    try {\n      for (var _c = (0, build_exports.__values)(this.currentTraversal.children()), _d = _c.next(); !_d.done; _d = _c.next()) {\n        var lexicalChild = _d.value;\n        try {\n          for (var intermediateEdges_1 = (e_4 = void 0, (0, build_exports.__values)(intermediateEdges)), intermediateEdges_1_1 = intermediateEdges_1.next(); !intermediateEdges_1_1.done; intermediateEdges_1_1 = intermediateEdges_1.next()) {\n            var edge = intermediateEdges_1_1.value;\n            var traversal = lexicalChild.traversal();\n            var matchToken = {\n              key: lexicalChild.char,\n              traversal: traversal\n            };\n            var childCalc = edge.calculation.addMatchChar(matchToken);\n            var searchChild = new SearchNode2(this);\n            searchChild.calculation = childCalc;\n            searchChild.priorInput = edge.priorInput;\n            searchChild.currentTraversal = traversal;\n            edges.push(searchChild);\n          }\n        } catch (e_4_1) {\n          e_4 = { error: e_4_1 };\n        } finally {\n          try {\n            if (intermediateEdges_1_1 && !intermediateEdges_1_1.done && (_b = intermediateEdges_1.return))\n              _b.call(intermediateEdges_1);\n          } finally {\n            if (e_4)\n              throw e_4.error;\n          }\n        }\n      }\n    } catch (e_3_1) {\n      e_3 = { error: e_3_1 };\n    } finally {\n      try {\n        if (_d && !_d.done && (_a = _c.return))\n          _a.call(_c);\n      } finally {\n        if (e_3)\n          throw e_3.error;\n      }\n    }\n    return edges;\n  };\n  Object.defineProperty(SearchNode2.prototype, "mapKey", {\n    get: function() {\n      var inputString = this.priorInput.map(function(value) {\n        return "+" + value.sample.insert + "-" + value.sample.deleteLeft;\n      }).join("");\n      var matchString = this.calculation.matchSequence.map(function(value) {\n        return value.key;\n      }).join("");\n      return inputString + SENTINEL_CODE_UNIT + matchString;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(SearchNode2.prototype, "isFullReplacement", {\n    get: function() {\n      return this.knownCost && this.knownCost == this.priorInput.length;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  return SearchNode2;\n}();\nvar SearchSpaceTier = function() {\n  function SearchSpaceTier2(index, initialEdges) {\n    this.processed = [];\n    this.index = index;\n    this.correctionQueue = new priority_queue_default(QUEUE_NODE_COMPARATOR, initialEdges);\n  }\n  SearchSpaceTier2.prototype.increaseMaxEditDistance = function() {\n    var entries = this.correctionQueue.toArray();\n    entries.forEach(function(edge) {\n      edge.calculation = edge.calculation.increaseMaxDistance();\n    });\n    this.correctionQueue = new priority_queue_default(QUEUE_NODE_COMPARATOR, entries);\n  };\n  return SearchSpaceTier2;\n}();\nvar SearchResult = function() {\n  function SearchResult2(node) {\n    this.resultNode = node;\n  }\n  Object.defineProperty(SearchResult2.prototype, "inputSequence", {\n    get: function() {\n      return this.resultNode.priorInput;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(SearchResult2.prototype, "matchSequence", {\n    get: function() {\n      return this.resultNode.calculation.matchSequence;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  ;\n  Object.defineProperty(SearchResult2.prototype, "matchString", {\n    get: function() {\n      return this.matchSequence.map(function(value) {\n        return value.key;\n      }).join("");\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(SearchResult2.prototype, "knownCost", {\n    get: function() {\n      return this.resultNode.knownCost;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(SearchResult2.prototype, "inputSamplingCost", {\n    get: function() {\n      return this.resultNode.inputSamplingCost;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(SearchResult2.prototype, "totalCost", {\n    get: function() {\n      return this.resultNode.currentCost;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(SearchResult2.prototype, "finalTraversal", {\n    get: function() {\n      return this.resultNode.currentTraversal;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  return SearchResult2;\n}();\nvar SearchSpace = function() {\n  function SearchSpace2(model) {\n    this.tierOrdering = [];\n    this.inputSequence = [];\n    this.minInputCost = [];\n    this.returnedValues = {};\n    this.processedEdgeSet = {};\n    if (!model) {\n      throw "The LexicalModel parameter must not be null / undefined.";\n    } else if (!model.traverseFromRoot) {\n      throw "The provided model does not implement the `traverseFromRoot` function, which is needed to support robust correction searching.";\n    }\n    this.buildQueueSpaceComparator();\n    this.selectionQueue = new priority_queue_default(this.QUEUE_SPACE_COMPARATOR);\n    this.rootNode = new SearchNode(model.traverseFromRoot(), model.toKey ? model.toKey.bind(model) : null);\n    this.completedPaths = [this.rootNode];\n    var baseTier = new SearchSpaceTier(0, [this.rootNode]);\n    this.tierOrdering.push(baseTier);\n    this.selectionQueue.enqueue(baseTier);\n  }\n  SearchSpace2.prototype.buildQueueSpaceComparator = function() {\n    var searchSpace = this;\n    this.QUEUE_SPACE_COMPARATOR = function(space1, space2) {\n      var node1 = space1.correctionQueue.peek();\n      var node2 = space2.correctionQueue.peek();\n      var index1 = space1.index;\n      var index2 = space2.index;\n      var tierMinCost = 0;\n      var sign = 1;\n      if (index2 < index1) {\n        var temp = index2;\n        index2 = index1;\n        index1 = temp;\n        sign = -1;\n      }\n      for (var i = index1; i < index2; i++) {\n        tierMinCost = tierMinCost + searchSpace.minInputCost[i];\n      }\n      if (node1 && node2) {\n        return node1.currentCost - node2.currentCost + sign * tierMinCost;\n      } else if (node2) {\n        return 1;\n      } else {\n        return -1;\n      }\n    };\n  };\n  SearchSpace2.prototype.increaseMaxEditDistance = function() {\n    this.tierOrdering.forEach(function(tier) {\n      tier.increaseMaxEditDistance();\n    });\n  };\n  SearchSpace2.prototype.addInput = function(inputDistribution) {\n    this.inputSequence.push(inputDistribution);\n    this.minInputCost.push(-Math.log(inputDistribution[0].p));\n    var newlyAvailableEdges = [];\n    var batches = this.completedPaths.map(function(node) {\n      var deletions = node.buildDeletionEdges(inputDistribution);\n      var substitutions = node.buildSubstitutionEdges(inputDistribution);\n      return deletions.concat(substitutions);\n    });\n    this.completedPaths = [];\n    this.returnedValues = {};\n    batches.forEach(function(batch) {\n      newlyAvailableEdges = newlyAvailableEdges.concat(batch);\n    });\n    var tier = new SearchSpaceTier(this.tierOrdering.length, newlyAvailableEdges);\n    this.tierOrdering.push(tier);\n    this.selectionQueue.enqueue(tier);\n  };\n  SearchSpace2.prototype.removeLastInput = function() {\n  };\n  SearchSpace2.prototype.hasNextMatchEntry = function() {\n    var topQueue = this.selectionQueue.peek();\n    if (topQueue) {\n      return topQueue.correctionQueue.count > 0;\n    } else {\n      return false;\n    }\n  };\n  SearchSpace2.prototype.handleNextNode = function() {\n    if (!this.hasNextMatchEntry()) {\n      return { type: "none" };\n    }\n    var bestTier = this.selectionQueue.dequeue();\n    var currentNode = bestTier.correctionQueue.dequeue();\n    var unmatchedResult = {\n      type: "intermediate",\n      cost: currentNode.currentCost\n    };\n    if (this.processedEdgeSet[currentNode.mapKey]) {\n      this.selectionQueue.enqueue(bestTier);\n      return unmatchedResult;\n    } else {\n      this.processedEdgeSet[currentNode.mapKey] = true;\n    }\n    var substitutionsOnly = false;\n    if (currentNode.knownCost > 2) {\n      return unmatchedResult;\n    } else if (currentNode.knownCost == 2) {\n      substitutionsOnly = true;\n    }\n    var tierMinCost = 0;\n    for (var i = 0; i <= bestTier.index; i++) {\n      tierMinCost += this.minInputCost[i];\n    }\n    if (currentNode.currentCost > tierMinCost + 2.5 * SearchSpace2.EDIT_DISTANCE_COST_SCALE) {\n      return unmatchedResult;\n    }\n    if (!substitutionsOnly) {\n      var insertionEdges = currentNode.buildInsertionEdges();\n      bestTier.correctionQueue.enqueueAll(insertionEdges);\n    }\n    if (bestTier.index == this.tierOrdering.length - 1) {\n      this.completedPaths.push(currentNode);\n      this.selectionQueue.enqueue(bestTier);\n      return {\n        type: "complete",\n        cost: currentNode.currentCost,\n        finalNode: currentNode\n      };\n    } else {\n      var nextTier = this.tierOrdering[bestTier.index + 1];\n      var inputIndex = nextTier.index;\n      var deletionEdges = [];\n      if (!substitutionsOnly) {\n        deletionEdges = currentNode.buildDeletionEdges(this.inputSequence[inputIndex - 1]);\n      }\n      var substitutionEdges = currentNode.buildSubstitutionEdges(this.inputSequence[inputIndex - 1]);\n      nextTier.correctionQueue.enqueueAll(deletionEdges.concat(substitutionEdges));\n      this.selectionQueue = new priority_queue_default(this.QUEUE_SPACE_COMPARATOR, this.tierOrdering);\n    }\n    return unmatchedResult;\n  };\n  SearchSpace2.prototype.getBestMatches = function(waitMillis) {\n    var searchSpace, currentReturns, maxTime, ExecutionTimer, BatchingAssistant, batcher, timer, returnedValues, preprocessedQueue, entry, batch_1, batch_2, timedOut, newResult, batch_3, batch;\n    return (0, build_exports.__generator)(this, function(_a) {\n      switch (_a.label) {\n        case 0:\n          searchSpace = this;\n          currentReturns = {};\n          if (waitMillis == 0) {\n            maxTime = Infinity;\n          } else if (waitMillis == void 0 || Number.isNaN(waitMillis)) {\n            maxTime = SearchSpace2.DEFAULT_ALLOTTED_CORRECTION_TIME_INTERVAL;\n          } else {\n            maxTime = waitMillis;\n          }\n          ExecutionTimer = function() {\n            function ExecutionTimer2(maxExecutionTime, maxTrueTime) {\n              this.largestIntervals = [0];\n              this.loopStart = this.start = Date.now();\n              this.maxExecutionTime = maxExecutionTime;\n              this.maxTrueTime = maxTrueTime;\n            }\n            ExecutionTimer2.prototype.startLoop = function() {\n              this.loopStart = Date.now();\n            };\n            ExecutionTimer2.prototype.markIteration = function() {\n              var now = Date.now();\n              var delta = now - this.loopStart;\n              this.executionTime += delta;\n              if (delta) {\n                if (this.largestIntervals.length > 2 && delta > this.largestIntervals[0]) {\n                  this.largestIntervals[0] = delta;\n                } else {\n                  this.largestIntervals.push(delta);\n                }\n                this.largestIntervals.sort();\n                this.updateOutliers();\n              }\n            };\n            ExecutionTimer2.prototype.updateOutliers = function() {\n              if (this.largestIntervals.length > 2) {\n                if (this.largestIntervals[2] >= 2 * (this.largestIntervals[0] + this.largestIntervals[1])) {\n                  this.executionTime -= this.largestIntervals[2];\n                  this.largestIntervals.pop();\n                }\n              }\n            };\n            ExecutionTimer2.prototype.shouldTimeout = function() {\n              var now = Date.now();\n              if (now - this.start > this.maxTrueTime) {\n                return true;\n              }\n              return this.executionTime > this.maxExecutionTime;\n            };\n            ExecutionTimer2.prototype.resetOutlierCheck = function() {\n              this.largestIntervals = [];\n            };\n            return ExecutionTimer2;\n          }();\n          BatchingAssistant = function() {\n            function BatchingAssistant2() {\n              this.currentCost = Number.MIN_SAFE_INTEGER;\n              this.entries = [];\n            }\n            BatchingAssistant2.prototype.checkAndAdd = function(entry2) {\n              var result = null;\n              if (entry2.currentCost > this.currentCost) {\n                result = this.tryFinalize();\n                this.currentCost = entry2.currentCost;\n              }\n              var outputMapKey = entry2.calculation.matchSequence.map(function(value) {\n                return value.key;\n              }).join("");\n              if (!searchSpace.returnedValues[outputMapKey]) {\n                searchSpace.returnedValues[outputMapKey] = entry2;\n              }\n              if (!currentReturns[outputMapKey]) {\n                this.entries.push(new SearchResult(entry2));\n                currentReturns[outputMapKey] = entry2;\n              }\n              return result;\n            };\n            BatchingAssistant2.prototype.tryFinalize = function() {\n              var result = null;\n              if (this.entries.length > 0) {\n                result = this.entries;\n                this.entries = [];\n              }\n              return result;\n            };\n            return BatchingAssistant2;\n          }();\n          batcher = new BatchingAssistant();\n          timer = new ExecutionTimer(maxTime * 1.5, maxTime);\n          returnedValues = Object.values(this.returnedValues);\n          if (!(returnedValues.length > 0))\n            return [3, 6];\n          preprocessedQueue = new priority_queue_default(QUEUE_NODE_COMPARATOR, returnedValues);\n          timer.startLoop();\n          _a.label = 1;\n        case 1:\n          if (!(preprocessedQueue.count > 0))\n            return [3, 4];\n          entry = preprocessedQueue.dequeue();\n          if (entry.isFullReplacement) {\n            return [3, 1];\n          }\n          batch_1 = batcher.checkAndAdd(entry);\n          timer.markIteration();\n          if (!batch_1)\n            return [3, 3];\n          return [4, batch_1];\n        case 2:\n          _a.sent();\n          _a.label = 3;\n        case 3:\n          return [3, 1];\n        case 4:\n          batch_2 = batcher.tryFinalize();\n          if (!batch_2)\n            return [3, 6];\n          return [4, batch_2];\n        case 5:\n          _a.sent();\n          _a.label = 6;\n        case 6:\n          timer.resetOutlierCheck();\n          timer.startLoop();\n          timedOut = false;\n          _a.label = 7;\n        case 7:\n          newResult = void 0;\n          do {\n            newResult = this.handleNextNode();\n            timer.markIteration();\n            if (timer.shouldTimeout()) {\n              timedOut = true;\n            }\n          } while (!timedOut && newResult.type == "intermediate");\n          batch_3 = void 0;\n          if (newResult.type == "none") {\n            return [3, 10];\n          } else if (newResult.type == "complete") {\n            if (newResult.finalNode.isFullReplacement) {\n              return [3, 10];\n            }\n            batch_3 = batcher.checkAndAdd(newResult.finalNode);\n          }\n          if (!batch_3)\n            return [3, 9];\n          return [4, batch_3];\n        case 8:\n          _a.sent();\n          _a.label = 9;\n        case 9:\n          if (!timedOut && this.hasNextMatchEntry())\n            return [3, 7];\n          _a.label = 10;\n        case 10:\n          batch = batcher.tryFinalize();\n          if (!batch)\n            return [3, 12];\n          return [4, batch];\n        case 11:\n          _a.sent();\n          _a.label = 12;\n        case 12:\n          return [2, null];\n      }\n    });\n  };\n  SearchSpace2.EDIT_DISTANCE_COST_SCALE = 5;\n  SearchSpace2.MIN_KEYSTROKE_PROBABILITY = 1e-4;\n  SearchSpace2.DEFAULT_ALLOTTED_CORRECTION_TIME_INTERVAL = 33;\n  return SearchSpace2;\n}();\n\n// build/obj/transformUtils.js\nvar TransformUtils = /* @__PURE__ */ function() {\n  function TransformUtils2() {\n  }\n  TransformUtils2.isWhitespace = function(transform) {\n    var whitespaceRemover = /^[\\u0009\\u000A\\u000D\\u0020\\u00a0\\u1680\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u200b\\u2028\\u2029\\u202f\\u205f\\u3000]+$/i;\n    return transform.insert.match(whitespaceRemover) != null;\n  };\n  TransformUtils2.isBackspace = function(transform) {\n    return transform.insert == "" && transform.deleteLeft > 0 && !transform.deleteRight;\n  };\n  TransformUtils2.isEmpty = function(transform) {\n    return transform.insert == "" && transform.deleteLeft == 0 && !transform.deleteRight;\n  };\n  return TransformUtils2;\n}();\nvar transformUtils_default = TransformUtils;\n\n// build/obj/correction/context-tracker.js\nfunction textToCharTransforms(text, transformId) {\n  var perCharTransforms = [];\n  for (var i = 0; i < text.kmwLength(); i++) {\n    var char = text.kmwCharAt(i);\n    var transform = {\n      insert: char,\n      deleteLeft: 0,\n      id: transformId\n    };\n    perCharTransforms.push(transform);\n  }\n  return perCharTransforms;\n}\nvar TrackedContextSuggestion = /* @__PURE__ */ function() {\n  function TrackedContextSuggestion2() {\n  }\n  return TrackedContextSuggestion2;\n}();\nvar TrackedContextToken = function() {\n  function TrackedContextToken2() {\n    this.transformDistributions = [];\n    this.activeReplacementId = -1;\n  }\n  Object.defineProperty(TrackedContextToken2.prototype, "currentText", {\n    get: function() {\n      if (this.replacementText === void 0 || this.replacementText === null) {\n        return this.raw;\n      } else {\n        return this.replacementText;\n      }\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(TrackedContextToken2.prototype, "replacement", {\n    get: function() {\n      var replacementId = this.activeReplacementId;\n      return this.replacements.find(function(replacement) {\n        return replacement.suggestion.id == replacementId;\n      });\n    },\n    enumerable: false,\n    configurable: true\n  });\n  TrackedContextToken2.prototype.revert = function() {\n    delete this.activeReplacementId;\n  };\n  return TrackedContextToken2;\n}();\nvar TrackedContextState = function() {\n  function TrackedContextState2(obj) {\n    this.searchSpace = [];\n    if (obj instanceof TrackedContextState2) {\n      var source = obj;\n      this.tokens = source.tokens.map(function(token) {\n        var copy = new TrackedContextToken();\n        copy.raw = token.raw;\n        copy.replacements = token.replacements;\n        copy.activeReplacementId = token.activeReplacementId;\n        copy.transformDistributions = token.transformDistributions;\n        if (token.replacementText) {\n          copy.replacementText = token.replacementText;\n        }\n        return copy;\n      });\n      this.searchSpace = obj.searchSpace;\n      this.indexOffset = 0;\n      this.model = obj.model;\n    } else {\n      var lexicalModel = obj;\n      this.tokens = [];\n      this.indexOffset = Number.MIN_SAFE_INTEGER;\n      this.model = lexicalModel;\n      if (lexicalModel && lexicalModel.traverseFromRoot) {\n        this.searchSpace = [new SearchSpace(lexicalModel)];\n      }\n    }\n  }\n  Object.defineProperty(TrackedContextState2.prototype, "head", {\n    get: function() {\n      return this.tokens[0];\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(TrackedContextState2.prototype, "tail", {\n    get: function() {\n      return this.tokens[this.tokens.length - 1];\n    },\n    enumerable: false,\n    configurable: true\n  });\n  TrackedContextState2.prototype.popHead = function() {\n    this.tokens.splice(0, 2);\n    this.indexOffset -= 1;\n  };\n  TrackedContextState2.prototype.pushTail = function(token) {\n    if (this.model && this.model.traverseFromRoot) {\n      this.searchSpace = [new SearchSpace(this.model)];\n    } else {\n      this.searchSpace = [];\n    }\n    this.tokens.push(token);\n    var state = this;\n    if (state.searchSpace.length > 0) {\n      token.transformDistributions.forEach(function(distrib) {\n        return state.searchSpace[0].addInput(distrib);\n      });\n    }\n  };\n  TrackedContextState2.prototype.pushWhitespaceToTail = function(transformDistribution) {\n    if (transformDistribution === void 0) {\n      transformDistribution = null;\n    }\n    var whitespaceToken = new TrackedContextToken();\n    whitespaceToken.transformDistributions = transformDistribution ? [transformDistribution] : [];\n    whitespaceToken.raw = null;\n    this.tokens.push(whitespaceToken);\n  };\n  TrackedContextState2.prototype.replaceTailForBackspace = function(tokenText, transformId) {\n    this.tokens.pop();\n    var backspacedTokenContext = textToCharTransforms(tokenText, transformId).map(function(transform) {\n      return [{ sample: transform, p: 1 }];\n    });\n    var compactedToken = new TrackedContextToken();\n    compactedToken.raw = tokenText;\n    compactedToken.transformDistributions = backspacedTokenContext;\n    this.pushTail(compactedToken);\n  };\n  TrackedContextState2.prototype.updateTail = function(transformDistribution, tokenText) {\n    var editedToken = this.tail;\n    tokenText = tokenText || (tokenText === "" ? "" : editedToken.raw);\n    if (transformDistribution && transformDistribution.length > 0) {\n      editedToken.transformDistributions.push(transformDistribution);\n      if (this.searchSpace) {\n        this.searchSpace.forEach(function(space) {\n          return space.addInput(transformDistribution);\n        });\n      }\n    }\n    editedToken.raw = tokenText;\n  };\n  TrackedContextState2.prototype.toRawTokenization = function() {\n    var e_1, _a;\n    var sequence = [];\n    try {\n      for (var _b = (0, build_exports.__values)(this.tokens), _c = _b.next(); !_c.done; _c = _b.next()) {\n        var token = _c.value;\n        if (token.currentText !== null) {\n          sequence.push(token.currentText);\n        }\n      }\n    } catch (e_1_1) {\n      e_1 = { error: e_1_1 };\n    } finally {\n      try {\n        if (_c && !_c.done && (_a = _b.return))\n          _a.call(_b);\n      } finally {\n        if (e_1)\n          throw e_1.error;\n      }\n    }\n    return sequence;\n  };\n  return TrackedContextState2;\n}();\nvar CircularArray = function() {\n  function CircularArray2(size) {\n    if (size === void 0) {\n      size = CircularArray2.DEFAULT_ARRAY_SIZE;\n    }\n    this.currentHead = 0;\n    this.currentTail = 0;\n    this.circle = Array(size);\n  }\n  Object.defineProperty(CircularArray2.prototype, "count", {\n    get: function() {\n      var diff = this.currentHead - this.currentTail;\n      if (diff < 0) {\n        diff = diff + this.circle.length;\n      }\n      return diff;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(CircularArray2.prototype, "maxCount", {\n    get: function() {\n      return this.circle.length;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(CircularArray2.prototype, "oldest", {\n    get: function() {\n      if (this.count == 0) {\n        return void 0;\n      }\n      return this.item(0);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(CircularArray2.prototype, "newest", {\n    get: function() {\n      if (this.count == 0) {\n        return void 0;\n      }\n      return this.item(this.count - 1);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  CircularArray2.prototype.enqueue = function(item) {\n    var prevItem = null;\n    var nextHead = (this.currentHead + 1) % this.maxCount;\n    if (nextHead == this.currentTail) {\n      prevItem = this.circle[this.currentTail];\n      this.currentTail = (this.currentTail + 1) % this.maxCount;\n    }\n    this.circle[this.currentHead] = item;\n    this.currentHead = nextHead;\n    return prevItem;\n  };\n  CircularArray2.prototype.dequeue = function() {\n    if (this.currentTail == this.currentHead) {\n      return null;\n    } else {\n      var item = this.circle[this.currentTail];\n      this.currentTail = (this.currentTail + 1) % this.maxCount;\n      return item;\n    }\n  };\n  CircularArray2.prototype.popNewest = function() {\n    if (this.currentTail == this.currentHead) {\n      return null;\n    } else {\n      var item = this.circle[this.currentHead];\n      this.currentHead = (this.currentHead - 1 + this.maxCount) % this.maxCount;\n      return item;\n    }\n  };\n  CircularArray2.prototype.item = function(index) {\n    if (index >= this.count) {\n      throw "Invalid array index";\n    }\n    var mappedIndex = (this.currentTail + index) % this.maxCount;\n    return this.circle[mappedIndex];\n  };\n  CircularArray2.DEFAULT_ARRAY_SIZE = 5;\n  return CircularArray2;\n}();\nvar ContextTracker = function(_super) {\n  (0, build_exports.__extends)(ContextTracker2, _super);\n  function ContextTracker2() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  ContextTracker2.attemptMatchContext = function(tokenizedContext, matchState, transformDistribution) {\n    var matchContext = matchState.toRawTokenization();\n    var mapping = ClassicalDistanceCalculation.computeDistance(matchContext.map(function(value) {\n      return { key: value };\n    }), tokenizedContext.map(function(value) {\n      return { key: value };\n    }), 1);\n    var editPath = mapping.editPath();\n    var poppedHead = false;\n    var pushedTail = false;\n    if (editPath.length > 1) {\n      if (editPath[0] == "insert" && !(editPath[1] == "substitute" && editPath.length == 2) || editPath[0].indexOf("transpose") >= 0) {\n        return null;\n      } else if (editPath[0] == "delete") {\n        poppedHead = true;\n      }\n    }\n    var tailIndex = editPath.length - 1;\n    var ignorePenultimateMatch = false;\n    if (editPath[tailIndex] == "delete" || editPath[0].indexOf("transpose") >= 0) {\n      return null;\n    } else if (editPath[tailIndex] == "insert") {\n      pushedTail = true;\n    } else if (tailIndex > 0 && editPath[tailIndex - 1] == "insert" && editPath[tailIndex] == "substitute") {\n      pushedTail = true;\n      ignorePenultimateMatch = true;\n    }\n    if (tailIndex > 0 && editPath[tailIndex - 1] == "delete" && editPath[tailIndex] == "substitute") {\n      return null;\n    }\n    for (var index = 1; index < editPath.length - (ignorePenultimateMatch ? 2 : 1); index++) {\n      if (editPath[index] != "match") {\n        return null;\n      }\n    }\n    var state;\n    if (pushedTail) {\n      if (ignorePenultimateMatch) {\n        matchState.tail.replacementText = tokenizedContext[tokenizedContext.length - 2];\n      }\n      state = new TrackedContextState(matchState);\n    } else {\n      state = matchState;\n    }\n    var hasDistribution = transformDistribution && Array.isArray(transformDistribution);\n    var primaryInput = hasDistribution ? transformDistribution[0].sample : null;\n    if (primaryInput && primaryInput.insert == "" && primaryInput.deleteLeft == 0 && !primaryInput.deleteRight) {\n      primaryInput = null;\n    }\n    var isWhitespace = primaryInput && transformUtils_default.isWhitespace(primaryInput);\n    var isBackspace = primaryInput && transformUtils_default.isBackspace(primaryInput);\n    var finalToken = tokenizedContext[tokenizedContext.length - 1];\n    if (editPath.length > 1) {\n      if (poppedHead) {\n        state.popHead();\n      }\n      if (pushedTail) {\n        var tokenizedTail = tokenizedContext[tokenizedContext.length - 1];\n        var pushedToken = new TrackedContextToken();\n        pushedToken.raw = tokenizedTail;\n        if (isWhitespace || !primaryInput) {\n          state.pushWhitespaceToTail(transformDistribution !== null && transformDistribution !== void 0 ? transformDistribution : []);\n          pushedToken.transformDistributions = [];\n        } else {\n          state.pushWhitespaceToTail();\n          pushedToken.transformDistributions = transformDistribution ? [transformDistribution] : [];\n        }\n        state.pushTail(pushedToken);\n      } else {\n        if (isBackspace) {\n          state.replaceTailForBackspace(finalToken, primaryInput.id);\n        } else {\n          state.updateTail(primaryInput ? transformDistribution : null, finalToken);\n        }\n      }\n    } else {\n      if (editPath[tailIndex] == "insert") {\n        var token = new TrackedContextToken();\n        token.raw = tokenizedContext[0];\n        token.transformDistributions = [transformDistribution];\n        state.pushTail(token);\n      } else {\n        if (isBackspace) {\n          state.replaceTailForBackspace(finalToken, primaryInput.id);\n        } else {\n          state.updateTail(primaryInput ? transformDistribution : null, finalToken);\n        }\n      }\n    }\n    return state;\n  };\n  ContextTracker2.modelContextState = function(tokenizedContext, transformDistribution, lexicalModel) {\n    var baseTokens = tokenizedContext.map(function(entry) {\n      var token2 = new TrackedContextToken();\n      token2.raw = entry;\n      if (token2.raw) {\n        token2.transformDistributions = textToCharTransforms(token2.raw).map(function(transform) {\n          return [{ sample: transform, p: 1 }];\n        });\n      } else {\n        token2.transformDistributions = [];\n      }\n      return token2;\n    });\n    var state = new TrackedContextState(lexicalModel);\n    if (baseTokens.length > 0) {\n      state.pushTail(baseTokens.splice(0, 1)[0]);\n    }\n    while (baseTokens.length > 0) {\n      state.pushWhitespaceToTail();\n      state.pushTail(baseTokens.splice(0, 1)[0]);\n    }\n    if (state.tokens.length == 0) {\n      var token = new TrackedContextToken();\n      token.raw = "";\n      state.pushTail(token);\n    }\n    return state;\n  };\n  ContextTracker2.prototype.analyzeState = function(model, context, transformDistribution) {\n    if (!model.traverseFromRoot) {\n      throw "This lexical model does not provide adequate data for correction algorithms and context reuse";\n    }\n    var tokenizedContext = tokenize(model.wordbreaker || default_, context);\n    if (tokenizedContext.left.length > 0) {\n      for (var i = this.count - 1; i >= 0; i--) {\n        var resultState = ContextTracker2.attemptMatchContext(tokenizedContext.left, this.item(i), transformDistribution);\n        if (resultState) {\n          resultState.taggedContext = context;\n          if (resultState != this.item(i)) {\n            this.enqueue(resultState);\n          }\n          return resultState;\n        }\n      }\n    }\n    var state = ContextTracker2.modelContextState(tokenizedContext.left, transformDistribution, model);\n    state.taggedContext = context;\n    this.enqueue(state);\n    return state;\n  };\n  return ContextTracker2;\n}(CircularArray);\n\n// build/obj/model-compositor.js\nvar ModelCompositor = /* @__PURE__ */ function() {\n  function ModelCompositor2(lexicalModel, testMode) {\n    this.SUGGESTION_ID_SEED = 0;\n    this.testMode = false;\n    this.lexicalModel = lexicalModel;\n    if (lexicalModel.traverseFromRoot) {\n      this.contextTracker = new ContextTracker();\n    }\n    this.punctuation = ModelCompositor2.determinePunctuationFromModel(lexicalModel);\n    this.testMode = !!testMode;\n  }\n  ModelCompositor2.prototype.predictFromCorrections = function(corrections, context) {\n    var e_1, _a;\n    var returnedPredictions = [];\n    var _loop_1 = function(correction_12) {\n      var predictions = this_1.lexicalModel.predict(correction_12.sample, context);\n      var predictionSet = predictions.map(function(pair) {\n        var transform = correction_12.sample;\n        var inputProb = correction_12.p;\n        if (transform.id !== void 0) {\n          pair.sample.transformId = transform.id;\n        }\n        var prediction = { sample: pair.sample, p: pair.p * inputProb };\n        return prediction;\n      }, this_1);\n      returnedPredictions = returnedPredictions.concat(predictionSet);\n    };\n    var this_1 = this;\n    try {\n      for (var corrections_1 = (0, build_exports.__values)(corrections), corrections_1_1 = corrections_1.next(); !corrections_1_1.done; corrections_1_1 = corrections_1.next()) {\n        var correction_1 = corrections_1_1.value;\n        _loop_1(correction_1);\n      }\n    } catch (e_1_1) {\n      e_1 = { error: e_1_1 };\n    } finally {\n      try {\n        if (corrections_1_1 && !corrections_1_1.done && (_a = corrections_1.return))\n          _a.call(corrections_1);\n      } finally {\n        if (e_1)\n          throw e_1.error;\n      }\n    }\n    return returnedPredictions;\n  };\n  ModelCompositor2.prototype.predict = function(transformDistribution, context) {\n    var e_2, _a, e_3, _b;\n    var suggestionDistribution = [];\n    var lexicalModel = this.lexicalModel;\n    var punctuation = this.punctuation;\n    if (!(transformDistribution instanceof Array)) {\n      transformDistribution = [{ sample: transformDistribution, p: 1 }];\n    } else if (transformDistribution.length == 0) {\n      transformDistribution.push({\n        sample: {\n          insert: "",\n          deleteLeft: 0\n        },\n        p: 1\n      });\n    }\n    var inputTransform = transformDistribution.sort(function(a, b) {\n      return b.p - a.p;\n    })[0].sample;\n    var allowSpace = transformUtils_default.isWhitespace(inputTransform);\n    var allowBksp = transformUtils_default.isBackspace(inputTransform);\n    var postContext = applyTransform(inputTransform, context);\n    var keepOptionText = this.wordbreak(postContext);\n    var keepOption = null;\n    var rawPredictions = [];\n    var prefixTransform;\n    var postContextState = null;\n    if (!this.contextTracker) {\n      var predictionRoots = void 0;\n      if (allowSpace) {\n        predictionRoots = [{ sample: inputTransform, p: 1 }];\n        prefixTransform = inputTransform;\n      } else {\n        predictionRoots = transformDistribution.map(function(alt) {\n          var transform = alt.sample;\n          if (transformUtils_default.isWhitespace(transform) && !allowSpace) {\n            return null;\n          } else if (transformUtils_default.isBackspace(transform) && !allowBksp) {\n            return null;\n          }\n          return alt;\n        });\n      }\n      predictionRoots = predictionRoots.filter(function(tuple) {\n        return !!tuple;\n      });\n      rawPredictions = this.predictFromCorrections(predictionRoots, context);\n    } else {\n      var contextState = this.contextTracker.analyzeState(this.lexicalModel, context, null);\n      postContextState = this.contextTracker.analyzeState(this.lexicalModel, postContext, !transformUtils_default.isEmpty(inputTransform) ? transformDistribution : null);\n      var searchSpace = postContextState.searchSpace[0];\n      var deleteLeft_1 = 0;\n      var postContextTokens = postContextState.tokens;\n      var postContextLength = postContextTokens.length;\n      var contextLengthDelta = postContextTokens.length - contextState.tokens.length;\n      if (postContextLength == 0 || contextLengthDelta > 0) {\n        deleteLeft_1 = 0;\n        if (transformUtils_default.isWhitespace(inputTransform)) {\n          prefixTransform = inputTransform;\n          context = postContext;\n          contextState = postContextState;\n        }\n      } else if (contextLengthDelta < 0) {\n        deleteLeft_1 = this.wordbreak(postContext).kmwLength() + inputTransform.deleteLeft;\n      } else {\n        deleteLeft_1 = this.wordbreak(context).kmwLength();\n      }\n      var tailToken = postContextTokens[postContextTokens.length - 1];\n      var isTokenStart_1 = tailToken.transformDistributions.length <= 1;\n      var bestCorrectionCost = void 0;\n      var SEARCH_TIMEOUT = this.testMode ? 0 : SearchSpace.DEFAULT_ALLOTTED_CORRECTION_TIME_INTERVAL;\n      try {\n        for (var _c = (0, build_exports.__values)(searchSpace.getBestMatches(SEARCH_TIMEOUT)), _d = _c.next(); !_d.done; _d = _c.next()) {\n          var matches = _d.value;\n          var predictionRoots = matches.map(function(match) {\n            var correction = match.matchString;\n            var finalInput;\n            if (match.inputSequence.length > 0) {\n              finalInput = match.inputSequence[match.inputSequence.length - 1].sample;\n            } else {\n              finalInput = inputTransform;\n            }\n            var correctionTransform = {\n              insert: correction,\n              deleteLeft: deleteLeft_1,\n              id: inputTransform.id\n            };\n            var rootCost = match.totalCost;\n            if (isTokenStart_1) {\n              rootCost *= ModelCompositor2.SINGLE_CHAR_KEY_PROB_EXPONENT;\n            }\n            return {\n              sample: correctionTransform,\n              p: Math.exp(-rootCost)\n            };\n          }, this);\n          var predictions = this.predictFromCorrections(predictionRoots, context);\n          if (predictions.length > 0 && bestCorrectionCost === void 0) {\n            bestCorrectionCost = -Math.log(predictionRoots[0].p);\n          }\n          rawPredictions = rawPredictions.concat(predictions);\n          var correctionCost = matches[0].totalCost;\n          if (correctionCost >= bestCorrectionCost + 8) {\n            break;\n          } else if (rawPredictions.length >= ModelCompositor2.MAX_SUGGESTIONS) {\n            if (correctionCost >= bestCorrectionCost + 4) {\n              break;\n            } else {\n              rawPredictions.sort(function(a, b) {\n                return b.p - a.p;\n              });\n              if (rawPredictions[ModelCompositor2.MAX_SUGGESTIONS - 1].p > Math.exp(-correctionCost)) {\n                break;\n              }\n            }\n          }\n        }\n      } catch (e_2_1) {\n        e_2 = { error: e_2_1 };\n      } finally {\n        try {\n          if (_d && !_d.done && (_a = _c.return))\n            _a.call(_c);\n        } finally {\n          if (e_2)\n            throw e_2.error;\n        }\n      }\n    }\n    var suggestionDistribMap = {};\n    var currentCasing = null;\n    if (lexicalModel.languageUsesCasing) {\n      currentCasing = this.detectCurrentCasing(postContext);\n    }\n    var baseWord = this.wordbreak(context);\n    try {\n      for (var rawPredictions_1 = (0, build_exports.__values)(rawPredictions), rawPredictions_1_1 = rawPredictions_1.next(); !rawPredictions_1_1.done; rawPredictions_1_1 = rawPredictions_1.next()) {\n        var prediction = rawPredictions_1_1.value;\n        var displayText = prediction.sample.displayAs;\n        var preserveAsKeep = displayText == keepOptionText;\n        if (this.lexicalModel.languageUsesCasing) {\n          preserveAsKeep = preserveAsKeep || displayText == this.lexicalModel.applyCasing("lower", keepOptionText);\n        }\n        if (preserveAsKeep) {\n          if (!keepOption) {\n            var baseTransform = prediction.sample.transform;\n            var keepTransform = {\n              insert: keepOptionText,\n              deleteLeft: baseTransform.deleteLeft,\n              deleteRight: baseTransform.deleteRight,\n              id: baseTransform.id\n            };\n            var intermediateKeep = transformToSuggestion(keepTransform, prediction.p);\n            keepOption = this.toAnnotatedSuggestion(intermediateKeep, "keep", quote_behavior_default.noQuotes);\n            keepOption.matchesModel = true;\n            keepOption.transformId = prediction.sample.transformId;\n          } else if (keepOption.p && prediction.p) {\n            keepOption.p += prediction.p;\n          }\n        } else {\n          if (currentCasing && currentCasing != "lower") {\n            this.applySuggestionCasing(prediction.sample, baseWord, currentCasing);\n            displayText = prediction.sample.displayAs;\n          }\n          var existingSuggestion = suggestionDistribMap[displayText];\n          if (existingSuggestion) {\n            existingSuggestion.p += prediction.p;\n          } else {\n            suggestionDistribMap[displayText] = prediction;\n          }\n        }\n      }\n    } catch (e_3_1) {\n      e_3 = { error: e_3_1 };\n    } finally {\n      try {\n        if (rawPredictions_1_1 && !rawPredictions_1_1.done && (_b = rawPredictions_1.return))\n          _b.call(rawPredictions_1);\n      } finally {\n        if (e_3)\n          throw e_3.error;\n      }\n    }\n    if (!keepOption && keepOptionText != "") {\n      var keepTransform = (0, build_exports.__assign)({}, inputTransform);\n      var keepSuggestion = transformToSuggestion(keepTransform, 1);\n      keepSuggestion.displayAs = keepOptionText;\n      keepOption = this.toAnnotatedSuggestion(keepSuggestion, "keep");\n      keepOption.matchesModel = false;\n    }\n    for (var key in suggestionDistribMap) {\n      var pair = suggestionDistribMap[key];\n      suggestionDistribution.push(pair);\n    }\n    suggestionDistribution = suggestionDistribution.sort(function(a, b) {\n      return b.p - a.p;\n    });\n    var suggestions = suggestionDistribution.splice(0, ModelCompositor2.MAX_SUGGESTIONS).map(function(value) {\n      if (value.sample["p"]) {\n        value.sample["lexical-p"] = value.sample["p"];\n        value.sample["correction-p"] = value.p / value.sample["p"];\n        value.sample["p"] = value.p;\n      }\n      return value.sample;\n    });\n    if (keepOption) {\n      suggestions = [keepOption].concat(suggestions);\n    }\n    var compositor = this;\n    suggestions.forEach(function(suggestion) {\n      if (!context.right) {\n        suggestion.transform.insert += punctuation.insertAfterWord;\n      } else {\n        var tokenization = compositor.tokenize(context);\n        if (tokenization && tokenization.caretSplitsToken) {\n          suggestion.transform.insert += punctuation.insertAfterWord;\n        }\n      }\n      if (prefixTransform) {\n        var mergedTransform = buildMergedTransform(prefixTransform, suggestion.transform);\n        mergedTransform.id = suggestion.transformId;\n        var mutableSuggestion = suggestion;\n        mutableSuggestion.transform = mergedTransform;\n      }\n      suggestion.id = compositor.SUGGESTION_ID_SEED;\n      compositor.SUGGESTION_ID_SEED++;\n    });\n    if (postContextState) {\n      postContextState.tail.replacements = suggestions.map(function(suggestion) {\n        return {\n          suggestion: suggestion,\n          tokenWidth: 1\n        };\n      });\n    }\n    return suggestions;\n  };\n  ModelCompositor2.prototype.applySuggestionCasing = function(suggestion, baseWord, casingForm) {\n    var unchangedLength = baseWord.kmwLength() - suggestion.transform.deleteLeft;\n    if (unchangedLength > 0) {\n      suggestion.transform.deleteLeft += unchangedLength;\n      suggestion.transform.insert = baseWord.kmwSubstr(0, unchangedLength) + suggestion.transform.insert;\n    }\n    suggestion.transform.insert = this.lexicalModel.applyCasing(casingForm, suggestion.transform.insert);\n    suggestion.displayAs = this.lexicalModel.applyCasing(casingForm, suggestion.displayAs);\n  };\n  ModelCompositor2.prototype.toAnnotatedSuggestion = function(suggestion, annotationType, quoteBehavior) {\n    if (quoteBehavior === void 0) {\n      quoteBehavior = quote_behavior_default.default;\n    }\n    var QuoteBehavior2 = quote_behavior_default;\n    var defaultQuoteBehavior = QuoteBehavior2.noQuotes;\n    if (annotationType == "keep" || annotationType == "revert") {\n      defaultQuoteBehavior = QuoteBehavior2.useQuotes;\n    }\n    return {\n      transform: suggestion.transform,\n      transformId: suggestion.transformId,\n      displayAs: QuoteBehavior2.apply(quoteBehavior, suggestion.displayAs, this.punctuation, defaultQuoteBehavior),\n      tag: annotationType,\n      p: suggestion.p\n    };\n  };\n  ModelCompositor2.determinePunctuationFromModel = function(model) {\n    var defaults = DEFAULT_PUNCTUATION;\n    if (!model.punctuation)\n      return defaults;\n    var specifiedPunctuation = model.punctuation;\n    var insertAfterWord = specifiedPunctuation.insertAfterWord;\n    if (insertAfterWord !== "" && !insertAfterWord) {\n      insertAfterWord = defaults.insertAfterWord;\n    }\n    var quotesForKeepSuggestion = specifiedPunctuation.quotesForKeepSuggestion;\n    if (!quotesForKeepSuggestion) {\n      quotesForKeepSuggestion = defaults.quotesForKeepSuggestion;\n    }\n    var isRTL = specifiedPunctuation.isRTL;\n    return {\n      insertAfterWord: insertAfterWord,\n      quotesForKeepSuggestion: quotesForKeepSuggestion,\n      isRTL: isRTL\n    };\n  };\n  ModelCompositor2.prototype.acceptSuggestion = function(suggestion, context, postTransform) {\n    var sourceTransform = suggestion.transform;\n    var deletedLeftChars = context.left.kmwSubstr(-sourceTransform.deleteLeft, sourceTransform.deleteLeft);\n    var insertedLength = sourceTransform.insert.kmwLength();\n    var reversionTransform = {\n      insert: deletedLeftChars,\n      deleteLeft: insertedLength\n    };\n    var postContext = context;\n    if (postTransform) {\n      reversionTransform = buildMergedTransform(reversionTransform, postTransform);\n      postContext = applyTransform(postTransform, postContext);\n    }\n    var revertedPrefix;\n    var postContextTokenization = this.tokenize(postContext);\n    if (postContextTokenization) {\n      if (postContextTokenization.left.length > 0) {\n        revertedPrefix = postContextTokenization.left[postContextTokenization.left.length - 1];\n      } else {\n        revertedPrefix = "";\n      }\n      revertedPrefix += postContextTokenization.caretSplitsToken ? postContextTokenization.right[0] : "";\n    } else {\n      revertedPrefix = this.wordbreak(postContext);\n    }\n    var firstConversion = transformToSuggestion(reversionTransform);\n    firstConversion.displayAs = revertedPrefix;\n    var reversion = this.toAnnotatedSuggestion(firstConversion, "revert");\n    if (suggestion.transformId != null) {\n      reversion.transformId = -suggestion.transformId;\n    }\n    if (suggestion.id != null) {\n      reversion.id = -suggestion.id;\n    } else {\n      reversion.id = -this.SUGGESTION_ID_SEED;\n      this.SUGGESTION_ID_SEED++;\n    }\n    if (this.contextTracker) {\n      var contextState = this.contextTracker.newest;\n      if (!contextState) {\n        contextState = this.contextTracker.analyzeState(this.lexicalModel, context);\n      }\n      contextState.tail.activeReplacementId = suggestion.id;\n      var acceptedContext = applyTransform(suggestion.transform, context);\n      this.contextTracker.analyzeState(this.lexicalModel, acceptedContext);\n    }\n    return reversion;\n  };\n  ModelCompositor2.prototype.applyReversion = function(reversion, context) {\n    var compositor = this;\n    var fallbackSuggestions = function() {\n      var revertedContext = applyTransform(reversion.transform, context);\n      var suggestions2 = compositor.predict({ insert: "", deleteLeft: 0 }, revertedContext);\n      suggestions2.forEach(function(suggestion) {\n        suggestion.transformId = -reversion.transformId;\n      });\n      return suggestions2;\n    };\n    if (!this.contextTracker) {\n      return fallbackSuggestions();\n    }\n    var contextMatchFound = false;\n    for (var c = this.contextTracker.count - 1; c >= 0; c--) {\n      var contextState = this.contextTracker.item(c);\n      if (contextState.tail.activeReplacementId == -reversion.id) {\n        contextMatchFound = true;\n        break;\n      }\n    }\n    if (!contextMatchFound) {\n      return fallbackSuggestions();\n    }\n    while (this.contextTracker.newest.tail.activeReplacementId != -reversion.id) {\n      this.contextTracker.popNewest();\n    }\n    this.contextTracker.newest.tail.revert();\n    var suggestions = this.contextTracker.newest.tail.replacements.map(function(trackedSuggestion) {\n      return trackedSuggestion.suggestion;\n    });\n    suggestions.forEach(function(suggestion) {\n      suggestion.transformId = -reversion.transformId;\n    });\n    return suggestions;\n  };\n  ModelCompositor2.prototype.wordbreak = function(context) {\n    var model = this.lexicalModel;\n    if (model.wordbreaker || !model.wordbreak) {\n      var wordbreaker = model.wordbreaker || default_;\n      return wordbreak(wordbreaker, context);\n    } else {\n      return model.wordbreak(context);\n    }\n  };\n  ModelCompositor2.prototype.tokenize = function(context) {\n    var model = this.lexicalModel;\n    if (model.wordbreaker) {\n      return tokenize(model.wordbreaker, context);\n    } else {\n      return null;\n    }\n  };\n  ModelCompositor2.prototype.resetContext = function(context) {\n    if (this.contextTracker) {\n      var tokenizedContext = tokenize(this.lexicalModel.wordbreaker || default_, context);\n      var contextState = ContextTracker.modelContextState(tokenizedContext.left, null, this.lexicalModel);\n      this.contextTracker.enqueue(contextState);\n    }\n  };\n  ModelCompositor2.prototype.detectCurrentCasing = function(context) {\n    var _a;\n    var model = this.lexicalModel;\n    var text = this.wordbreak(context);\n    if (!model.languageUsesCasing) {\n      throw "Invalid attempt to detect casing: languageUsesCasing is set to false";\n    }\n    if (!model.applyCasing) {\n      throw "Invalid LMLayer state:  languageUsesCasing is set to true, but no applyCasing function exists";\n    }\n    if (context.casingForm == "upper" || context.casingForm == "initial") {\n      return context.casingForm;\n    }\n    if (model.applyCasing("lower", text) == text) {\n      return "lower";\n    } else if (model.applyCasing("upper", text) == text) {\n      return text.kmwLength() > 1 ? "upper" : "initial";\n    } else if (model.applyCasing("initial", text) == text) {\n      return "initial";\n    } else {\n      return (_a = context.casingForm) !== null && _a !== void 0 ? _a : null;\n    }\n  };\n  ModelCompositor2.MAX_SUGGESTIONS = 12;\n  ModelCompositor2.SINGLE_CHAR_KEY_PROB_EXPONENT = 16;\n  return ModelCompositor2;\n}();\nvar model_compositor_default = ModelCompositor;\nvar DEFAULT_PUNCTUATION = {\n  quotesForKeepSuggestion: { open: "\\u201C", close: "\\u201D" },\n  insertAfterWord: " "\n};\n\n// build/obj/index.js\nextendString();\nvar LMLayerWorker = /* @__PURE__ */ function() {\n  function LMLayerWorker2(options) {\n    if (options === void 0) {\n      options = {\n        importScripts: null,\n        postMessage: null\n      };\n    }\n    this._testMode = false;\n    this._postMessage = options.postMessage || postMessage;\n    this._importScripts = options.importScripts || importScripts;\n    this.setupConfigState();\n  }\n  LMLayerWorker2.prototype.error = function(message, error) {\n    this.cast("error", {\n      log: message,\n      error: error && error.stack ? error.stack : void 0\n    });\n  };\n  LMLayerWorker2.prototype.onMessage = function(event) {\n    var message = event.data.message;\n    if (!message) {\n      throw new Error("Missing required \'message\' property: ".concat(event.data));\n    }\n    var im = event.data;\n    if (im.message == "load") {\n      var data = im;\n      var duplicated = false;\n      if (this._currentModelSource && data.source.type == this._currentModelSource.type) {\n        if (data.source.type == "file" && data.source.file == this._currentModelSource.file) {\n          duplicated = true;\n        } else if (data.source.type == "raw" && data.source.code == this._currentModelSource.code) {\n          duplicated = true;\n        }\n      }\n      if (duplicated) {\n        if (typeof console !== "undefined") {\n          console.warn("Duplicate model load message detected - squashing!");\n        }\n        return;\n      } else {\n        this._currentModelSource = data.source;\n      }\n    } else if (im.message == "unload") {\n      this._currentModelSource = null;\n    }\n    this.state.handleMessage(im);\n  };\n  LMLayerWorker2.prototype.cast = function(message, payload) {\n    var postMessage2 = this._postMessage;\n    postMessage2((0, build_exports.__assign)({ message: message }, payload));\n  };\n  LMLayerWorker2.prototype.loadModel = function(model) {\n    try {\n      var configuration = model.configure(this._platformCapabilities);\n      if (!configuration.leftContextCodePoints) {\n        configuration.leftContextCodePoints = configuration.leftContextCodeUnits;\n      }\n      if (!configuration.rightContextCodePoints) {\n        configuration.rightContextCodePoints = configuration.rightContextCodeUnits;\n      }\n      if (!configuration.leftContextCodePoints) {\n        configuration.leftContextCodePoints = this._platformCapabilities.maxLeftContextCodePoints;\n      }\n      if (!configuration.rightContextCodePoints) {\n        configuration.rightContextCodePoints = this._platformCapabilities.maxRightContextCodePoints || 0;\n      }\n      if (model.languageUsesCasing && !model.applyCasing) {\n        model.applyCasing = defaultApplyCasing;\n      }\n      var compositor = this.transitionToReadyState(model);\n      if (configuration.wordbreaksAfterSuggestions === void 0) {\n        configuration.wordbreaksAfterSuggestions = compositor.punctuation.insertAfterWord != "";\n      }\n      this.cast("ready", { configuration: configuration });\n    } catch (err) {\n      this.error("loadModel failed!", err);\n    }\n  };\n  LMLayerWorker2.prototype.loadModelFile = function(url) {\n    try {\n      this._importScripts(url);\n    } catch (err) {\n      this.error("Error occurred when attempting to load dictionary", err);\n    }\n  };\n  LMLayerWorker2.prototype.unloadModel = function() {\n    this.transitionToLoadingState();\n  };\n  LMLayerWorker2.prototype.setupConfigState = function() {\n    var _this_1 = this;\n    this.state = {\n      name: "unconfigured",\n      handleMessage: function(payload) {\n        if (payload.message !== "config") {\n          throw new Error("invalid message; expected \'config\' but got ".concat(payload.message));\n        }\n        _this_1._platformCapabilities = payload.capabilities;\n        _this_1._testMode = !!payload.testMode;\n        _this_1.transitionToLoadingState();\n      }\n    };\n  };\n  LMLayerWorker2.prototype.transitionToLoadingState = function() {\n    var _this = this;\n    this.state = {\n      name: "modelless",\n      handleMessage: function(payload) {\n        if (payload.message !== "load") {\n          throw new Error("invalid message; expected \'load\' but got ".concat(payload.message));\n        }\n        if (payload.source.type == "file") {\n          _this.loadModelFile(payload.source.file);\n        } else {\n          var code = payload.source.code;\n          var modelLoader = new Function("LMLayerWorker", "models", "correction", "wordBreakers", code);\n          modelLoader(_this, models_exports, correction_exports, obj_exports);\n        }\n      }\n    };\n  };\n  LMLayerWorker2.prototype.transitionToReadyState = function(model) {\n    var _this_1 = this;\n    var compositor = new model_compositor_default(model, this._testMode);\n    this.state = {\n      name: "ready",\n      handleMessage: function(payload) {\n        switch (payload.message) {\n          case "predict":\n            var transform = payload.transform, context = payload.context;\n            var suggestions = compositor.predict(transform, context);\n            _this_1.cast("suggestions", {\n              token: payload.token,\n              suggestions: suggestions\n            });\n            break;\n          case "wordbreak":\n            var brokenWord = wordbreak(model.wordbreaker || default_, payload.context);\n            _this_1.cast("currentword", {\n              token: payload.token,\n              word: brokenWord\n            });\n            break;\n          case "unload":\n            _this_1.unloadModel();\n            break;\n          case "accept":\n            var suggestion = payload.suggestion, context = payload.context, postTransform = payload.postTransform;\n            var reversion = compositor.acceptSuggestion(suggestion, context, postTransform);\n            _this_1.cast("postaccept", {\n              token: payload.token,\n              reversion: reversion\n            });\n            break;\n          case "revert":\n            var reversion = payload.reversion, context = payload.context;\n            var suggestions = compositor.applyReversion(reversion, context);\n            _this_1.cast("postrevert", {\n              token: payload.token,\n              suggestions: suggestions\n            });\n            break;\n          case "reset-context":\n            var context = payload.context;\n            compositor.resetContext(context);\n            break;\n          default:\n            throw new Error("invalid message; expected one of {\'predict\', \'wordbreak\', \'accept\', \'revert\', \'reset-context\', \'unload\'} but got ".concat(payload.message));\n        }\n      },\n      compositor: compositor\n    };\n    return compositor;\n  };\n  LMLayerWorker2.install = function(scope) {\n    var worker = new LMLayerWorker2({ postMessage: scope.postMessage, importScripts: scope.importScripts.bind(scope) });\n    scope.onmessage = worker.onMessage.bind(worker);\n    worker.self = scope;\n    scope["LMLayerWorker"] = worker;\n    scope["models"] = models_exports;\n    scope["correction"] = correction_exports;\n    scope["wordBreakers"] = obj_exports;\n    return worker;\n  };\n  return LMLayerWorker2;\n}();\nvar obj_default = LMLayerWorker;\n\n// build/obj/worker-main.js\nif (typeof self !== "undefined" && "postMessage" in self && "importScripts" in self) {\n  obj_default.install(self);\n} else {\n  window.LMLayerWorker = obj_default;\n}\n//# sourceMappingURL=worker-main.polyfilled.js.map';
  var LMLayerWorkerSourcemapComment2 = "//# sourceMappingURL=data:application/json;charset=utf-8;base64,";

  // ../../../../common/predictive-text/build/obj/web/sourcemappedWorker.js
  var SourcemappedWorker = /* @__PURE__ */ function() {
    function SourcemappedWorker2() {
    }
    SourcemappedWorker2.constructInstance = function() {
      return new Worker(this.asBlobURI(LMLayerWorkerCode2));
    };
    SourcemappedWorker2.asBlobURI = function(encodedSrc) {
      var code = unwrap(encodedSrc);
      code += "\n" + LMLayerWorkerSourcemapComment2;
      var blob = new Blob([code], { type: "text/javascript" });
      return URL.createObjectURL(blob);
    };
    return SourcemappedWorker2;
  }();
  var sourcemappedWorker_default = SourcemappedWorker;

  // ../../../../common/web/input-processor/build/obj/text/prediction/languageProcessor.js
  var ReadySuggestions = /* @__PURE__ */ function() {
    function ReadySuggestions2(suggestions, id) {
      this.suggestions = suggestions;
      this.transcriptionID = id;
    }
    return ReadySuggestions2;
  }();
  var LanguageProcessor = function(_super) {
    (0, build_exports.__extends)(LanguageProcessor2, _super);
    function LanguageProcessor2(predictiveTextWorker, supportsRightDeletions) {
      if (supportsRightDeletions === void 0) {
        supportsRightDeletions = false;
      }
      var _this = _super.call(this) || this;
      _this.recentTranscriptions = [];
      _this._mayPredict = true;
      _this._mayCorrect = true;
      _this._state = "inactive";
      var capabilities = {
        maxLeftContextCodePoints: 64,
        maxRightContextCodePoints: supportsRightDeletions ? 0 : 64
      };
      if (!predictiveTextWorker) {
        return _this;
      }
      _this.lmEngine = new lmlayer_default(capabilities, predictiveTextWorker);
      return _this;
    }
    Object.defineProperty(LanguageProcessor2.prototype, "activeModel", {
      get: function() {
        return this.currentModel;
      },
      enumerable: false,
      configurable: true
    });
    Object.defineProperty(LanguageProcessor2.prototype, "isConfigured", {
      get: function() {
        return !!this.configuration;
      },
      enumerable: false,
      configurable: true
    });
    Object.defineProperty(LanguageProcessor2.prototype, "state", {
      get: function() {
        return this._state;
      },
      enumerable: false,
      configurable: true
    });
    LanguageProcessor2.prototype.unloadModel = function() {
      this.lmEngine.unloadModel();
      delete this.currentModel;
      delete this.configuration;
      this._state = "inactive";
      this.emit("statechange", "inactive");
    };
    LanguageProcessor2.prototype.loadModel = function(model) {
      var _this = this;
      if (!model) {
        throw new Error("Null reference not allowed.");
      }
      var specType = model.path ? "file" : "raw";
      var source = specType == "file" ? model.path : model.code;
      this.currentModel = model;
      if (this.mayPredict) {
        this._state = "active";
        this.emit("statechange", "active");
      }
      return this.lmEngine.loadModel(source, specType).then(function(config) {
        _this.configuration = config;
        _this._state = "configured";
        _this.emit("statechange", "configured");
      }).catch(function(error) {
        var message;
        if (error instanceof Error) {
          message = error.message;
        } else {
          message = String(error);
        }
        console.error("Could not load model '" + model.id + "': " + message);
        _this.currentModel = null;
        _this._state = "inactive";
        _this.emit("statechange", "inactive");
      });
    };
    LanguageProcessor2.prototype.invalidateContext = function(outputTarget, layerId) {
      this.emit("invalidatesuggestions", "context");
      if (!this.currentModel || !this.configuration) {
        return Promise.resolve([]);
      }
      if (!this.isActive) {
        return Promise.resolve([]);
      } else if (outputTarget) {
        var transcription = outputTarget.buildTranscriptionFrom(outputTarget, null, false);
        return this.predict_internal(transcription, true, layerId);
      }
    };
    LanguageProcessor2.prototype.wordbreak = function(target, layerId) {
      if (!this.isActive) {
        return null;
      }
      var context = new contextWindow_default(Mock.from(target, false), this.configuration, layerId);
      return this.lmEngine.wordbreak(context);
    };
    LanguageProcessor2.prototype.predict = function(transcription, layerId) {
      if (!this.isActive) {
        return null;
      }
      if (!this.currentModel || !this.configuration) {
        return null;
      }
      this.emit("invalidatesuggestions", "new");
      return this.predict_internal(transcription, false, layerId);
    };
    LanguageProcessor2.prototype.applySuggestion = function(suggestion, outputTarget, getLayerId) {
      var _this = this;
      if (!outputTarget) {
        throw "Accepting suggestions requires a destination OutputTarget instance.";
      }
      var original = this.getPredictionState(suggestion.transformId);
      if (!original) {
        console.warn("Could not apply the Suggestion!");
        return null;
      } else {
        var final = Mock.from(original.preInput, false);
        final.apply(suggestion.transform);
        var transform = final.buildTransformFrom(outputTarget);
        outputTarget.apply(transform);
        this.emit("suggestionapplied", outputTarget);
        var preApply = Mock.from(original.preInput, false);
        preApply.apply(original.transform);
        var suggestionContext = new contextWindow_default(original.preInput, this.configuration, getLayerId());
        var reversionPromise = this.lmEngine.acceptSuggestion(suggestion, suggestionContext, original.transform);
        reversionPromise = reversionPromise.then(function(reversion) {
          var mappedReversion = {
            transform: original.transform,
            transformId: -original.token,
            displayAs: reversion.displayAs,
            id: reversion.id,
            tag: reversion.tag
          };
          _this.predictFromTarget(outputTarget, getLayerId());
          return mappedReversion;
        });
        return reversionPromise;
      }
    };
    LanguageProcessor2.prototype.applyReversion = function(reversion, outputTarget) {
      var _this = this;
      if (!outputTarget) {
        throw "Accepting suggestions requires a destination OutputTarget instance.";
      }
      var original = this.getPredictionState(-reversion.transformId);
      if (!original) {
        console.warn("Could not apply the Suggestion!");
        return;
      }
      var final = Mock.from(original.preInput, false);
      final.apply(reversion.transform);
      var transform = final.buildTransformFrom(outputTarget);
      outputTarget.apply(transform);
      var promise = this.lmEngine.revertSuggestion(reversion, new contextWindow_default(original.preInput, this.configuration, null));
      return promise.then(function(suggestions) {
        var result = new ReadySuggestions(suggestions, transform.id);
        _this.emit("suggestionsready", result);
        _this.currentPromise = null;
        return suggestions;
      });
    };
    LanguageProcessor2.prototype.predictFromTarget = function(outputTarget, layerId) {
      if (!outputTarget) {
        return null;
      }
      var transcription = outputTarget.buildTranscriptionFrom(outputTarget, null, false);
      return this.predict(transcription, layerId);
    };
    LanguageProcessor2.prototype.predict_internal = function(transcription, resetContext, layerId) {
      var _this = this;
      if (!transcription) {
        return null;
      }
      var context = new contextWindow_default(transcription.preInput, this.configuration, layerId);
      this.recordTranscription(transcription);
      if (resetContext) {
        this.lmEngine.resetContext(context);
      }
      var alternates = transcription.alternates;
      if (!alternates || alternates.length == 0) {
        alternates = [{
          sample: transcription.transform,
          p: 1
        }];
      }
      var transform = transcription.transform;
      var promise = this.currentPromise = this.lmEngine.predict(alternates, context);
      return promise.then(function(suggestions) {
        if (promise == _this.currentPromise) {
          var result = new ReadySuggestions(suggestions, transform.id);
          _this.emit("suggestionsready", result);
          _this.currentPromise = null;
        }
        return suggestions;
      });
    };
    LanguageProcessor2.prototype.recordTranscription = function(transcription) {
      this.recentTranscriptions.push(transcription);
      if (this.recentTranscriptions.length > LanguageProcessor2.TRANSCRIPTION_BUFFER) {
        this.recentTranscriptions.splice(0, 1);
      }
    };
    LanguageProcessor2.prototype.getPredictionState = function(id) {
      var match = this.recentTranscriptions.filter(function(t) {
        return t.token == id;
      });
      return match.length == 0 ? null : match[0];
    };
    LanguageProcessor2.prototype.shutdown = function() {
      this.lmEngine.shutdown();
    };
    Object.defineProperty(LanguageProcessor2.prototype, "isActive", {
      get: function() {
        if (!this.canEnable()) {
          this._mayPredict = false;
          return false;
        }
        return (this.activeModel || false) && this._mayPredict;
      },
      enumerable: false,
      configurable: true
    });
    LanguageProcessor2.prototype.canEnable = function() {
      return !!this.lmEngine;
    };
    Object.defineProperty(LanguageProcessor2.prototype, "mayPredict", {
      get: function() {
        return this._mayPredict;
      },
      set: function(flag) {
        if (!this.canEnable()) {
          return;
        }
        var oldVal = this._mayPredict;
        this._mayPredict = flag;
        if (oldVal != flag) {
          if (this.activeModel) {
            var state = flag ? "active" : "inactive";
            this._state = state;
            this.emit("statechange", state);
            if (this.isConfigured) {
              this._state = "configured";
              this.emit("statechange", "configured");
            }
          }
        }
      },
      enumerable: false,
      configurable: true
    });
    Object.defineProperty(LanguageProcessor2.prototype, "mayCorrect", {
      get: function() {
        return this._mayCorrect;
      },
      set: function(flag) {
        this._mayCorrect = flag;
      },
      enumerable: false,
      configurable: true
    });
    Object.defineProperty(LanguageProcessor2.prototype, "wordbreaksAfterSuggestions", {
      get: function() {
        return this.configuration.wordbreaksAfterSuggestions;
      },
      enumerable: false,
      configurable: true
    });
    LanguageProcessor2.prototype.tryAcceptSuggestion = function(source) {
      this.emit("tryaccept", source);
      return false;
    };
    LanguageProcessor2.prototype.tryRevertSuggestion = function() {
      this.emit("tryrevert");
      return false;
    };
    LanguageProcessor2.TRANSCRIPTION_BUFFER = 10;
    return LanguageProcessor2;
  }(import_eventemitter37.default);
  var languageProcessor_default = LanguageProcessor;

  // ../../../../common/web/input-processor/build/obj/text/inputProcessor.js
  var InputProcessor = /* @__PURE__ */ function() {
    function InputProcessor2(device, predictiveTextWorker, options) {
      if (!device) {
        throw new Error("device must be defined");
      }
      if (!options) {
        options = InputProcessor2.DEFAULT_OPTIONS;
      }
      this.contextDevice = device;
      this.kbdProcessor = new keyboardProcessor_default(device, options);
      this.lngProcessor = new languageProcessor_default(predictiveTextWorker);
    }
    Object.defineProperty(InputProcessor2.prototype, "languageProcessor", {
      get: function() {
        return this.lngProcessor;
      },
      enumerable: false,
      configurable: true
    });
    Object.defineProperty(InputProcessor2.prototype, "keyboardProcessor", {
      get: function() {
        return this.kbdProcessor;
      },
      enumerable: false,
      configurable: true
    });
    Object.defineProperty(InputProcessor2.prototype, "keyboardInterface", {
      get: function() {
        return this.keyboardProcessor.keyboardInterface;
      },
      enumerable: false,
      configurable: true
    });
    Object.defineProperty(InputProcessor2.prototype, "activeKeyboard", {
      get: function() {
        return this.keyboardInterface.activeKeyboard;
      },
      set: function(keyboard) {
        this.keyboardInterface.activeKeyboard = keyboard;
        this.resetContext();
      },
      enumerable: false,
      configurable: true
    });
    Object.defineProperty(InputProcessor2.prototype, "activeModel", {
      get: function() {
        return this.languageProcessor.activeModel;
      },
      enumerable: false,
      configurable: true
    });
    InputProcessor2.prototype.processKeyEvent = function(keyEvent, outputTarget) {
      var kbdMismatch = keyEvent.srcKeyboard && this.activeKeyboard != keyEvent.srcKeyboard;
      var trueActiveKeyboard = this.activeKeyboard;
      try {
        if (kbdMismatch) {
          this.keyboardInterface.activeKeyboard = keyEvent.srcKeyboard;
        }
        return this._processKeyEvent(keyEvent, outputTarget);
      } finally {
        if (kbdMismatch) {
          this.keyboardInterface.activeKeyboard = trueActiveKeyboard;
        }
      }
    };
    InputProcessor2.prototype._processKeyEvent = function(keyEvent, outputTarget) {
      var _a;
      var formFactor = keyEvent.device.formFactor;
      var fromOSK = keyEvent.isSynthetic;
      if ((formFactor == deviceSpec_default.FormFactor.Desktop || !this.activeKeyboard || this.activeKeyboard.usesDesktopLayoutOnDevice(keyEvent.device)) && fromOSK) {
        if (this.keyboardProcessor.selectLayer(keyEvent)) {
          return new ruleBehavior_default();
        }
      }
      if (this.keyboardProcessor.doModifierPress(keyEvent, outputTarget, !fromOSK)) {
        if (!fromOSK) {
          return new ruleBehavior_default();
        }
      }
      if (this.languageProcessor.isActive) {
        if ((keyEvent.kName == "K_BKSP" || keyEvent.Lcode == codes_default.keyCodes["K_BKSP"]) && this.languageProcessor.tryRevertSuggestion()) {
          return new ruleBehavior_default();
        } else if ((keyEvent.kName == "K_SPACE" || keyEvent.Lcode == codes_default.keyCodes["K_SPACE"]) && this.languageProcessor.tryAcceptSuggestion("space")) {
          return new ruleBehavior_default();
        }
      }
      var preInputMock = Mock.from(outputTarget, true);
      var startingLayerId = this.keyboardProcessor.layerId;
      var ruleBehavior = this.keyboardProcessor.processKeystroke(keyEvent, outputTarget);
      if (keyEvent.kNextLayer) {
        this.keyboardProcessor.selectLayer(keyEvent);
      }
      var isOnlyLayerSwitchKey = codes_default.isKnownOSKModifierKey(keyEvent.kName);
      if (isEmptyTransform((_a = ruleBehavior === null || ruleBehavior === void 0 ? void 0 : ruleBehavior.transcription) === null || _a === void 0 ? void 0 : _a.transform) && keyEvent.kNextLayer) {
        isOnlyLayerSwitchKey = true;
      }
      var keepRuleBehavior = ruleBehavior != null;
      if (keepRuleBehavior) {
        var alternates = isOnlyLayerSwitchKey ? null : this.buildAlternates(ruleBehavior, keyEvent, preInputMock);
        ruleBehavior.finalize(this.keyboardProcessor, outputTarget, false);
        if (alternates && alternates.length > 0) {
          ruleBehavior.transcription.alternates = alternates;
        }
      } else {
        ruleBehavior = new ruleBehavior_default();
        ruleBehavior.transcription = outputTarget.buildTranscriptionFrom(outputTarget, null, false);
        ruleBehavior.triggersDefaultCommand = true;
      }
      var hasLayerChanged = ruleBehavior.setStore[SystemStoreIDs.TSS_LAYER] || keyEvent.kNextLayer;
      this.keyboardProcessor.newLayerStore.set(hasLayerChanged ? this.keyboardProcessor.layerId : "");
      this.keyboardProcessor.oldLayerStore.set(hasLayerChanged ? startingLayerId : "");
      var postRuleBehavior = this.keyboardProcessor.processPostKeystroke(this.contextDevice, outputTarget);
      if (postRuleBehavior) {
        postRuleBehavior.finalize(this.keyboardProcessor, outputTarget, true);
      }
      ruleBehavior.predictionPromise = this.languageProcessor.predict(ruleBehavior.transcription, this.keyboardProcessor.layerId);
      if (!ruleBehavior.triggersDefaultCommand) {
        outputTarget.doInputEvent();
      }
      return keepRuleBehavior ? ruleBehavior : null;
    };
    InputProcessor2.prototype.buildAlternates = function(ruleBehavior, keyEvent, preInputMock) {
      var alternates;
      if (this.languageProcessor.isActive && !ruleBehavior.triggersDefaultCommand) {
        var keyDistribution = keyEvent.keyDistribution;
        var contextWindow = new contextWindow_default(preInputMock, contextWindow_default.ENGINE_RULE_WINDOW, this.keyboardProcessor.layerId);
        var windowedMock = contextWindow.toMock();
        if (this.languageProcessor.isActive && keyDistribution && keyEvent.kbdLayer) {
          var TIMEOUT_THRESHOLD = Number.MAX_VALUE;
          var _globalThis_1 = getGlobalObject();
          var timer = void 0;
          if (_globalThis_1["performance"] && _globalThis_1["performance"]["now"]) {
            timer = function() {
              return _globalThis_1["performance"]["now"]();
            };
            TIMEOUT_THRESHOLD = timer() + 16;
          }
          var KEYSTROKE_EPSILON = Math.exp(-5);
          keyDistribution.sort(function(a, b) {
            return b.p - a.p;
          });
          var activeLayout = this.activeKeyboard.layout(keyEvent.device.formFactor);
          alternates = [];
          var totalMass_1 = 0;
          for (var _i = 0, keyDistribution_1 = keyDistribution; _i < keyDistribution_1.length; _i++) {
            var pair = keyDistribution_1[_i];
            if (pair.p < KEYSTROKE_EPSILON) {
              totalMass_1 += pair.p;
              break;
            } else if (timer && timer() >= TIMEOUT_THRESHOLD) {
              break;
            }
            var mock = Mock.from(windowedMock, false);
            var altKey = activeLayout.getLayer(keyEvent.kbdLayer).getKey(pair.keyId);
            if (!altKey) {
              console.warn("Potential fat-finger key could not be found in layer!");
              continue;
            }
            var altEvent = this.keyboardProcessor.activeKeyboard.constructKeyEvent(altKey, keyEvent.device, this.keyboardProcessor.stateKeys);
            var alternateBehavior = this.keyboardProcessor.processKeystroke(altEvent, mock);
            if (alternateBehavior && !alternateBehavior.beep && pair.p > 0) {
              var transform = alternateBehavior.transcription.transform;
              transform.id = ruleBehavior.transcription.token;
              alternates.push({ sample: transform, "p": pair.p });
              totalMass_1 += pair.p;
            }
          }
          alternates.forEach(function(alt) {
            alt.p /= totalMass_1;
          });
        }
      }
      return alternates;
    };
    InputProcessor2.prototype.resetContext = function(outputTarget) {
      this.keyboardProcessor.resetContext(outputTarget);
      this.languageProcessor.invalidateContext(outputTarget, this.keyboardProcessor.layerId);
    };
    InputProcessor2.DEFAULT_OPTIONS = {
      baseLayout: "us"
    };
    return InputProcessor2;
  }();
  var inputProcessor_default = InputProcessor;

  // ../../../../common/web/input-processor/build/obj/text/prediction/predictionContext.js
  var import_eventemitter38 = __toESM(require_eventemitter3(), 1);
  var PredictionContext = /* @__PURE__ */ function(_super) {
    (0, build_exports.__extends)(PredictionContext2, _super);
    function PredictionContext2(langProcessor, kbdProcessor) {
      var _this_1 = _super.call(this) || this;
      _this_1.initNewContext = true;
      _this_1._currentSuggestions = [];
      _this_1.recentAccept = false;
      _this_1.swallowPrediction = false;
      _this_1.doRevert = false;
      _this_1.recentRevert = false;
      _this_1.doTryAccept = function(source) {
        if (!_this_1.recentAccept && _this_1.selected) {
          _this_1.accept(_this_1.selected);
        } else if (_this_1.recentAccept && source == "space") {
          _this_1.recentAccept = false;
        } else {
        }
      };
      _this_1.doTryRevert = function() {
        if (_this_1.doRevert) {
          _this_1.doRevert = false;
          _this_1.recentAccept = false;
        } else if (_this_1.recentAccept) {
          _this_1.showRevert();
          _this_1.swallowPrediction = true;
        }
        return;
      };
      _this_1.invalidateSuggestions = function(source) {
        _this_1.initNewContext = false;
        if (!_this_1.swallowPrediction || source == "context") {
          _this_1.recentAccept = false;
          _this_1.doRevert = false;
          _this_1.recentRevert = false;
          if (source == "context") {
            _this_1.swallowPrediction = false;
            _this_1.initNewContext = true;
          }
        }
        if (source != "new") {
          _this_1.clearSuggestions();
        }
      };
      _this_1.updateSuggestions = function(prediction) {
        var suggestions = prediction.suggestions;
        _this_1._currentSuggestions = suggestions;
        _this_1.keepSuggestion = null;
        for (var _i = 0, suggestions_1 = suggestions; _i < suggestions_1.length; _i++) {
          var s = suggestions_1[_i];
          if (s.tag == "keep") {
            _this_1.keepSuggestion = s;
          }
        }
        if (_this_1.keepSuggestion) {
          _this_1._currentSuggestions.splice(_this_1._currentSuggestions.indexOf(_this_1.keepSuggestion), 1);
        }
        if (!_this_1.swallowPrediction) {
          _this_1.recentAccept = false;
          _this_1.doRevert = false;
          _this_1.recentRevert = false;
        } else {
          _this_1.swallowPrediction = false;
        }
        _this_1.sendUpdateEvent();
      };
      _this_1.onModelStateChange = function(state) {
        if (state == "configured" || state == "inactive") {
          _this_1.resetContext();
        }
      };
      _this_1.langProcessor = langProcessor;
      _this_1.kbdProcessor = kbdProcessor;
      var validSuggestionState = function() {
        return _this_1.currentTarget && langProcessor.state == "configured";
      };
      _this_1.suggestionApplier = function(suggestion) {
        if (validSuggestionState()) {
          return langProcessor.applySuggestion(suggestion, _this_1.currentTarget, function() {
            return kbdProcessor.layerId;
          });
        }
      };
      _this_1.suggestionReverter = function(reversion) {
        if (validSuggestionState()) {
          langProcessor.applyReversion(reversion, _this_1.currentTarget);
        }
      };
      _this_1.postApplicationHandler = function() {
        var _a;
        kbdProcessor.newLayerStore.set("");
        kbdProcessor.oldLayerStore.set("");
        (_a = kbdProcessor.processPostKeystroke(kbdProcessor.contextDevice, _this_1.currentTarget)) === null || _a === void 0 ? void 0 : _a.finalize(kbdProcessor, _this_1.currentTarget, true);
      };
      _this_1.connect();
      return _this_1;
    }
    Object.defineProperty(PredictionContext2.prototype, "currentTarget", {
      get: function() {
        return this._currentTarget;
      },
      enumerable: false,
      configurable: true
    });
    PredictionContext2.prototype.setCurrentTarget = function(target) {
      var originalTarget = this._currentTarget;
      this._currentTarget = target;
      if (originalTarget != target) {
        return this.resetContext();
      } else {
        return Promise.resolve([]);
      }
    };
    PredictionContext2.prototype.connect = function() {
      this.langProcessor.addListener("invalidatesuggestions", this.invalidateSuggestions);
      this.langProcessor.addListener("suggestionsready", this.updateSuggestions);
      this.langProcessor.addListener("tryaccept", this.doTryAccept);
      this.langProcessor.addListener("tryrevert", this.doTryRevert);
      this.langProcessor.addListener("statechange", this.onModelStateChange);
      this.langProcessor.addListener("suggestionapplied", this.postApplicationHandler);
    };
    PredictionContext2.prototype.disconnect = function() {
      this.langProcessor.removeListener("invalidatesuggestions", this.invalidateSuggestions);
      this.langProcessor.removeListener("suggestionsready", this.updateSuggestions);
      this.langProcessor.removeListener("tryaccept", this.doTryAccept);
      this.langProcessor.removeListener("tryrevert", this.doTryRevert);
      this.langProcessor.removeListener("statechange", this.onModelStateChange);
      this.langProcessor.removeListener("suggestionapplied", this.postApplicationHandler);
      this.clearSuggestions();
    };
    Object.defineProperty(PredictionContext2.prototype, "currentSuggestions", {
      get: function() {
        var suggestions = [];
        if (this.activateKeep() && this.keepSuggestion && this.keepSuggestion.matchesModel) {
          suggestions.push(this.keepSuggestion);
        } else if (this.doRevert) {
          suggestions.push(this.revertSuggestion);
        }
        return suggestions.concat(this._currentSuggestions);
      },
      enumerable: false,
      configurable: true
    });
    PredictionContext2.prototype.acceptInternal = function(suggestion) {
      if (!suggestion) {
        return null;
      }
      if (suggestion.tag == "revert") {
        this.suggestionReverter(suggestion);
        return null;
      } else {
        return this.suggestionApplier(suggestion);
      }
    };
    PredictionContext2.prototype.accept = function(suggestion) {
      var _this = this;
      this.selected = null;
      this.doRevert = false;
      this.revertAcceptancePromise = this.acceptInternal(suggestion);
      if (!this.revertAcceptancePromise) {
        if (suggestion && suggestion.tag == "revert") {
          this.recentAccept = false;
          this.recentRevert = true;
        }
        return null;
      }
      this.revertAcceptancePromise.then(function(suggestion2) {
        if (suggestion2) {
          _this.revertSuggestion = suggestion2;
        }
      });
      this.recentAccept = true;
      this.recentRevert = false;
      this.swallowPrediction = true;
      return this.revertAcceptancePromise;
    };
    PredictionContext2.prototype.showRevert = function() {
      this.doRevert = true;
      this.sendUpdateEvent();
    };
    PredictionContext2.prototype.clearSuggestions = function() {
      this.updateSuggestions({
        suggestions: [],
        transcriptionID: 0
      });
    };
    PredictionContext2.prototype.activateKeep = function() {
      return !this.recentAccept && !this.recentRevert && !this.initNewContext;
    };
    PredictionContext2.prototype.sendUpdateEvent = function() {
      this.emit("update", this.currentSuggestions);
    };
    PredictionContext2.prototype.resetContext = function() {
      var target = this.currentTarget;
      if (target) {
        return this.langProcessor.invalidateContext(target, this.kbdProcessor.layerId);
      } else {
        return Promise.resolve([]);
      }
    };
    return PredictionContext2;
  }(import_eventemitter38.default);
  var predictionContext_default = PredictionContext;

  // ../../../build/engine/events/obj/domEventTracker.js
  var DomEventTracking = /* @__PURE__ */ function() {
    function DomEventTracking2(Pelem, Peventname, Phandler, PuseCapture) {
      this.Pelem = Pelem;
      this.Peventname = Peventname.toLowerCase();
      this.Phandler = Phandler;
      this.PuseCapture = PuseCapture;
    }
    DomEventTracking2.prototype.equals = function(other) {
      return this.Pelem == other.Pelem && this.Peventname == other.Peventname && this.Phandler == other.Phandler && this.PuseCapture == other.PuseCapture;
    };
    return DomEventTracking2;
  }();
  var DomEventTracker = function() {
    function DomEventTracker2() {
      this.domEvents = [];
    }
    DomEventTracker2.prototype.attachDOMEvent = function(Pelem, Peventname, Phandler, PuseCapture) {
      this.detachDOMEvent(Pelem, Peventname, Phandler, PuseCapture);
      Pelem.addEventListener(Peventname, Phandler, PuseCapture ? true : false);
      var event = new DomEventTracking(Pelem, Peventname, Phandler, PuseCapture);
      this.domEvents.push(event);
    };
    DomEventTracker2.prototype.detachDOMEvent = function(Pelem, Peventname, Phandler, PuseCapture) {
      Pelem.removeEventListener(Peventname, Phandler, PuseCapture);
      var event = new DomEventTracking(Pelem, Peventname, Phandler, PuseCapture);
      for (var i = 0; i < this.domEvents.length; i++) {
        if (this.domEvents[i].equals(event)) {
          this.domEvents.splice(i, 1);
          break;
        }
      }
    };
    DomEventTracker2.prototype.shutdown = function() {
      for (var _i = 0, _a = this.domEvents; _i < _a.length; _i++) {
        var event_1 = _a[_i];
        this.detachDOMEvent(event_1.Pelem, event_1.Peventname, event_1.Phandler, event_1.PuseCapture);
      }
    };
    return DomEventTracker2;
  }();

  // ../../../build/engine/events/obj/emitterListenerSpy.js
  var import_eventemitter39 = __toESM(require_eventemitter3(), 1);
  var EmitterListenerSpy = /* @__PURE__ */ function(_super) {
    (0, build_exports.__extends)(EmitterListenerSpy2, _super);
    function EmitterListenerSpy2(emitter) {
      var _this = _super.call(this) || this;
      if (emitter instanceof import_eventemitter39.default) {
        emitter.on = _this.listenerRegistrationSpy("listeneradded", emitter, emitter.on);
        emitter.addListener = _this.listenerRegistrationSpy("listeneradded", emitter, emitter.addListener);
        emitter.off = _this.listenerRegistrationSpy("listenerremoved", emitter, emitter.off);
        emitter.removeListener = _this.listenerRegistrationSpy("listenerremoved", emitter, emitter.off);
      } else {
        emitter.addEventListener = _this.listenerRegistrationSpy("listeneradded", emitter, emitter.addEventListener);
        emitter.removeEventListener = _this.listenerRegistrationSpy("listenerremoved", emitter, emitter.removeEventListener);
      }
      return _this;
    }
    EmitterListenerSpy2.prototype.listenerRegistrationSpy = function(spyEventName, emitter, method) {
      var _this = this;
      return function(eventName, listener) {
        var retVal = method.apply(emitter, [eventName, listener]);
        _this.emit(spyEventName, eventName);
        return retVal;
      };
    };
    return EmitterListenerSpy2;
  }(import_eventemitter39.default);

  // ../../../build/engine/events/obj/legacyEventEmitter.js
  var LegacyEventEmitter = /* @__PURE__ */ function() {
    function LegacyEventEmitter2() {
      this.events = {};
      this.currentEvents = [];
    }
    LegacyEventEmitter2.prototype.addEventListener = function(event, func) {
      this._removeEventListener(event, func);
      this.events[event].push(func);
      return true;
    };
    LegacyEventEmitter2.prototype.removeEventListener = function(event, func) {
      return this._removeEventListener(event, func);
    };
    LegacyEventEmitter2.prototype._removeEventListener = function(event, func) {
      if (typeof this.events[event] == "undefined") {
        this.events[event] = [];
      }
      for (var i = 0; i < this.events[event].length; i++) {
        if (this.events[event][i] == func) {
          this.events[event].splice(i, 1);
          return true;
        }
      }
      return false;
    };
    LegacyEventEmitter2.prototype.callEvent = function(event, params) {
      if (typeof this.events[event] == "undefined") {
        return true;
      }
      if (this.currentEvents.indexOf(event) != -1) {
        return false;
      }
      this.currentEvents.push(event);
      for (var i = 0; i < this.events[event].length; i++) {
        var func = this.events[event][i], result = false;
        try {
          result = func(params);
        } catch (strExcept) {
          console.error(strExcept);
          result = false;
        }
        if (result === false) {
          this.currentEvents.pop();
          return false;
        }
      }
      this.currentEvents.pop();
      return true;
    };
    LegacyEventEmitter2.prototype.listenerCount = function(event) {
      var listeners = this.events[event];
      return listeners ? listeners.length : 0;
    };
    LegacyEventEmitter2.prototype.shutdown = function() {
      this.events = {};
    };
    return LegacyEventEmitter2;
  }();

  // ../../../build/engine/package-cache/obj/domCloudRequester.js
  var DOMCloudRequester = /* @__PURE__ */ function() {
    function DOMCloudRequester2(fileLocal) {
      if (fileLocal === void 0) {
        fileLocal = false;
      }
      this.fileLocal = fileLocal;
    }
    DOMCloudRequester2.prototype.request = function(query) {
      var promise = new managedPromise_default();
      var timeoutID = window.setTimeout(function() {
        promise.reject(new Error(CLOUD_TIMEOUT_ERR));
      }, 1e4);
      var tFlag = "&timerid=" + timeoutID;
      var fullRef = query + tFlag;
      var Lscript = document.createElement("script");
      Lscript.onload = function(event) {
        window.clearTimeout(timeoutID);
        if (!promise.hasFinalized) {
          promise.reject(new Error(CLOUD_STUB_REGISTRATION_ERR));
        }
      };
      Lscript.onerror = function(event, source, lineno, colno, error) {
        window.clearTimeout(timeoutID);
        var msg = CLOUD_MALFORMED_OBJECT_ERR;
        if (error) {
          msg = msg + ": " + error.message;
        }
        promise.reject(new Error(msg));
      };
      if (this.fileLocal) {
        Lscript.src = query;
      } else {
        Lscript.src = fullRef;
      }
      try {
        document.body.appendChild(Lscript);
      } catch (ex) {
        document.getElementsByTagName("head")[0].appendChild(Lscript);
      }
      promise.finally(function() {
        clearTimeout(timeoutID);
      });
      return {
        promise: promise,
        queryId: timeoutID
      };
    };
    return DOMCloudRequester2;
  }();
  var domCloudRequester_default = DOMCloudRequester;

  // ../../../build/engine/main/obj/keymanEngine.js
  function determineBaseLayout() {
    if (typeof window["KeymanWeb_BaseLayout"] !== "undefined") {
      return window["KeymanWeb_BaseLayout"];
    } else {
      return "us";
    }
  }
  var KeymanEngine = /* @__PURE__ */ function() {
    function KeymanEngine3(worker, config, contextManager, processorConfigInitializer) {
      var _this = this;
      this.legacyAPIEvents = new LegacyEventEmitter();
      this.keyEventListener = function(event, callback) {
        var _a, _b, _c;
        var outputTarget = _this.contextManager.activeTarget;
        if (!_this.contextManager.activeKeyboard || !outputTarget) {
          if (callback) {
            callback(null, null);
          }
        }
        if (!event.isSynthetic) {
          if ((_b = (_a = _this.osk) === null || _a === void 0 ? void 0 : _a.vkbd) === null || _b === void 0 ? void 0 : _b.keyPending) {
            _this.osk.vkbd.keyPending = null;
          }
        } else if (_this.keyEventRefocus) {
          _this.keyEventRefocus();
        }
        outputTarget.invalidateSelection();
        outputTarget.deadkeys().deleteMatched();
        var result = _this.core.processKeyEvent(event, outputTarget);
        if (result && ((_c = result.transcription) === null || _c === void 0 ? void 0 : _c.transform)) {
          _this.config.onRuleFinalization(result, _this.contextManager.activeTarget);
        }
        if (callback) {
          callback(result, null);
        }
      };
      this.config = config;
      this.contextManager = contextManager;
      var processorConfiguration = processorConfigInitializer(this);
      processorConfiguration.baseLayout = determineBaseLayout();
      this.interface = processorConfiguration.keyboardInterface;
      this.core = new inputProcessor_default(config.hostDevice, worker, processorConfiguration);
      this.core.languageProcessor.on("statechange", function(state) {
        var _a, _b;
        (_a = _this.osk) === null || _a === void 0 ? void 0 : _a.bannerController.selectBanner(state);
        (_b = _this.osk) === null || _b === void 0 ? void 0 : _b.refreshLayout();
      });
      this.core.keyboardProcessor.on("statekeychange", function(stateKeys) {
        var _a, _b;
        (_b = (_a = _this.osk) === null || _a === void 0 ? void 0 : _a.vkbd) === null || _b === void 0 ? void 0 : _b.updateStateKeys(stateKeys);
      });
      this.contextManager.on("beforekeyboardchange", function(metadata) {
        _this.legacyAPIEvents.callEvent("beforekeyboardchange", {
          internalName: metadata === null || metadata === void 0 ? void 0 : metadata.id,
          languageCode: metadata === null || metadata === void 0 ? void 0 : metadata.langId
        });
      });
      this.contextManager.on("keyboardchange", function(kbd) {
        var _a, _b;
        _this.refreshModel();
        _this.core.activeKeyboard = kbd === null || kbd === void 0 ? void 0 : kbd.keyboard;
        _this.legacyAPIEvents.callEvent("keyboardchange", {
          internalName: (_a = kbd === null || kbd === void 0 ? void 0 : kbd.metadata.id) !== null && _a !== void 0 ? _a : "",
          languageCode: (_b = kbd === null || kbd === void 0 ? void 0 : kbd.metadata.langId) !== null && _b !== void 0 ? _b : ""
        });
        if (!kbd) {
          _this.osk.startHide(false);
        }
        if (_this.osk) {
          _this.osk.setNeedsLayout();
          _this.osk.activeKeyboard = kbd;
          _this.osk.present();
        }
      });
      this.contextManager.on("keyboardasyncload", function(metadata) {
        var _a, _b;
        if (_this.config.hostDevice.touchable && ((_a = _this.osk) === null || _a === void 0 ? void 0 : _a.activationModel)) {
          _this.osk.activationModel.enabled = true;
        }
        (_b = _this.osk) === null || _b === void 0 ? void 0 : _b.startHide(false);
      });
    }
    KeymanEngine3.prototype.init = function(optionSpec) {
      return (0, build_exports.__awaiter)(this, void 0, void 0, function() {
        var config, keyboardLoader, kbdCache;
        var _this = this;
        return (0, build_exports.__generator)(this, function(_a) {
          config = this.config;
          if (config.deferForInitialization.hasFinalized) {
            return [2, Promise.resolve()];
          }
          config.initialize(optionSpec);
          keyboardLoader = new DOMKeyboardLoader(this.interface, config.applyCacheBusting);
          this.keyboardRequisitioner = new keyboardRequisitioner_default(keyboardLoader, new domCloudRequester_default(), this.config.paths);
          this.modelCache = new modelCache_default();
          kbdCache = this.keyboardRequisitioner.cache;
          this.contextManager.configure({
            resetContext: function(target) {
              _this.core.resetContext(target);
            },
            predictionContext: new predictionContext_default(this.core.languageProcessor, this.core.keyboardProcessor),
            keyboardCache: this.keyboardRequisitioner.cache
          });
          this.config.on("spacebartext", function() {
            var _a2;
            (_a2 = _this.osk) === null || _a2 === void 0 ? void 0 : _a2.refreshLayout();
          });
          kbdCache.on("stubadded", function(stub) {
            var eventRaiser = function() {
              _this.legacyAPIEvents.callEvent("keyboardregistered", {
                internalName: stub.KI,
                language: stub.KL,
                keyboardName: stub.KN,
                languageCode: stub.KLC,
                package: stub.KP
              });
              if (_this.config.activateFirstKeyboard && _this.keyboardRequisitioner.cache.defaultStub == stub) {
                _this.contextManager.activateKeyboard(stub.id, stub.langId, true);
              }
            };
            if (_this.config.deferForInitialization.hasFinalized) {
              eventRaiser();
            } else {
              _this.config.deferForInitialization.then(eventRaiser);
            }
          });
          kbdCache.on("keyboardadded", function(keyboard) {
            var eventRaiser = function() {
              _this.legacyAPIEvents.callEvent("keyboardloaded", {
                keyboardName: keyboard.id
              });
            };
            if (_this.config.deferForInitialization.hasFinalized) {
              eventRaiser();
            } else {
              _this.config.deferForInitialization.then(eventRaiser);
            }
          });
          this.keyboardRequisitioner.cache.on("keyboardadded", function(keyboard) {
            _this.legacyAPIEvents.callEvent("keyboardloaded", { keyboardName: keyboard.id });
          });
          return [2];
        });
      });
    };
    Object.defineProperty(KeymanEngine3.prototype, "build", {
      get: function() {
        return Number.parseInt(version_inc_default.VERSION_PATCH, 10);
      },
      enumerable: false,
      configurable: true
    });
    Object.defineProperty(KeymanEngine3.prototype, "version", {
      get: function() {
        return version_inc_default.VERSION_RELEASE;
      },
      enumerable: false,
      configurable: true
    });
    Object.defineProperty(KeymanEngine3.prototype, "hardKeyboard", {
      get: function() {
        return this._hardKeyboard;
      },
      set: function(keyboard) {
        if (this._hardKeyboard) {
          this._hardKeyboard.off("keyevent", this.keyEventListener);
        }
        this._hardKeyboard = keyboard;
        keyboard.on("keyevent", this.keyEventListener);
      },
      enumerable: false,
      configurable: true
    });
    Object.defineProperty(KeymanEngine3.prototype, "osk", {
      get: function() {
        return this._osk;
      },
      set: function(value) {
        if (this._osk) {
          this._osk.off("keyevent", this.keyEventListener);
          this.core.keyboardProcessor.layerStore.handler = this.osk.layerChangeHandler;
        }
        this._osk = value;
        if (value) {
          value.activeKeyboard = this.contextManager.activeKeyboard;
          value.on("keyevent", this.keyEventListener);
          this.core.keyboardProcessor.layerStore.handler = value.layerChangeHandler;
        }
      },
      enumerable: false,
      configurable: true
    });
    KeymanEngine3.prototype.getDebugInfo = function() {
      var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o, _p;
      var activeKbd = (_a = this.contextManager) === null || _a === void 0 ? void 0 : _a.activeKeyboard;
      var report = {
        configReport: (_b = this.config) === null || _b === void 0 ? void 0 : _b.debugReport(),
        keyboard: {
          id: withoutPrefix((_d = (_c = activeKbd === null || activeKbd === void 0 ? void 0 : activeKbd.metadata) === null || _c === void 0 ? void 0 : _c.id) !== null && _d !== void 0 ? _d : ""),
          langId: ((_e = activeKbd === null || activeKbd === void 0 ? void 0 : activeKbd.metadata) === null || _e === void 0 ? void 0 : _e.langId) || "",
          version: (_g = (_f = activeKbd === null || activeKbd === void 0 ? void 0 : activeKbd.keyboard) === null || _f === void 0 ? void 0 : _f.version) !== null && _g !== void 0 ? _g : ""
        },
        model: {
          id: ((_j = (_h = this.core) === null || _h === void 0 ? void 0 : _h.activeModel) === null || _j === void 0 ? void 0 : _j.id) || ""
        },
        osk: {
          banner: (_m = (_l = (_k = this.osk) === null || _k === void 0 ? void 0 : _k.bannerController) === null || _l === void 0 ? void 0 : _l.activeType) !== null && _m !== void 0 ? _m : "",
          layer: ((_p = (_o = this.osk) === null || _o === void 0 ? void 0 : _o.vkbd) === null || _p === void 0 ? void 0 : _p.layerId) || ""
        }
      };
      return report;
    };
    KeymanEngine3.prototype.refreshModel = function() {
      var kbd = this.contextManager.activeKeyboard;
      var model = this.modelCache.modelForLanguage(kbd === null || kbd === void 0 ? void 0 : kbd.metadata.langId);
      if (this.core.activeModel != model) {
        if (this.core.activeModel) {
          this.core.languageProcessor.unloadModel();
        }
        if (model) {
          return this.core.languageProcessor.loadModel(model).then(function() {
            return model;
          });
        }
      }
      return Promise.resolve(model);
    };
    KeymanEngine3.prototype.addEventListener = function(event, listener) {
      this.legacyAPIEvents.addEventListener(event, listener);
    };
    KeymanEngine3.prototype.removeEventListener = function(event, listener) {
      this.legacyAPIEvents.removeEventListener(event, listener);
    };
    KeymanEngine3.prototype.shutdown = function() {
      var _a;
      this.legacyAPIEvents.shutdown();
      (_a = this.osk) === null || _a === void 0 ? void 0 : _a.shutdown();
    };
    KeymanEngine3.prototype.addModel = function(model) {
      var _a;
      this.modelCache.register(model);
      var activeStub = (_a = this.contextManager.activeKeyboard) === null || _a === void 0 ? void 0 : _a.metadata;
      if (activeStub && model.languages.indexOf(activeStub.langId) != -1) {
        return this.refreshModel().then(function() {
          return;
        });
      } else {
        return Promise.resolve();
      }
    };
    KeymanEngine3.prototype.removeModel = function(modelId) {
      this.modelCache.unregister(modelId);
      if (this.core.activeModel && this.core.activeModel.id == modelId) {
        this.core.languageProcessor.unloadModel();
      }
    };
    KeymanEngine3.prototype.setActiveKeyboard = function(keyboardId, languageCode) {
      return (0, build_exports.__awaiter)(this, void 0, void 0, function() {
        return (0, build_exports.__generator)(this, function(_a) {
          return [2, this.contextManager.activateKeyboard(keyboardId, languageCode, true)];
        });
      });
    };
    KeymanEngine3.prototype.getActiveKeyboard = function() {
      var _a, _b;
      return (_b = (_a = this.contextManager.activeKeyboard) === null || _a === void 0 ? void 0 : _a.metadata.id) !== null && _b !== void 0 ? _b : "";
    };
    KeymanEngine3.prototype.getActiveLanguage = function(fullName) {
      var _a, _b, _c;
      var metadata = (_a = this.contextManager.activeKeyboard) === null || _a === void 0 ? void 0 : _a.metadata;
      if (!fullName) {
        return (_b = metadata === null || metadata === void 0 ? void 0 : metadata.langId) !== null && _b !== void 0 ? _b : "";
      } else {
        return (_c = metadata === null || metadata === void 0 ? void 0 : metadata.langName) !== null && _c !== void 0 ? _c : "";
      }
    };
    KeymanEngine3.prototype.isChiral = function(k0) {
      var kbd;
      if (k0) {
        if (typeof k0 == "string") {
          var kbdObj = this.keyboardRequisitioner.cache.getKeyboard(k0);
          if (!kbdObj) {
            throw new Error("Keyboard '".concat(k0, "' has not been loaded."));
          } else {
            k0 = kbdObj;
          }
        }
        kbd = k0;
      } else {
        kbd = this.core.activeKeyboard;
      }
      return kbd.isChiral;
    };
    KeymanEngine3.prototype.resetContext = function() {
      this.contextManager.resetContext();
    };
    ;
    KeymanEngine3.prototype.setNumericLayer = function() {
      this.core.keyboardProcessor.setNumericLayer(this.config.softDevice);
    };
    ;
    return KeymanEngine3;
  }();
  var keymanEngine_default = KeymanEngine;

  // ../../../build/engine/osk/obj/views/oskView.js
  var import_eventemitter314 = __toESM(require_eventemitter3(), 1);

  // ../../../build/engine/osk/obj/banner/bannerView.js
  var import_eventemitter311 = __toESM(require_eventemitter3(), 1);

  // ../../../build/engine/osk/obj/banner/banner.js
  var import_eventemitter310 = __toESM(require_eventemitter3(), 1);

  // ../../../build/engine/osk/obj/input/event-interpreter/inputEventEngine.js
  var InputEventEngine = /* @__PURE__ */ function() {
    function InputEventEngine2(config) {
      this.config = config;
    }
    InputEventEngine2.prototype.onInputStart = function(coord) {
      if (this.config.inputStartHandler) {
        this.config.inputStartHandler(coord);
      }
    };
    InputEventEngine2.prototype.onInputMove = function(coord) {
      if (this.config.inputMoveHandler) {
        this.config.inputMoveHandler(coord);
      }
    };
    InputEventEngine2.prototype.onInputMoveCancel = function(coord) {
      if (this.config.inputMoveCancelHandler) {
        this.config.inputMoveCancelHandler(coord);
      }
    };
    InputEventEngine2.prototype.onInputEnd = function(coord) {
      if (this.config.inputEndHandler) {
        this.config.inputEndHandler(coord);
      }
    };
    return InputEventEngine2;
  }();
  var inputEventEngine_default = InputEventEngine;

  // ../../../build/engine/osk/obj/input/inputEventCoordinate.js
  var InputEventCoordinate = /* @__PURE__ */ function() {
    function InputEventCoordinate2(x, y, source) {
      this.x = x;
      this.y = y;
      if (source) {
        this.source = source;
      }
    }
    InputEventCoordinate2.fromEvent = function(e) {
      var coordSource;
      if (window["TouchEvent"] && e instanceof TouchEvent) {
        coordSource = e.changedTouches[0];
      } else if (e["changedTouches"]) {
        coordSource = e["changedTouches"][0];
      } else {
        coordSource = e;
      }
      if (coordSource.pageX) {
        return new InputEventCoordinate2(coordSource.pageX, coordSource.pageY, e);
      } else if (coordSource.clientX) {
        var x = coordSource.clientX + document.body.scrollLeft;
        var y = coordSource.clientY + document.body.scrollTop;
        return new InputEventCoordinate2(x, y, e);
      } else {
        return new InputEventCoordinate2(null, null, e);
      }
    };
    Object.defineProperty(InputEventCoordinate2.prototype, "activeInputCount", {
      get: function() {
        if (window["TouchEvent"] && this.source["touches"] !== void 0 && this.source["touches"] !== null) {
          return this.source["touches"].length;
        } else {
          var event_1 = this.source;
          return event_1.buttons > 0 ? 1 : 0;
        }
      },
      enumerable: false,
      configurable: true
    });
    Object.defineProperty(InputEventCoordinate2.prototype, "target", {
      get: function() {
        var _a;
        return (_a = this.source) === null || _a === void 0 ? void 0 : _a.target;
      },
      enumerable: false,
      configurable: true
    });
    Object.defineProperty(InputEventCoordinate2.prototype, "isFromTouch", {
      get: function() {
        return !this.isFromMouse;
      },
      enumerable: false,
      configurable: true
    });
    Object.defineProperty(InputEventCoordinate2.prototype, "isFromMouse", {
      get: function() {
        return this.source instanceof MouseEvent;
      },
      enumerable: false,
      configurable: true
    });
    return InputEventCoordinate2;
  }();
  var inputEventCoordinate_default = InputEventCoordinate;

  // ../../../build/engine/osk/obj/input/event-interpreter/mouseEventEngine.js
  var MouseEventEngine = /* @__PURE__ */ function(_super) {
    (0, build_exports.__extends)(MouseEventEngine2, _super);
    function MouseEventEngine2(config) {
      var _this = _super.call(this, config) || this;
      _this.hasActiveClick = false;
      _this.ignoreSequence = false;
      _this._mouseStart = _this.onMouseStart.bind(_this);
      _this._mouseMove = _this.onMouseMove.bind(_this);
      _this._mouseEnd = _this.onMouseEnd.bind(_this);
      return _this;
    }
    MouseEventEngine2.prototype.registerEventHandlers = function() {
      this.config.eventRoot.addEventListener("mousedown", this._mouseStart, true);
      this.config.eventRoot.addEventListener("mousemove", this._mouseMove, false);
      this.config.eventRoot.addEventListener("mouseup", this._mouseEnd, true);
    };
    MouseEventEngine2.prototype.unregisterEventHandlers = function() {
      this.config.eventRoot.removeEventListener("mousedown", this._mouseStart, true);
      this.config.eventRoot.removeEventListener("mousemove", this._mouseMove, false);
      this.config.eventRoot.removeEventListener("mouseup", this._mouseEnd, true);
    };
    MouseEventEngine2.prototype.preventPropagation = function(e) {
      e.preventDefault();
      e.cancelBubble = true;
      e.returnValue = false;
      if (typeof e.stopImmediatePropagation == "function") {
        e.stopImmediatePropagation();
      } else if (typeof e.stopPropagation == "function") {
        e.stopPropagation();
      }
    };
    MouseEventEngine2.prototype.onMouseStart = function(event) {
      if (!this.config.targetRoot.contains(event.target)) {
        this.ignoreSequence = true;
        return;
      }
      this.preventPropagation(event);
      this.onInputStart(inputEventCoordinate_default.fromEvent(event));
      this.hasActiveClick = true;
    };
    MouseEventEngine2.prototype.onMouseMove = function(event) {
      if (this.ignoreSequence) {
        return;
      }
      var coord = inputEventCoordinate_default.fromEvent(event);
      if (!event.buttons) {
        if (this.hasActiveClick) {
          this.hasActiveClick = false;
          this.onInputMoveCancel(coord);
        }
        return;
      } else if (!this.hasActiveClick) {
        return;
      }
      this.preventPropagation(event);
      if (this.config.coordConstrainedWithinInteractiveBounds(coord)) {
        this.onInputMove(coord);
      } else {
        this.onInputMoveCancel(coord);
      }
    };
    MouseEventEngine2.prototype.onMouseEnd = function(event) {
      if (this.ignoreSequence) {
        this.ignoreSequence = false;
        return;
      }
      if (!event.buttons) {
        this.hasActiveClick = false;
      }
      this.onInputEnd(inputEventCoordinate_default.fromEvent(event));
    };
    return MouseEventEngine2;
  }(inputEventEngine_default);
  var mouseEventEngine_default = MouseEventEngine;

  // ../../../build/engine/osk/obj/input/event-interpreter/touchEventEngine.js
  var TouchEventEngine = /* @__PURE__ */ function(_super) {
    (0, build_exports.__extends)(TouchEventEngine2, _super);
    function TouchEventEngine2(config) {
      var _this = _super.call(this, config) || this;
      _this._touchStart = _this.onTouchStart.bind(_this);
      _this._touchMove = _this.onTouchMove.bind(_this);
      _this._touchEnd = _this.onTouchEnd.bind(_this);
      return _this;
    }
    TouchEventEngine2.prototype.registerEventHandlers = function() {
      this.config.eventRoot.addEventListener("touchstart", this._touchStart, true);
      this.config.eventRoot.addEventListener("touchmove", this._touchMove, false);
      this.config.eventRoot.addEventListener("touchend", this._touchEnd, true);
    };
    TouchEventEngine2.prototype.unregisterEventHandlers = function() {
      this.config.eventRoot.removeEventListener("touchstart", this._touchStart, true);
      this.config.eventRoot.removeEventListener("touchmove", this._touchMove, false);
      this.config.eventRoot.removeEventListener("touchend", this._touchEnd, true);
    };
    TouchEventEngine2.prototype.preventPropagation = function(e) {
      e.preventDefault();
      e.cancelBubble = true;
      if (typeof e.stopImmediatePropagation == "function") {
        e.stopImmediatePropagation();
      } else if (typeof e.stopPropagation == "function") {
        e.stopPropagation();
      }
    };
    TouchEventEngine2.prototype.onTouchStart = function(event) {
      this.onInputStart(inputEventCoordinate_default.fromEvent(event));
    };
    TouchEventEngine2.prototype.onTouchMove = function(event) {
      this.preventPropagation(event);
      var coord = inputEventCoordinate_default.fromEvent(event);
      if (this.config.coordConstrainedWithinInteractiveBounds(coord)) {
        this.onInputMove(coord);
      } else {
        this.onInputMoveCancel(coord);
      }
    };
    TouchEventEngine2.prototype.onTouchEnd = function(event) {
      this.onInputEnd(inputEventCoordinate_default.fromEvent(event));
    };
    return TouchEventEngine2;
  }(inputEventEngine_default);
  var touchEventEngine_default = TouchEventEngine;

  // ../../../build/engine/osk/obj/input/event-interpreter/uiTouchHandlerBase.js
  var ScrollState = /* @__PURE__ */ function() {
    function ScrollState2(coord) {
      this.totalLength = 0;
      this.x = coord.x;
      this.totalLength = 0;
    }
    ScrollState2.prototype.updateTo = function(coord) {
      var x = this.x;
      this.x = coord.x;
      var deltas = { deltaX: this.x - x };
      this.totalLength += Math.abs(deltas.deltaX);
      return deltas;
    };
    Object.defineProperty(ScrollState2.prototype, "hasScrolled", {
      get: function() {
        return this.totalLength > ScrollState2.HAS_SCROLLED_FUDGE_FACTOR;
      },
      enumerable: false,
      configurable: true
    });
    ScrollState2.HAS_SCROLLED_FUDGE_FACTOR = 10;
    return ScrollState2;
  }();
  var UITouchHandlerBase = function() {
    function UITouchHandlerBase2(baseElement, rowClassMatch, selectedTargetMatch) {
      this.baseElement = baseElement;
      this.rowClassMatch = rowClassMatch;
      this.selectedTargetMatch = selectedTargetMatch;
    }
    UITouchHandlerBase2.prototype.findTargetFromTouch = function(coord, t, forMove) {
      var x = coord.x;
      while (t && t.className !== void 0 && t.className.indexOf(this.rowClassMatch) < 0) {
        t = t.parentNode;
      }
      if (!t) {
        return null;
      }
      var k, bestMatch = 0, dxMax = 24, dxMin = 1e5, x1, x2;
      for (k = 0; k < t.childNodes.length; k++) {
        var childNode = t.childNodes[k];
        if (this.isInvalidTarget(this.findTargetFrom(childNode))) {
          continue;
        }
        x1 = childNode.offsetLeft;
        x2 = x1 + childNode.offsetWidth;
        var dxRight = x1 - x;
        if (dxRight >= 0 && dxRight < dxMin) {
          bestMatch = k;
          dxMin = dxRight;
        }
        var dxLeft = x - x2;
        if (dxLeft >= 0 && dxLeft < dxMin) {
          bestMatch = k;
          dxMin = dxLeft;
        }
        if (dxLeft < 0 && dxRight < 0) {
          return this.findTargetFrom(childNode);
        }
      }
      if (dxMin < 1e5) {
        t = t.childNodes[bestMatch];
        x1 = t.offsetLeft;
        x2 = x1 + t.offsetWidth;
        if (t.offsetWidth > 40) {
          dxMax = 0.6 * t.offsetWidth;
        }
        if (x1 - x >= 0 && x1 - x < dxMax || x - x2 >= 0 && x - x2 < dxMax) {
          return this.findTargetFrom(t);
        }
      }
      return null;
    };
    UITouchHandlerBase2.prototype.findBestTarget = function(coord, forMove) {
      var eventTarget;
      if (forMove) {
        var clientX = coord.x + document.body.scrollLeft;
        var clientY = coord.y + document.body.scrollTop;
        eventTarget = document.elementFromPoint(clientX, clientY);
      } else {
        eventTarget = coord.target;
      }
      var target = this.findTargetFrom(eventTarget);
      if (!target) {
        target = this.findTargetFromTouch(coord, eventTarget, forMove);
      }
      return target;
    };
    UITouchHandlerBase2.prototype.isInvalidTarget = function(target) {
      return false;
    };
    UITouchHandlerBase2.prototype.touchStart = function(coord) {
      this.currentTarget = this.findBestTarget(coord);
      this.touchX = coord.x;
      this.touchY = coord.y;
      this.touchCount = coord.activeInputCount;
      if (!this.currentTarget) {
        return;
      }
      var shouldScroll = this.currentTarget.clientWidth < this.currentTarget.scrollWidth;
      this.scrollTouchState = shouldScroll ? new ScrollState(coord) : null;
      this.highlight(this.currentTarget, true);
      if (this.pendingTarget) {
        this.highlight(this.pendingTarget, false);
        this.select(this.pendingTarget);
        this.clearHolds();
        this.touchCount--;
      } else {
        this.hold(this.currentTarget);
      }
      this.pendingTarget = this.currentTarget;
    };
    UITouchHandlerBase2.prototype.touchEnd = function(coord) {
      var t = this.currentTarget;
      if (this.isSubmenuActive() || this.hasModalPopup()) {
        if (coord.activeInputCount > 0) {
          return;
        }
        if (t == null || t.id.indexOf("popup") < 0) {
          if (this.pendingTarget) {
            this.highlight(this.pendingTarget, false);
          }
          this.clearHolds();
          this.pendingTarget = null;
        }
      }
      var x = coord.x;
      var beyondEdge = x < 2 && this.touchX > 5 || x > window.innerWidth - 2 && this.touchX < window.innerWidth - 5;
      if (this.scrollTouchState) {
        beyondEdge = beyondEdge || this.scrollTouchState.hasScrolled;
      }
      var tc = this.touchCount;
      if (this.touchCount > 0) {
        this.touchCount--;
      }
      if (this.pendingTarget) {
        this.highlight(this.pendingTarget, false);
        if (this.pendingTarget.className.indexOf("hidden") < 0 && tc > 0 && !beyondEdge) {
          this.select(this.pendingTarget);
        }
        this.clearHolds();
        this.pendingTarget = null;
      } else {
        t = this.findBestTarget(coord);
        if (t) {
          this.highlight(t, false);
        }
      }
    };
    UITouchHandlerBase2.prototype.touchMove = function(coord) {
      if (coord.activeInputCount > 1 || this.touchCount == 0) {
        return;
      }
      if (this.currentTarget && this.scrollTouchState != null) {
        var deltaX = this.scrollTouchState.updateTo(coord).deltaX;
        this.currentTarget.scrollLeft -= window.devicePixelRatio * deltaX;
        return;
      }
      var y = coord.y;
      var key0 = this.pendingTarget, key1 = this.findBestTarget(coord, true);
      if (this.hasModalPopup()) {
        if (key0) {
          this.highlight(key0, false);
        }
        this.pendingTarget = null;
        return;
      }
      key1 = this.dealiasSubTarget(key1);
      this.currentTarget = key1;
      if (key0 && key1 && key1 !== key0) {
        this.highlight(key0, false);
      }
      if (key1 && this.hasSubmenu(key1)) {
        if (key1 && key1.id.indexOf("popup") < 0) {
          return;
        }
        if (key1 && key1.className.indexOf(this.selectedTargetMatch) < 0) {
          this.highlight(key1, true);
        }
      } else {
        var base = this.baseElement;
        var top_1 = getAbsoluteY(base);
        var height = base.offsetHeight;
        var yMin = Math.max(5, top_1 - 0.25 * height);
        var yMax = top_1 + height + 0.25 * height;
        if (key0 && (coord.y < yMin || coord.y > yMax)) {
          this.highlight(key0, false);
          this.clearHolds();
          this.pendingTarget = null;
        }
      }
      if (key1 && this.pendingTarget) {
        this.pendingTarget = key1;
      }
      if (this.pendingTarget) {
        if (key1 && (key0 != key1 || key1.className.indexOf(this.selectedTargetMatch) < 0)) {
          this.highlight(key1, true);
        }
      }
      if (key0 && key1 && key1 != key0 && key1.id != "") {
        this.hold(key1);
      }
    };
    return UITouchHandlerBase2;
  }();
  var uiTouchHandlerBase_default = UITouchHandlerBase;

  // ../../../build/engine/osk/obj/banner/banner.js
  var Banner = /* @__PURE__ */ function() {
    function Banner2(height) {
      var d = createUnselectableElement("div");
      d.id = Banner2.BANNER_ID;
      d.className = Banner2.BANNER_CLASS;
      this.div = d;
      this.height = height;
      this.update();
    }
    Object.defineProperty(Banner2.prototype, "height", {
      get: function() {
        return this._height;
      },
      set: function(height) {
        this._height = height > 0 ? height : 0;
        this.update();
      },
      enumerable: false,
      configurable: true
    });
    Banner2.prototype.update = function() {
      var ds = this.div.style;
      var currentHeightStyle = ds.height;
      var currentDisplayStyle = ds.display;
      if (this._height > 0) {
        ds.height = this._height + "px";
        ds.display = "block";
      } else {
        ds.height = "0px";
        ds.display = "none";
      }
      return !(currentHeightStyle === ds.height) || !(currentDisplayStyle === ds.display);
    };
    Banner2.prototype.appendStyleSheet = function() {
    };
    Banner2.prototype.getDiv = function() {
      return this.div;
    };
    Banner2.prototype.configureForKeyboard = function(keyboard, keyboardProperties) {
    };
    Banner2.DEFAULT_HEIGHT = 37;
    Banner2.BANNER_CLASS = "kmw-banner-bar";
    Banner2.BANNER_ID = "kmw-banner-bar";
    return Banner2;
  }();
  var BlankBanner = function(_super) {
    (0, build_exports.__extends)(BlankBanner2, _super);
    function BlankBanner2() {
      return _super.call(this, 0) || this;
    }
    return BlankBanner2;
  }(Banner);
  var ImageBanner = function(_super) {
    (0, build_exports.__extends)(ImageBanner2, _super);
    function ImageBanner2(imagePath, height) {
      var _this = this;
      if (imagePath.length > 0) {
        _this = _super.call(this) || this;
        if (height) {
          _this.height = height;
        }
      } else {
        _this = _super.call(this, 0) || this;
      }
      if (imagePath.indexOf("base64") >= 0) {
        console.log("Loading img from base64 data");
      } else {
        console.log("Loading img with src '" + imagePath + "'");
      }
      _this.img = document.createElement("img");
      _this.img.setAttribute("src", imagePath);
      var ds = _this.img.style;
      ds.width = "100%";
      ds.height = "100%";
      _this.getDiv().appendChild(_this.img);
      console.log("Image loaded.");
      return _this;
    }
    ImageBanner2.prototype.setImagePath = function(imagePath) {
      if (this.img) {
        this.img.setAttribute("src", imagePath);
      }
    };
    return ImageBanner2;
  }(Banner);
  var BannerSuggestion = function() {
    function BannerSuggestion2(index, isRTL) {
      this.rtl = false;
      this.index = index;
      this.rtl = isRTL;
      this.constructRoot();
      var display = this.display = createUnselectableElement("span");
      this.div.appendChild(display);
    }
    BannerSuggestion2.prototype.constructRoot = function() {
      var div = this.div = createUnselectableElement("div"), ds = div.style;
      div.className = "kmw-suggest-option";
      div.id = BannerSuggestion2.BASE_ID + this.index;
      var usableWidth = 100 - SuggestionBanner.MARGIN * (SuggestionBanner.SUGGESTION_LIMIT - 1);
      var widthpc = usableWidth / SuggestionBanner.SUGGESTION_LIMIT;
      ds.width = widthpc + "%";
      this.div["suggestion"] = this;
    };
    BannerSuggestion2.prototype.matchKeyboardProperties = function(keyboardProperties) {
      var div = this.div;
      if (keyboardProperties) {
        if (keyboardProperties["KLC"]) {
          div.lang = keyboardProperties["KLC"];
        }
        var font = keyboardProperties["KFont"];
        if (font && font.family && font.family != "") {
          div.style.fontFamily = this.fontFamily = font.family;
        }
      }
    };
    Object.defineProperty(BannerSuggestion2.prototype, "suggestion", {
      get: function() {
        return this._suggestion;
      },
      enumerable: false,
      configurable: true
    });
    BannerSuggestion2.prototype.update = function(suggestion) {
      this._suggestion = suggestion;
      this.updateText();
    };
    BannerSuggestion2.prototype.updateText = function() {
      var display = this.generateSuggestionText(this.rtl);
      this.div.replaceChild(display, this.display);
      this.display = display;
    };
    BannerSuggestion2.prototype.isEmpty = function() {
      return !this._suggestion;
    };
    BannerSuggestion2.prototype.generateSuggestionText = function(rtl) {
      var suggestion = this._suggestion;
      var suggestionText;
      var s = createUnselectableElement("span");
      s.className = "kmw-suggestion-text";
      if (suggestion == null) {
        return s;
      }
      if (suggestion.displayAs == null || suggestion.displayAs == "") {
        suggestionText = "\xA0";
      } else {
        var orderCode = rtl ? 8238 : 8237;
        suggestionText = String.fromCharCode(orderCode) + suggestion.displayAs;
      }
      s.innerHTML = suggestionText;
      return s;
    };
    BannerSuggestion2.BASE_ID = "kmw-suggestion-";
    return BannerSuggestion2;
  }();
  var SuggestionBanner = function(_super) {
    (0, build_exports.__extends)(SuggestionBanner2, _super);
    function SuggestionBanner2(hostDevice, height) {
      var _this = _super.call(this, height || Banner.DEFAULT_HEIGHT) || this;
      _this.currentSuggestions = [];
      _this.options = [];
      _this.onSuggestionUpdate = function(suggestions) {
        _this.currentSuggestions = suggestions;
        _this.options.forEach(function(option, i) {
          if (i < suggestions.length) {
            option.update(suggestions[i]);
          } else {
            option.update(null);
          }
        });
      };
      _this.hostDevice = hostDevice;
      _this.getDiv().className = _this.getDiv().className + " " + SuggestionBanner2.BANNER_CLASS;
      _this.buildInternals(false);
      _this.manager = new SuggestionInputManager(_this.getDiv());
      _this.events = _this.manager.events;
      _this.setupInputHandling();
      return _this;
    }
    SuggestionBanner2.prototype.buildInternals = function(rtl) {
      if (this.options.length > 0) {
        this.options.splice(0, this.options.length);
      }
      for (var i = 0; i < SuggestionBanner2.SUGGESTION_LIMIT; i++) {
        var d = new BannerSuggestion(i, rtl);
        this.options[i] = d;
      }
      for (var i = 0; i < SuggestionBanner2.SUGGESTION_LIMIT; i++) {
        var indexToInsert = rtl ? SuggestionBanner2.SUGGESTION_LIMIT - i - 1 : i;
        this.getDiv().appendChild(this.options[indexToInsert].div);
        if (i != SuggestionBanner2.SUGGESTION_LIMIT) {
          var separatorDiv = createUnselectableElement("div");
          separatorDiv.className = "kmw-banner-separator";
          var ds = separatorDiv.style;
          ds.marginLeft = SuggestionBanner2.MARGIN / 2 + "%";
          ds.marginRight = SuggestionBanner2.MARGIN / 2 + "%";
          this.getDiv().appendChild(separatorDiv);
        }
      }
    };
    SuggestionBanner2.prototype.setupInputHandling = function() {
      var _this = this;
      var inputEngine;
      if (this.hostDevice.touchable) {
        inputEngine = this.touchEventConfig;
      } else {
        inputEngine = this.mouseEventConfig;
      }
      inputEngine.registerEventHandlers();
      this.manager.events.on("highlight", function(suggestion, on) {
        var elem = suggestion.div;
        var classes = elem.className;
        var cs = " " + SuggestionBanner2.TOUCHED_CLASS;
        if (on && classes.indexOf(cs) < 0) {
          elem.className = classes + cs;
        } else {
          elem.className = classes.replace(cs, "");
        }
      });
      this.manager.events.on("apply", function(option) {
        if (_this.predictionContext) {
          _this.predictionContext.accept(option.suggestion);
        }
      });
    };
    SuggestionBanner2.prototype.configureForKeyboard = function(keyboard, keyboardProperties) {
      var rtl = keyboard.isRTL;
      this.getDiv().textContent = "";
      this.buildInternals(rtl);
      this.options.forEach(function(option) {
        return option.matchKeyboardProperties(keyboardProperties);
      });
      this.onSuggestionUpdate(this.currentSuggestions);
    };
    Object.defineProperty(SuggestionBanner2.prototype, "mouseEventConfig", {
      get: function() {
        var config = {
          targetRoot: this.getDiv(),
          eventRoot: document.body,
          inputStartHandler: this.manager.touchStart.bind(this.manager),
          inputMoveHandler: this.manager.touchMove.bind(this.manager),
          inputEndHandler: this.manager.touchEnd.bind(this.manager),
          coordConstrainedWithinInteractiveBounds: function() {
            return true;
          }
        };
        return new mouseEventEngine_default(config);
      },
      enumerable: false,
      configurable: true
    });
    Object.defineProperty(SuggestionBanner2.prototype, "touchEventConfig", {
      get: function() {
        var config = {
          targetRoot: this.getDiv(),
          eventRoot: this.getDiv(),
          inputStartHandler: this.manager.touchStart.bind(this.manager),
          inputMoveHandler: this.manager.touchMove.bind(this.manager),
          inputEndHandler: this.manager.touchEnd.bind(this.manager),
          coordConstrainedWithinInteractiveBounds: function() {
            return true;
          }
        };
        return new touchEventEngine_default(config);
      },
      enumerable: false,
      configurable: true
    });
    Object.defineProperty(SuggestionBanner2.prototype, "predictionContext", {
      get: function() {
        return this._predictionContext;
      },
      set: function(context) {
        if (this._predictionContext) {
          this._predictionContext.off("update", this.onSuggestionUpdate);
        }
        this._predictionContext = context;
        if (context) {
          context.on("update", this.onSuggestionUpdate);
          this.onSuggestionUpdate(context.currentSuggestions);
        }
      },
      enumerable: false,
      configurable: true
    });
    SuggestionBanner2.SUGGESTION_LIMIT = 3;
    SuggestionBanner2.MARGIN = 1;
    SuggestionBanner2.TOUCHED_CLASS = "kmw-suggest-touched";
    SuggestionBanner2.BANNER_CLASS = "kmw-suggest-banner";
    return SuggestionBanner2;
  }(Banner);
  var SuggestionInputManager = function(_super) {
    (0, build_exports.__extends)(SuggestionInputManager2, _super);
    function SuggestionInputManager2(div) {
      var _this = _super.call(this, div, Banner.BANNER_CLASS, SuggestionBanner.TOUCHED_CLASS) || this;
      _this.events = new import_eventemitter310.default();
      return _this;
    }
    SuggestionInputManager2.prototype.findTargetFrom = function(e) {
      try {
        if (e) {
          if (e.classList.contains("kmw-suggest-option")) {
            return e;
          }
          if (e.parentElement && e.parentElement.classList.contains("kmw-suggest-option")) {
            return e.parentElement;
          }
        }
      } catch (ex) {
      }
      return null;
    };
    SuggestionInputManager2.prototype.highlight = function(t, on) {
      var suggestion = t["suggestion"];
      if (suggestion.isEmpty()) {
        on = false;
      }
      this.events.emit("highlight", suggestion, on);
    };
    SuggestionInputManager2.prototype.select = function(t) {
      this.events.emit("apply", t["suggestion"]);
    };
    SuggestionInputManager2.prototype.hold = function(t) {
      this.events.emit("hold", t["suggestion"]);
    };
    SuggestionInputManager2.prototype.clearHolds = function() {
    };
    SuggestionInputManager2.prototype.hasModalPopup = function() {
      return this.eventsBlocked;
    };
    SuggestionInputManager2.prototype.dealiasSubTarget = function(target) {
      return target;
    };
    SuggestionInputManager2.prototype.hasSubmenu = function(t) {
      return false;
    };
    SuggestionInputManager2.prototype.isSubmenuActive = function() {
      return false;
    };
    SuggestionInputManager2.prototype.displaySubmenuFor = function(target) {
      throw new Error("Method not implemented.");
    };
    Object.defineProperty(SuggestionInputManager2.prototype, "eventsBlocked", {
      get: function() {
        return !!this.eventDisablePromise;
      },
      enumerable: false,
      configurable: true
    });
    SuggestionInputManager2.prototype.temporarilyBlockEvents = function(promise) {
      var _this = this;
      this.eventDisablePromise = promise;
      promise.finally(function() {
        _this.eventDisablePromise = null;
      });
    };
    return SuggestionInputManager2;
  }(uiTouchHandlerBase_default);

  // ../../../build/engine/osk/obj/lengthStyle.js
  var ParsedLengthStyle = /* @__PURE__ */ function() {
    function ParsedLengthStyle2(style) {
      var parsed = typeof style == "string" ? ParsedLengthStyle2.parseLengthStyle(style) : style;
      this.val = parsed.val;
      this.absolute = parsed.absolute;
      if (parsed.special) {
        this.special = parsed.special;
      }
    }
    Object.defineProperty(ParsedLengthStyle2.prototype, "styleString", {
      get: function() {
        if (this.absolute) {
          return this.val + "px";
        } else if (this.special) {
          return this.val + this.special;
        } else {
          return this.val * 100 + "%";
        }
      },
      enumerable: false,
      configurable: true
    });
    ParsedLengthStyle2.prototype.scaledBy = function(scalar) {
      return new ParsedLengthStyle2({
        val: scalar * this.val,
        absolute: this.absolute
      });
    };
    ParsedLengthStyle2.inPixels = function(val) {
      return new ParsedLengthStyle2({ val: val, absolute: true });
    };
    ParsedLengthStyle2.inPercent = function(val) {
      return new ParsedLengthStyle2({ val: val / 100, absolute: false });
    };
    ParsedLengthStyle2.forScalar = function(val) {
      return new ParsedLengthStyle2({ val: val, absolute: false });
    };
    ParsedLengthStyle2.special = function(val, suffix) {
      return new ParsedLengthStyle2({ val: val, absolute: false, special: suffix });
    };
    ParsedLengthStyle2.parseLengthStyle = function(spec) {
      var val = parseFloat(spec);
      if (isNaN(val)) {
        console.error("Could not properly parse specified length style info: '" + spec + "'.");
        return null;
      }
      return spec.indexOf("px") != -1 ? { val: val, absolute: true } : spec.indexOf("pt") != -1 ? { val: 4 * val / 3, absolute: true } : spec.indexOf("%") != -1 ? { val: val / 100, absolute: false } : spec.indexOf("rem") != -1 ? { val: val, absolute: false, special: "rem" } : spec.indexOf("em") != -1 ? { val: val, absolute: false, special: "em" } : { val: 4 * val / 3, absolute: true };
    };
    return ParsedLengthStyle2;
  }();

  // ../../../build/engine/osk/obj/banner/bannerView.js
  var BannerView = /* @__PURE__ */ function() {
    function BannerView2() {
      this._activeBannerHeight = Banner.DEFAULT_HEIGHT;
      this.events = new import_eventemitter311.default();
      this.constructContainer();
    }
    BannerView2.prototype.constructContainer = function() {
      var d = createUnselectableElement("div");
      d.id = "keymanweb_banner_container";
      d.className = "kmw-banner-container";
      return this.bannerContainer = d;
    };
    Object.defineProperty(BannerView2.prototype, "element", {
      get: function() {
        return this.bannerContainer;
      },
      enumerable: false,
      configurable: true
    });
    BannerView2.prototype.appendStyles = function() {
      if (this.activeBanner) {
        this.activeBanner.appendStyleSheet();
      }
    };
    Object.defineProperty(BannerView2.prototype, "banner", {
      get: function() {
        return this.activeBanner;
      },
      set: function(banner) {
        if (this.activeBanner) {
          if (banner == this.activeBanner) {
            return;
          } else {
            var prevBanner = this.activeBanner;
            this.activeBanner = banner;
            this.bannerContainer.replaceChild(banner.getDiv(), prevBanner.getDiv());
          }
        } else {
          this.activeBanner = banner;
          if (banner) {
            this.bannerContainer.appendChild(banner.getDiv());
          }
        }
        if (!(banner instanceof BlankBanner)) {
          banner.height = this.activeBannerHeight;
        }
        this.events.emit("bannerchange");
      },
      enumerable: false,
      configurable: true
    });
    Object.defineProperty(BannerView2.prototype, "height", {
      get: function() {
        if (this.activeBanner) {
          return this.activeBanner.height;
        } else {
          return 0;
        }
      },
      enumerable: false,
      configurable: true
    });
    Object.defineProperty(BannerView2.prototype, "activeBannerHeight", {
      get: function() {
        return this._activeBannerHeight;
      },
      set: function(h) {
        this._activeBannerHeight = h;
        if (this.activeBanner && !(this.activeBanner instanceof BlankBanner)) {
          this.activeBanner.height = h;
        }
      },
      enumerable: false,
      configurable: true
    });
    Object.defineProperty(BannerView2.prototype, "layoutHeight", {
      get: function() {
        return ParsedLengthStyle.inPixels(this.height);
      },
      enumerable: false,
      configurable: true
    });
    BannerView2.prototype.refreshLayout = function() {
    };
    ;
    return BannerView2;
  }();
  var bannerView_default = BannerView;
  var BannerController = function() {
    function BannerController2(bannerView, hostDevice, predictionContext) {
      this._options = {};
      this.imagePath = "";
      this.hostDevice = hostDevice;
      this.container = bannerView;
      this.predictionContext = predictionContext;
      this.setOptions(BannerController2.DEFAULT_OPTIONS);
    }
    BannerController2.prototype.getOptions = function() {
      var retObj = {};
      for (var key in this._options) {
        retObj[key] = this._options[key];
      }
      return retObj;
    };
    BannerController2.prototype.setOptions = function(optionSpec) {
      for (var key in optionSpec) {
        switch (key) {
          case "alwaysShow":
            this.alwaysShow = optionSpec[key];
            break;
          case "imagePath":
            this.imagePath = optionSpec[key];
            break;
          default:
        }
        this._options[key] = optionSpec[key];
        if (!this.container.banner) {
          this.selectBanner("inactive");
        }
      }
    };
    BannerController2.prototype.setBanner = function(type) {
      var _this = this;
      var banner;
      var oldBanner = this.container.banner;
      if (oldBanner instanceof SuggestionBanner) {
        this.predictionContext.off("update", oldBanner.onSuggestionUpdate);
      }
      switch (type) {
        case "blank":
          banner = new BlankBanner();
          break;
        case "image":
          banner = new ImageBanner(this.imagePath, this.container.activeBannerHeight);
          break;
        case "suggestion":
          var suggestBanner = banner = new SuggestionBanner(this.hostDevice, this.container.activeBannerHeight);
          suggestBanner.predictionContext = this.predictionContext;
          suggestBanner.events.on("apply", function(selection) {
            return _this.predictionContext.accept(selection.suggestion);
          });
          this.predictionContext.on("update", suggestBanner.onSuggestionUpdate);
          break;
        default:
          throw new Error("Invalid type specified for the banner!");
      }
      this._activeType = type;
      if (banner) {
        this.container.banner = banner;
      }
    };
    BannerController2.prototype.selectBanner = function(state) {
      if (state == "active" || state == "configured") {
        this.setBanner("suggestion");
      } else if (state == "inactive") {
        if (this.alwaysShow) {
          this.setBanner("image");
        } else {
          this.setBanner("blank");
        }
      }
    };
    Object.defineProperty(BannerController2.prototype, "activeType", {
      get: function() {
        return this._activeType;
      },
      enumerable: false,
      configurable: true
    });
    BannerController2.DEFAULT_OPTIONS = {
      alwaysShow: false,
      imagePath: ""
    };
    return BannerController2;
  }();

  // ../../../build/engine/osk/obj/components/emptyView.js
  var EmptyView = /* @__PURE__ */ function() {
    function EmptyView2() {
      var Ldiv = this.element = document.createElement("div");
      Ldiv.style.userSelect = "none";
      Ldiv.className = "kmw-osk-none";
    }
    EmptyView2.prototype.postInsert = function() {
    };
    EmptyView2.prototype.updateState = function() {
    };
    EmptyView2.prototype.refreshLayout = function() {
    };
    Object.defineProperty(EmptyView2.prototype, "layoutHeight", {
      get: function() {
        return ParsedLengthStyle.inPixels(0);
      },
      enumerable: false,
      configurable: true
    });
    return EmptyView2;
  }();
  var emptyView_default = EmptyView;

  // ../../../build/engine/osk/obj/components/helpPageView.js
  var HelpPageView = /* @__PURE__ */ function() {
    function HelpPageView2(keyboard) {
      this.kbd = keyboard;
      var Ldiv = this.element = document.createElement("div");
      Ldiv.style.userSelect = "none";
      Ldiv.className = "kmw-osk-static";
      Ldiv.id = HelpPageView2.ID;
      Ldiv.innerHTML = keyboard.helpText;
    }
    HelpPageView2.prototype.postInsert = function() {
      if (!this.element.parentElement || !document.getElementById(HelpPageView2.ID)) {
        throw new Error("The HelpPage root element has not yet been inserted into the DOM.");
      }
      if (this.kbd.hasScript) {
        this.kbd.embedScript(this.element.parentElement);
      }
    };
    HelpPageView2.prototype.updateState = function() {
    };
    HelpPageView2.prototype.refreshLayout = function() {
    };
    Object.defineProperty(HelpPageView2.prototype, "layoutHeight", {
      get: function() {
        return ParsedLengthStyle.inPercent(100);
      },
      enumerable: false,
      configurable: true
    });
    HelpPageView2.ID = "kmw-osk-help-page";
    return HelpPageView2;
  }();
  var helpPageView_default = HelpPageView;

  // ../../../build/engine/osk/obj/visualKeyboard.js
  var import_eventemitter312 = __toESM(require_eventemitter3(), 1);

  // ../../../build/engine/osk/obj/fontSizeUtils.js
  function getFontSizeStyle(e) {
    var fs;
    if (typeof e == "string") {
      fs = e;
    } else {
      fs = e.style.fontSize;
      if (!fs) {
        fs = getComputedStyle(e).fontSize;
      }
    }
    return new ParsedLengthStyle(fs);
  }
  function defaultFontSize(device, computedHeight, isEmbedded) {
    if (device.touchable) {
      var fontScale = device.formFactor == "phone" ? 1.6 * (isEmbedded ? 0.65 : 0.6) * 1.2 : 2;
      return ParsedLengthStyle.special(fontScale, "em");
    } else {
      return computedHeight ? ParsedLengthStyle.inPixels(computedHeight / 8) : void 0;
    }
  }

  // ../../../build/engine/osk/obj/specialCharacters.js
  var specialCharacters = {
    "*Shift*": 8,
    "*Enter*": 5,
    "*Tab*": 6,
    "*BkSp*": 4,
    "*Menu*": 11,
    "*Hide*": 10,
    "*Alt*": 25,
    "*Ctrl*": 1,
    "*Caps*": 3,
    "*ABC*": 16,
    "*abc*": 17,
    "*123*": 19,
    "*Symbol*": 21,
    "*Currency*": 20,
    "*Shifted*": 9,
    "*AltGr*": 2,
    "*TabLeft*": 7,
    "*LAlt*": 86,
    "*RAlt*": 87,
    "*LCtrl*": 88,
    "*RCtrl*": 89,
    "*LAltCtrl*": 96,
    "*RAltCtrl*": 97,
    "*LAltCtrlShift*": 98,
    "*RAltCtrlShift*": 99,
    "*AltShift*": 100,
    "*CtrlShift*": 101,
    "*AltCtrlShift*": 102,
    "*LAltShift*": 103,
    "*RAltShift*": 104,
    "*LCtrlShift*": 105,
    "*RCtrlShift*": 112,
    "*LTREnter*": 5,
    "*LTRBkSp*": 4,
    "*RTLEnter*": 113,
    "*RTLBkSp*": 114,
    "*ShiftLock*": 115,
    "*ShiftedLock*": 116,
    "*ZWNJ*": 117,
    "*ZWNJiOS*": 117,
    "*ZWNJAndroid*": 118,
    "*ZWNJGeneric*": 121,
    "*Sp*": 128,
    "*NBSp*": 130,
    "*NarNBSp*": 131,
    "*EnQ*": 132,
    "*EmQ*": 133,
    "*EnSp*": 134,
    "*EmSp*": 135,
    "*PunctSp*": 140,
    "*ThSp*": 141,
    "*HSp*": 142,
    "*ZWSp*": 129,
    "*ZWJ*": 119,
    "*WJ*": 120,
    "*CGJ*": 122,
    "*LTRM*": 144,
    "*RTLM*": 145,
    "*SH*": 161,
    "*HTab*": 162
  };
  var specialCharacters_default = specialCharacters;

  // ../../../build/engine/osk/obj/buttonClassNames.js
  var BUTTON_CLASSES = [
    "default",
    "shift",
    "shift-on",
    "special",
    "special-on",
    "",
    "",
    "",
    "deadkey",
    "blank",
    "hidden"
  ];
  var buttonClassNames_default = BUTTON_CLASSES;

  // ../../../build/engine/osk/obj/keyboard-layout/oskKey.js
  var OSKKeySpec = /* @__PURE__ */ function() {
    function OSKKeySpec2(id, text, width, sp, nextlayer, pad) {
      this.id = id;
      this.text = text;
      this.width = width ? width : 50;
      this.sp = sp;
      this.nextlayer = nextlayer;
      this.pad = pad;
    }
    return OSKKeySpec2;
  }();
  var OSKKey = function() {
    function OSKKey2(spec, layer) {
      this.spec = spec;
      this.layer = layer;
    }
    OSKKey2.prototype.setButtonClass = function() {
      var _a;
      var key = this.spec;
      var btn = this.btn;
      var n = 0;
      if (typeof key["dk"] == "string" && key["dk"] == "1") {
        n = 8;
      }
      n = (_a = key["sp"]) !== null && _a !== void 0 ? _a : n;
      if (n < 0 || n > 10) {
        n = 0;
      }
      btn.className = "kmw-key kmw-key-" + buttonClassNames_default[n];
    };
    OSKKey2.prototype.setToggleState = function(flag) {
      var btnClassId;
      btnClassId = this.spec["sp"];
      switch (buttonClassNames_default[btnClassId]) {
        case "shift":
        case "shift-on":
          if (flag === void 0) {
            flag = buttonClassNames_default[btnClassId] == "shift";
          }
          this.spec["sp"] = 1 + (flag ? 1 : 0);
          break;
        case "special":
        case "special-on":
          if (flag === void 0) {
            flag = buttonClassNames_default[btnClassId] == "special";
          }
          this.spec["sp"] = 3 + (flag ? 1 : 0);
          break;
        default:
          return;
      }
      this.setButtonClass();
    };
    OSKKey2.prototype.isFrameKey = function() {
      var classIndex = this.spec["sp"] || 0;
      switch (buttonClassNames_default[classIndex]) {
        case "default":
        case "deadkey":
          return false;
        default:
          return true;
      }
    };
    OSKKey2.prototype.allowsKeyTip = function() {
      if (this.isFrameKey()) {
        return false;
      } else {
        return !this.btn.classList.contains("kmw-spacebar");
      }
    };
    OSKKey2.prototype.highlight = function(on) {
      var classes = this.btn.classList;
      if (on) {
        if (!classes.contains(OSKKey2.HIGHLIGHT_CLASS)) {
          classes.add(OSKKey2.HIGHLIGHT_CLASS);
        }
      } else {
        classes.remove(OSKKey2.HIGHLIGHT_CLASS);
      }
    };
    OSKKey2.getTextMetrics = function(text, emScale, style) {
      style = {
        fontFamily: style.fontFamily,
        fontSize: style.fontSize
      };
      if (!style.fontFamily) {
        style.fontFamily = getComputedStyle(document.body).fontFamily;
      }
      if (!style.fontSize || style.fontSize == "") {
        style.fontSize = "1em";
      }
      var fontFamily = style.fontFamily;
      var fontSpec = getFontSizeStyle(style.fontSize);
      var fontSize;
      if (fontSpec.absolute) {
        fontSize = fontSpec.val + "px";
      } else {
        fontSize = fontSpec.val * emScale + "px";
      }
      var canvas = OSKKey2.getTextMetrics["canvas"] || (OSKKey2.getTextMetrics["canvas"] = document.createElement("canvas"));
      var context = canvas.getContext("2d");
      context.font = fontSize + " " + fontFamily;
      var metrics = context.measureText(text);
      return metrics;
    };
    OSKKey2.prototype.getIdealFontSize = function(vkbd, text, style, override) {
      var buttonStyle = getComputedStyle(this.btn);
      var keyWidth = parseFloat(buttonStyle.width);
      var emScale = 1;
      var originalSize = getFontSizeStyle(style.fontSize || "1em");
      if (!buttonStyle.fontSize) {
        emScale = vkbd.getKeyEmFontSize();
        keyWidth = this.getKeyWidth(vkbd);
      } else if (!override) {
        style = buttonStyle;
      }
      var fontSpec = getFontSizeStyle(style.fontSize || "1em");
      var metrics = OSKKey2.getTextMetrics(text, emScale, style);
      var MAX_X_PROPORTION = 0.9;
      var MAX_Y_PROPORTION = 0.9;
      var X_PADDING = 2;
      var Y_PADDING = 2;
      var fontHeight, keyHeight;
      if (metrics.fontBoundingBoxAscent) {
        fontHeight = metrics.fontBoundingBoxAscent + metrics.fontBoundingBoxDescent;
      }
      var textHeight = fontHeight ? fontHeight + Y_PADDING : 0;
      if (style.height && style.height.indexOf("px") != -1) {
        keyHeight = Number.parseFloat(style.height.substring(0, style.height.indexOf("px")));
      }
      var xProportion = keyWidth * MAX_X_PROPORTION / (metrics.width + X_PADDING);
      var yProportion = textHeight && keyHeight ? keyHeight * MAX_Y_PROPORTION / textHeight : void 0;
      var proportion = xProportion;
      if (yProportion && yProportion < xProportion) {
        proportion = yProportion;
      }
      if (proportion < 1) {
        if (originalSize.absolute) {
          return proportion * fontSpec.val + "px";
        } else {
          return proportion * originalSize.val + "em";
        }
      } else {
        if (originalSize.absolute) {
          return fontSpec.val + "px";
        } else {
          return originalSize.val + "em";
        }
      }
    };
    OSKKey2.prototype.getKeyWidth = function(vkbd) {
      var key = this.spec;
      return key.proportionalWidth * vkbd.width;
    };
    OSKKey2.prototype.renameSpecialKey = function(oldText, vkbd) {
      switch (oldText) {
        case "*ZWNJ*":
          oldText = vkbd.device.OS == deviceSpec_default.OperatingSystem.Android ? "*ZWNJAndroid*" : "*ZWNJiOS*";
          break;
        case "*Enter*":
          oldText = vkbd.isRTL ? "*RTLEnter*" : "*LTREnter*";
          break;
        case "*BkSp*":
          oldText = vkbd.isRTL ? "*RTLBkSp*" : "*LTRBkSp*";
          break;
        default:
      }
      var specialCodePUA = 57344 + specialCharacters_default[oldText];
      return specialCharacters_default[oldText] ? String.fromCharCode(specialCodePUA) : oldText;
    };
    Object.defineProperty(OSKKey2.prototype, "keyText", {
      get: function() {
        var spec = this.spec;
        var DEFAULT_BLANK = "\xA0";
        var keyText = null;
        if (spec["text"] == null || spec["text"] == "") {
          if (typeof spec["id"] == "string") {
            keyText = ActiveKey.unicodeIDToText(spec["id"]);
          }
          keyText = keyText || DEFAULT_BLANK;
        } else {
          keyText = spec["text"];
          if (keyText == "*Tab*" && this.layer == "shift") {
            keyText = "*TabLeft*";
          }
        }
        return keyText;
      },
      enumerable: false,
      configurable: true
    });
    OSKKey2.prototype.generateKeyText = function(vkbd) {
      var spec = this.spec;
      var t = document.createElement("span"), ts = t.style;
      t.className = "kmw-key-text";
      var keyText = this.keyText;
      var specialText = this.renameSpecialKey(keyText, vkbd);
      if (specialText != keyText) {
        keyText = specialText;
        spec["font"] = "SpecialOSK";
      }
      if (typeof spec["font"] == "string" && spec["font"] != "") {
        ts.fontFamily = spec["font"];
      }
      if (typeof spec["fontsize"] == "string" && spec["fontsize"] != "") {
        ts.fontSize = spec["fontsize"];
      }
      var styleSpec = { fontSize: ts.fontSize };
      if (ts.fontFamily) {
        styleSpec.fontFamily = ts.fontFamily;
      } else {
        styleSpec.fontFamily = vkbd.fontFamily;
      }
      var emScale = vkbd.getKeyEmFontSize();
      var width = OSKKey2.getTextMetrics(keyText, emScale, styleSpec).width;
      if (width == 0 && keyText != "" && keyText != "\xA0") {
        if (vkbd.isRTL) {
          keyText = "\u200F" + keyText;
        }
      }
      ts.fontSize = this.getIdealFontSize(vkbd, keyText, styleSpec);
      t.innerText = keyText;
      return t;
    };
    OSKKey2.prototype.isUnderTouch = function(input) {
      var x = input.x;
      var y = input.y;
      var btn = this.btn;
      var x0 = getAbsoluteX(btn);
      var y0 = getAbsoluteY(btn);
      var x1 = x0 + btn.offsetWidth;
      var y1 = y0 + btn.offsetHeight;
      return x > x0 && x < x1 && y > y0 && y < y1;
    };
    OSKKey2.prototype.refreshLayout = function(vkbd) {
      if (this.label) {
        if (!this.label.classList.contains("kmw-spacebar-caption")) {
          this.label.style.fontSize = this.getIdealFontSize(vkbd, this.keyText, this.btn.style);
        } else {
          this.label.style.fontSize = "";
          var fontSize = this.getIdealFontSize(vkbd, this.label.textContent, getComputedStyle(this.label), true);
          this.label.style.setProperty("font-size", fontSize, "important");
        }
      }
    };
    OSKKey2.specialCharacters = specialCharacters_default;
    OSKKey2.BUTTON_CLASSES = buttonClassNames_default;
    OSKKey2.HIGHLIGHT_CLASS = "kmw-key-touched";
    return OSKKey2;
  }();
  var oskKey_default = OSKKey;

  // ../../../build/engine/osk/obj/keyElement.js
  var KeyData = /* @__PURE__ */ function() {
    function KeyData2(keyData, keyId) {
      this["key"] = keyData;
      this["keyId"] = keyId;
    }
    return KeyData2;
  }();
  function link(elem, data) {
    var e = elem;
    for (var id in data) {
      if (!e.hasOwnProperty(id)) {
        e[id] = data[id];
      }
    }
    return e;
  }
  function isKey(elem) {
    return elem && "key" in elem && elem["key"] instanceof oskKey_default;
  }
  function getKeyFrom(elem) {
    if (isKey(elem)) {
      return elem;
    } else {
      return null;
    }
  }

  // ../../../build/engine/osk/obj/keyboard-layout/oskBaseKey.js
  var OSKBaseKey = /* @__PURE__ */ function(_super) {
    (0, build_exports.__extends)(OSKBaseKey2, _super);
    function OSKBaseKey2(spec, layer, row) {
      var _this = _super.call(this, spec, layer) || this;
      _this.row = row;
      return _this;
    }
    OSKBaseKey2.prototype.getId = function() {
      return this.spec.elementID;
    };
    OSKBaseKey2.prototype.getCoreId = function() {
      return this.spec.coreID;
    };
    OSKBaseKey2.prototype.getBaseId = function() {
      return this.spec.baseKeyID;
    };
    OSKBaseKey2.prototype.generateKeyCapLabel = function() {
      var x = codes_default.keyCodes[this.spec.baseKeyID];
      switch (x) {
        case 186:
          x = 59;
          break;
        case 187:
          x = 61;
          break;
        case 188:
          x = 44;
          break;
        case 189:
          x = 45;
          break;
        case 190:
          x = 46;
          break;
        case 191:
          x = 47;
          break;
        case 192:
          x = 96;
          break;
        case 219:
          x = 91;
          break;
        case 220:
          x = 92;
          break;
        case 221:
          x = 93;
          break;
        case 222:
          x = 39;
          break;
        default:
          if (x < 48 || x > 90) {
            x = 0;
          }
      }
      var q = document.createElement("div");
      q.className = "kmw-key-label";
      if (x > 0) {
        q.innerText = String.fromCharCode(x);
      } else {
      }
      return q;
    };
    OSKBaseKey2.prototype.processSubkeys = function(btn, vkbd) {
      var bsn, bsk = btn["subKeys"] = this.spec["sk"];
      for (bsn = 0; bsn < bsk.length; bsn++) {
        if (bsk[bsn]["sp"] == 1 || bsk[bsn]["sp"] == 2) {
          var oldText = bsk[bsn]["text"];
          bsk[bsn]["text"] = this.renameSpecialKey(oldText, vkbd);
        }
        if (!bsk[bsn].layer) {
          bsk[bsn].layer = btn.key.layer;
        }
      }
      var skIcon = document.createElement("div");
      skIcon.className = "kmw-key-popup-icon";
      btn.appendChild(skIcon);
    };
    OSKBaseKey2.prototype.construct = function(vkbd) {
      var spec = this.spec;
      var kDiv = document.createElement("div");
      kDiv.className = "kmw-key-square";
      var btnEle = document.createElement("div");
      var btn = this.btn = link(btnEle, new KeyData(this, spec["id"]));
      this.setButtonClass();
      var keyCap = this.capLabel = this.generateKeyCapLabel();
      btn.appendChild(keyCap);
      btn.id = this.getId();
      btn.appendChild(this.label = this.generateKeyText(vkbd));
      if (typeof spec["sk"] != "undefined" && spec["sk"] != null) {
        this.processSubkeys(btn, vkbd);
      } else {
        btn["subKeys"] = null;
      }
      kDiv.appendChild(btn);
      return this.square = kDiv;
    };
    OSKBaseKey2.prototype.refreshLayout = function(vkbd) {
      var key = this.spec;
      this.square.style.width = vkbd.layoutWidth.scaledBy(key.proportionalWidth).styleString;
      this.square.style.marginLeft = vkbd.layoutWidth.scaledBy(key.proportionalPad).styleString;
      this.btn.style.width = vkbd.usesFixedWidthScaling ? this.square.style.width : "100%";
      if (vkbd.usesFixedHeightScaling) {
        this.square.style.height = vkbd.internalHeight.scaledBy(this.row.heightFraction).styleString;
      } else {
        this.square.style.height = "100%";
      }
      _super.prototype.refreshLayout.call(this, vkbd);
      var device = vkbd.device;
      var resizeLabels = device.OS == deviceSpec_default.OperatingSystem.iOS && device.formFactor == deviceSpec_default.FormFactor.Phone && landscapeView();
      if (resizeLabels && this.capLabel) {
        this.capLabel.style.fontSize = "6px";
      }
    };
    Object.defineProperty(OSKBaseKey2.prototype, "displaysKeyCap", {
      get: function() {
        return this.capLabel && this.capLabel.style.display == "block";
      },
      set: function(flag) {
        if (!this.capLabel) {
          throw new Error("Key element not yet constructed; cannot display key cap");
        }
        this.capLabel.style.display = flag ? "block" : "none";
      },
      enumerable: false,
      configurable: true
    });
    return OSKBaseKey2;
  }(oskKey_default);
  var oskBaseKey_default = OSKBaseKey;

  // ../../../build/engine/osk/obj/keyboard-layout/oskRow.js
  var OSKRow = /* @__PURE__ */ function() {
    function OSKRow2(vkbd, layerSpec, rowSpec) {
      var rDiv = this.element = document.createElement("div");
      rDiv.className = "kmw-key-row";
      this.heightFraction = 1 / layerSpec.row.length;
      var keys = rowSpec.key;
      this.keys = [];
      for (var j = 0; j < keys.length; j++) {
        var key = keys[j];
        var keyObj = new oskBaseKey_default(key, layerSpec.id, this);
        var element = keyObj.construct(vkbd);
        this.keys.push(keyObj);
        rDiv.appendChild(element);
      }
    }
    Object.defineProperty(OSKRow2.prototype, "displaysKeyCaps", {
      get: function() {
        if (this.keys.length > 0) {
          return this.keys[0].displaysKeyCap;
        } else {
          return void 0;
        }
      },
      set: function(flag) {
        for (var _i = 0, _a = this.keys; _i < _a.length; _i++) {
          var key = _a[_i];
          key.displaysKeyCap = flag;
        }
      },
      enumerable: false,
      configurable: true
    });
    OSKRow2.prototype.refreshLayout = function(vkbd) {
      var rs = this.element.style;
      var rowHeight = vkbd.internalHeight.scaledBy(this.heightFraction);
      rs.maxHeight = rs.lineHeight = rs.height = rowHeight.styleString;
      var padRatio = 0.15;
      var keyHeightBase = vkbd.usesFixedHeightScaling ? rowHeight : ParsedLengthStyle.forScalar(1);
      var padTop = keyHeightBase.scaledBy(padRatio / 2);
      var keyHeight = keyHeightBase.scaledBy(1 - padRatio);
      for (var _i = 0, _a = this.keys; _i < _a.length; _i++) {
        var key = _a[_i];
        var keySquare = key.btn.parentElement;
        var keyElement = key.btn;
        var kss = keySquare.style;
        kss.height = kss.minHeight = keyHeightBase.styleString;
        var kes = keyElement.style;
        kes.top = padTop.styleString;
        kes.height = kes.lineHeight = kes.minHeight = keyHeight.styleString;
        if (keyElement.key) {
          keyElement.key.refreshLayout(vkbd);
        }
      }
    };
    return OSKRow2;
  }();
  var oskRow_default = OSKRow;

  // ../../../build/engine/osk/obj/keyboard-layout/oskLayer.js
  var OSKLayer = /* @__PURE__ */ function() {
    function OSKLayer2(vkbd, layout, layer) {
      this.spec = layer;
      var gDiv = this.element = document.createElement("div");
      var gs = gDiv.style;
      gDiv.className = "kmw-key-layer";
      var nRows = layer["row"].length;
      if (nRows > 4 && vkbd.device.formFactor == "phone") {
        gDiv.className = gDiv.className + " kmw-5rows";
      }
      gs.fontFamily = "font" in layout ? layout["font"] : "";
      this.nextlayer = gDiv["layer"] = layer["id"];
      if (typeof layer["nextlayer"] == "string") {
        gDiv["nextLayer"] = this.nextlayer = layer["nextlayer"];
      }
      var rows = layer["row"];
      this.rows = [];
      for (var i = 0; i < rows.length; i++) {
        var rowObj = new oskRow_default(vkbd, layer, rows[i]);
        rowObj.displaysKeyCaps = layout["displayUnderlying"];
        gDiv.appendChild(rowObj.element);
        this.rows.push(rowObj);
      }
      if (vkbd.device.touchable) {
        this.globeKey = this.findKey("K_LOPT");
        this.hideKey = this.findKey("K_ROPT");
      }
      this.spaceBarKey = this.findKey("K_SPACE");
      this.capsKey = this.findKey("K_CAPS");
      this.numKey = this.findKey("K_NUMLOCK");
      this.scrollKey = this.findKey("K_SCROLL");
    }
    Object.defineProperty(OSKLayer2.prototype, "rowHeight", {
      get: function() {
        return this._rowHeight;
      },
      enumerable: false,
      configurable: true
    });
    Object.defineProperty(OSKLayer2.prototype, "id", {
      get: function() {
        return this.spec.id;
      },
      enumerable: false,
      configurable: true
    });
    OSKLayer2.prototype.findKey = function(keyId) {
      for (var _i = 0, _a = this.rows; _i < _a.length; _i++) {
        var row = _a[_i];
        for (var _b = 0, _c = row.keys; _b < _c.length; _b++) {
          var key = _c[_b];
          if (key.getBaseId() == keyId) {
            return key;
          }
        }
      }
      return null;
    };
    OSKLayer2.prototype.refreshLayout = function(vkbd, layerHeight) {
      var nRows = this.rows.length;
      var rowHeight = this._rowHeight = Math.floor(layerHeight / (nRows == 0 ? 1 : nRows));
      if (vkbd.usesFixedHeightScaling) {
        this.element.style.height = layerHeight + "px";
      }
      for (var nRow = 0; nRow < nRows; nRow++) {
        var oskRow = this.rows[nRow];
        var bottom = (nRows - nRow - 1) * rowHeight + 1;
        if (vkbd.usesFixedHeightScaling) {
          this.spec.row[nRow].proportionalY = (layerHeight - bottom - rowHeight / 2) / layerHeight;
          if (nRow == nRows - 1) {
            oskRow.element.style.bottom = "1px";
          }
        }
        oskRow.refreshLayout(vkbd);
      }
    };
    return OSKLayer2;
  }();
  var oskLayer_default = OSKLayer;

  // ../../../build/engine/osk/obj/keyboard-layout/oskLayerGroup.js
  var OSKLayerGroup = /* @__PURE__ */ function() {
    function OSKLayerGroup2(vkbd, keyboard, formFactor) {
      this.layers = {};
      var layout = keyboard.layout(formFactor);
      var lDiv = this.element = document.createElement("div");
      var ls = lDiv.style;
      lDiv.className = "kmw-key-layer-group";
      if (layout == null) {
        return;
      }
      var layoutFS = layout["fontsize"];
      if (typeof layoutFS == "undefined" || layoutFS == null || layoutFS == "") {
        ls.fontSize = "1em";
      } else {
        ls.fontSize = layout["fontsize"];
      }
      ls.width = "100%";
      ls.height = "100%";
      var n, i, j;
      var layers;
      layers = layout["layer"];
      var tKey = vkbd.getDefaultKeyObject();
      tKey["fontsize"] = ls.fontSize;
      for (n = 0; n < layers.length; n++) {
        var layer = layers[n];
        var layerObj = new oskLayer_default(vkbd, layout, layer);
        this.layers[layer.id] = layerObj;
        layerObj.element.style.display = layer.id == "default" ? "block" : "none";
        lDiv.appendChild(layerObj.element);
      }
    }
    return OSKLayerGroup2;
  }();
  var oskLayerGroup_default = OSKLayerGroup;

  // ../../../build/engine/osk/obj/input/gestures/browser/pendingMultiTap.js
  var PendingMultiTapState;
  (function(PendingMultiTapState2) {
    PendingMultiTapState2[PendingMultiTapState2["Waiting"] = 0] = "Waiting";
    PendingMultiTapState2[PendingMultiTapState2["Realized"] = 1] = "Realized";
    PendingMultiTapState2[PendingMultiTapState2["Cancelled"] = 2] = "Cancelled";
  })(PendingMultiTapState || (PendingMultiTapState = {}));
  var PendingMultiTap = /* @__PURE__ */ function() {
    function PendingMultiTap2(vkbd, baseKey, count) {
      var _a, _b, _c;
      this._touches = 1;
      this._state = PendingMultiTapState.Waiting;
      this.cancelDelayFactor = 125;
      this.vkbd = vkbd;
      this.count = count;
      this.baseKey = baseKey;
      this._destinationLayerId = "caps";
      var multitap = (_b = (_a = baseKey === null || baseKey === void 0 ? void 0 : baseKey.key) === null || _a === void 0 ? void 0 : _a.spec) === null || _b === void 0 ? void 0 : _b["multitap"];
      if ((multitap === null || multitap === void 0 ? void 0 : multitap.length) && ((_c = multitap[0]) === null || _c === void 0 ? void 0 : _c["nextlayer"])) {
        this._destinationLayerId = multitap[0]["nextlayer"];
      }
      var _this = this;
      this._timeout = new Promise(function(resolve) {
        _this.timerId = window.setTimeout(function() {
          _this.cancel();
          resolve();
        }, _this.cancelDelayFactor * _this.count);
      });
    }
    Object.defineProperty(PendingMultiTap2.prototype, "timeout", {
      get: function() {
        return this._timeout;
      },
      enumerable: false,
      configurable: true
    });
    Object.defineProperty(PendingMultiTap2.prototype, "realized", {
      get: function() {
        return this._state == PendingMultiTapState.Realized;
      },
      enumerable: false,
      configurable: true
    });
    Object.defineProperty(PendingMultiTap2.prototype, "cancelled", {
      get: function() {
        return this._state == PendingMultiTapState.Cancelled;
      },
      enumerable: false,
      configurable: true
    });
    PendingMultiTap2.isValidTarget = function(vkbd, baseKey) {
      return baseKey["keyId"].indexOf("K_SHIFT") >= 0 && vkbd.layerGroup.layers["caps"] && !baseKey["subKeys"] && vkbd.touchCount == 1;
    };
    PendingMultiTap2.prototype.cleanup = function() {
      if (this.timerId) {
        window.clearTimeout(this.timerId);
      }
      this.timerId = null;
    };
    PendingMultiTap2.prototype.cancel = function() {
      this._state = PendingMultiTapState.Cancelled;
      this.cleanup();
    };
    PendingMultiTap2.prototype.incrementTouch = function(newKey) {
      var _a;
      if (this._state == PendingMultiTapState.Waiting) {
        if (!((_a = newKey === null || newKey === void 0 ? void 0 : newKey["keyId"]) === null || _a === void 0 ? void 0 : _a.includes("K_SHIFT"))) {
          this.cancel();
        } else if (++this._touches == this.count) {
          this.realize();
        }
      }
      return this._state;
    };
    PendingMultiTap2.prototype.realize = function() {
      if (this._state != PendingMultiTapState.Waiting) {
        return;
      }
      this._state = PendingMultiTapState.Realized;
      this.cleanup();
      var e = keyEvent_default.constructNullKeyEvent(this.vkbd.device);
      e.kNextLayer = this._destinationLayerId;
      e.Lstates = codes_default.stateBitmasks.CAPS;
      e.LmodifierChange = true;
      this.vkbd.raiseKeyEvent(e, null);
    };
    return PendingMultiTap2;
  }();
  var pendingMultiTap_default = PendingMultiTap;

  // ../../../build/engine/osk/obj/input/gestures/browser/oskSubKey.js
  var OSKSubKey = /* @__PURE__ */ function(_super) {
    (0, build_exports.__extends)(OSKSubKey2, _super);
    function OSKSubKey2(spec, layer) {
      if (typeof layer != "string" || layer == "") {
        throw "The 'layer' parameter for subkey construction must be properly defined.";
      }
      return _super.call(this, spec, layer) || this;
    }
    OSKSubKey2.prototype.getId = function() {
      return "popup-" + this.layer + "-" + this.spec["id"];
    };
    OSKSubKey2.prototype.construct = function(osk, baseKey, topMargin) {
      var spec = this.spec;
      var kDiv = document.createElement("div");
      var tKey = osk.getDefaultKeyObject();
      var ks = kDiv.style;
      for (var tp in tKey) {
        if (typeof spec[tp] != "string") {
          spec[tp] = tKey[tp];
        }
      }
      kDiv.className = "kmw-key-square-ex";
      if (topMargin) {
        ks.marginTop = "5px";
      }
      if (typeof spec["width"] != "undefined") {
        ks.width = spec["width"] * baseKey.offsetWidth / 100 + "px";
      } else {
        ks.width = baseKey.offsetWidth + "px";
      }
      ks.height = baseKey.offsetHeight + "px";
      var btnEle = document.createElement("div");
      var btn = this.btn = link(btnEle, new KeyData(this, spec["id"]));
      this.setButtonClass();
      btn.id = this.getId();
      var bs = btn.style;
      bs.height = ks.height;
      bs.lineHeight = baseKey.style.lineHeight;
      bs.width = ks.width;
      bs.position = "absolute";
      btn.appendChild(this.label = this.generateKeyText(osk));
      kDiv.appendChild(btn);
      return this.square = kDiv;
    };
    OSKSubKey2.prototype.allowsKeyTip = function() {
      return false;
    };
    return OSKSubKey2;
  }(oskKey_default);
  var oskSubKey_default = OSKSubKey;

  // ../../../build/engine/osk/obj/input/gestures/browser/subkeyPopup.js
  var SubkeyPopup = /* @__PURE__ */ function() {
    function SubkeyPopup2(vkbd, e) {
      var _this = this;
      this.promise = new Promise(function(resolve) {
        _this.resolver = resolve;
      });
      this.vkbd = vkbd;
      this.baseKey = e;
      this.currentSelection = e;
      e.key.highlight(true);
      var subKeySpec = e["subKeys"];
      var subKeys = this.element = document.createElement("div");
      var i;
      subKeys.id = "kmw-popup-keys";
      var ss2 = subKeys.style;
      ss2.fontFamily = vkbd.fontFamily;
      var computedStyle = getComputedStyle(e);
      ss2.fontSize = computedStyle.fontSize;
      ss2.visibility = "hidden";
      var nKeys = subKeySpec.length, nRows, nCols;
      nRows = Math.min(Math.ceil(nKeys / 9), 2);
      nCols = Math.ceil(nKeys / nRows);
      ss2.width = nCols * e.offsetWidth + nCols * 5 + "px";
      for (i = 0; i < nKeys; i++) {
        var needsTopMargin = false;
        var nRow = Math.floor(i / nCols);
        if (nRows > 1 && nRow > 0) {
          needsTopMargin = true;
        }
        var layer = e["key"].layer;
        if (typeof layer != "string" || layer == "") {
          layer = vkbd.layerId;
        }
        var keyGenerator = new oskSubKey_default(subKeySpec[i], layer);
        var kDiv = keyGenerator.construct(vkbd, e, needsTopMargin);
        subKeys.appendChild(kDiv);
      }
      this.shim = document.createElement("div");
      this.shim.id = "kmw-popup-shim";
      if (vkbd.device.formFactor == deviceSpec_default.FormFactor.Phone) {
        this.selectDefaultSubkey(vkbd, e, subKeys);
      }
    }
    SubkeyPopup2.prototype.finalize = function(input) {
      if (this.resolver) {
        var keyEvent = null;
        if (this.currentSelection) {
          keyEvent = this.vkbd.initKeyEvent(this.currentSelection, input);
          this.currentSelection.key.highlight(false);
        }
        this.resolver(keyEvent);
      }
      this.resolver = null;
    };
    SubkeyPopup2.prototype.reposition = function(vkbd) {
      var subKeys = this.element;
      var e = this.baseKey;
      var _Box = vkbd.topContainer;
      var rowElement = e.key.row.element;
      var ss2 = subKeys.style;
      var x = e.offsetLeft + e.offsetParent.offsetLeft + 0.5 * (e.offsetWidth - subKeys.offsetWidth);
      var xMax = vkbd.width - subKeys.offsetWidth;
      if (x > xMax) {
        x = xMax;
      }
      if (x < 0) {
        x = 0;
      }
      ss2.left = x + "px";
      var _BoxRect = _Box.getBoundingClientRect();
      var rowElementRect = rowElement.getBoundingClientRect();
      ss2.top = rowElementRect.top - _BoxRect.top - subKeys.offsetHeight - 3 + "px";
      ss2.visibility = "visible";
      var constrainPopup = vkbd.isEmbedded;
      var cs = getComputedStyle(subKeys);
      var topY = parseFloat(cs.top);
      var topOffset = 0;
      var delta = 0;
      if (topY < topOffset && constrainPopup) {
        delta = topOffset - topY;
        ss2.top = topOffset + "px";
      }
      if (vkbd.device.formFactor == deviceSpec_default.FormFactor.Phone && vkbd.device.OS == deviceSpec_default.OperatingSystem.iOS) {
        this.callout = this.addCallout(e, delta);
      }
    };
    SubkeyPopup2.prototype.addCallout = function(key, delta) {
      var _Box = this.vkbd.topContainer;
      delta = delta || 0;
      var calloutHeight = key.offsetHeight - delta + 6;
      if (calloutHeight > 0) {
        var cc = document.createElement("div"), ccs = cc.style;
        cc.id = "kmw-popup-callout";
        _Box.appendChild(cc);
        var keyRect = key.getBoundingClientRect();
        var _BoxRect = _Box.getBoundingClientRect();
        var top_1 = Math.floor(keyRect.top - _BoxRect.top - 9 + delta);
        ccs.top = top_1 + "px";
        ccs.left = keyRect.left - _BoxRect.left + "px";
        ccs.width = keyRect.width + "px";
        ccs.height = keyRect.bottom - _BoxRect.top - top_1 - 1 + "px";
        return cc;
      } else {
        return null;
      }
    };
    SubkeyPopup2.prototype.selectDefaultSubkey = function(vkbd, baseKey, popupBase) {
      var _a;
      var bk;
      var subkeys = baseKey["subKeys"];
      for (var i = 0; i < subkeys.length; i++) {
        var skSpec = subkeys[i];
        var skElement = popupBase.childNodes[i].firstChild;
        if (skSpec.default) {
          bk = skElement;
          break;
        } else if (!baseKey.key || !baseKey.key.spec) {
          continue;
        }
        if (skSpec.elementID == baseKey.key.spec.elementID) {
          bk = skElement;
        }
      }
      if (bk) {
        (_a = vkbd.keyPending) === null || _a === void 0 ? void 0 : _a.key.highlight(false);
        vkbd.keyPending = bk;
        this.currentSelection = bk;
        bk.key.highlight(true);
      }
    };
    SubkeyPopup2.prototype.isVisible = function() {
      return this.element.style.visibility == "visible";
    };
    SubkeyPopup2.prototype.clear = function() {
      this.resolver = null;
      if (this.element.parentNode) {
        this.element.parentNode.removeChild(this.element);
      }
      if (this.shim.parentNode) {
        this.shim.parentNode.removeChild(this.shim);
      }
      if (this.callout && this.callout.parentNode) {
        this.callout.parentNode.removeChild(this.callout);
      }
    };
    SubkeyPopup2.prototype.updateTouch = function(input) {
      if (this.initialX === void 0 || this.initialY === void 0) {
        this.initialX = input.x;
        this.initialY = input.y;
      }
      var deltaX = this.initialX - input.x;
      var deltaY = this.initialY - input.y;
      var dist = Math.sqrt(deltaX * deltaX + deltaY * deltaY);
      if (dist > 5) {
        this.initialX = Number.MAX_SAFE_INTEGER;
        this.currentSelection = null;
      } else {
        this.currentSelection.key.highlight(true);
        return;
      }
      this.baseKey.key.highlight(false);
      for (var i = 0; i < this.baseKey["subKeys"].length; i++) {
        try {
          var sk = this.element.childNodes[i].firstChild;
          var onKey = sk.key.isUnderTouch(input);
          if (onKey) {
            this.currentSelection = sk;
          }
          sk.key.highlight(onKey);
        } catch (ex) {
          if (ex.message) {
            console.error("Unexpected error when attempting to update selected subkey:" + ex.message);
          } else {
            console.error("Unexpected error (and error type) when attempting to update selected subkey.");
          }
        }
      }
      if (!this.currentSelection && this.baseKey.key.isUnderTouch(input)) {
        this.baseKey.key.highlight(true);
        this.currentSelection = this.baseKey;
      }
    };
    return SubkeyPopup2;
  }();
  var subkeyPopup_default = SubkeyPopup;

  // ../../../build/engine/osk/obj/input/gestures/browser/pendingLongpress.js
  var PendingLongpress = /* @__PURE__ */ function() {
    function PendingLongpress2(vkbd, baseKey) {
      this.popupDelay = 500;
      this.vkbd = vkbd;
      this.baseKey = baseKey;
      var _this = this;
      this.promise = new Promise(function(resolve, reject) {
        _this.resolver = resolve;
        _this.timerId = window.setTimeout(_this.resolve.bind(_this), _this.popupDelay);
      });
    }
    PendingLongpress2.prototype.cancel = function() {
      if (this.timerId) {
        window.clearTimeout(this.timerId);
        this.timerId = null;
      }
      if (this.resolver) {
        this.resolver(null);
        this.resolver = null;
      }
    };
    PendingLongpress2.prototype.resolve = function() {
      if (this.timerId) {
        window.clearTimeout(this.timerId);
        this.timerId = null;
      }
      if (this.resolver) {
        this.resolver(new subkeyPopup_default(this.vkbd, this.baseKey));
      }
    };
    return PendingLongpress2;
  }();
  var pendingLongpress_default = PendingLongpress;

  // ../../../build/engine/osk/obj/input/gestures/browser/keytip.js
  var KeyTip = /* @__PURE__ */ function() {
    function KeyTip2(constrain) {
      this.state = false;
      var tipElement = this.element = document.createElement("div");
      tipElement.className = "kmw-keytip";
      tipElement.id = "kmw-keytip";
      tipElement.style.pointerEvents = "none";
      tipElement.style.display = "none";
      tipElement.appendChild(this.tip = document.createElement("div"));
      tipElement.appendChild(this.cap = document.createElement("div"));
      this.tip.appendChild(this.label = document.createElement("span"));
      this.tip.className = "kmw-keytip-tip";
      this.cap.className = "kmw-keytip-cap";
      this.label.className = "kmw-keytip-label";
      this.constrain = constrain;
    }
    KeyTip2.prototype.show = function(key, on, vkbd) {
      if (on && key.offsetParent) {
        var rowElement = key.key.row.element;
        var rkey = key.getClientRects()[0], rrow = rowElement.getClientRects()[0];
        var xLeft = rkey.left - rrow.left, xWidth = rkey.width, xHeight = rkey.height, kc = key.key.label, previewFontScale = 1.8;
        var kts = this.element.style;
        var _Box = vkbd.topContainer;
        var _BoxRect = _Box.getBoundingClientRect();
        var keyRect = key.getBoundingClientRect();
        var y = keyRect.bottom - _BoxRect.top + 1;
        var ySubPixelPadding = y - Math.floor(y);
        var canvasWidth = xWidth + Math.ceil(xWidth * 0.3) * 2;
        var canvasHeight = Math.ceil(2.3 * xHeight) + ySubPixelPadding;
        kts.top = "auto";
        kts.bottom = Math.floor(_BoxRect.height - y) + "px";
        kts.textAlign = "center";
        kts.overflow = "visible";
        kts.width = canvasWidth + "px";
        kts.height = canvasHeight + "px";
        var ckts = getComputedStyle(vkbd.element);
        kts.fontFamily = ckts.fontFamily;
        var px = parseInt(ckts.fontSize, 10);
        if (px == Number.NaN) {
          px = 0;
        }
        if (px != 0) {
          var popupFS = previewFontScale * px;
          var scaleStyle = {
            fontFamily: kts.fontFamily,
            fontSize: popupFS + "px",
            height: 1.6 * xHeight + "px"
          };
          kts.fontSize = key.key.getIdealFontSize(vkbd, key.key.keyText, scaleStyle, true);
        }
        this.label.textContent = kc.textContent;
        var xOverflow = (canvasWidth - xWidth) / 2;
        if (xLeft < xOverflow) {
          this.cap.style.left = "1px";
          xLeft += xOverflow - 1;
        } else if (xLeft > window.innerWidth - xWidth - xOverflow) {
          this.cap.style.left = canvasWidth - xWidth - 1 + "px";
          xLeft -= xOverflow - 1;
        } else {
          this.cap.style.left = xOverflow + "px";
        }
        kts.left = xLeft - xOverflow + "px";
        var cs = getComputedStyle(this.element);
        var oskHeight = _BoxRect.height;
        var bottomY = parseFloat(cs.bottom);
        var tipHeight = parseFloat(cs.height);
        var halfHeight = Math.ceil(canvasHeight / 2);
        this.cap.style.width = xWidth + "px";
        this.tip.style.height = halfHeight + "px";
        this.cap.style.top = halfHeight - 3 + "px";
        this.cap.style.height = keyRect.bottom - _BoxRect.top - Math.floor(y - canvasHeight) - halfHeight + "px";
        if (this.constrain && tipHeight + bottomY > oskHeight) {
          var delta = tipHeight + bottomY - oskHeight;
          kts.height = canvasHeight - delta + "px";
          var hx = Math.max(0, canvasHeight - delta - canvasHeight / 2 + 2);
          this.cap.style.height = hx + "px";
        }
        kts.display = "block";
      } else {
        this.element.style.display = "none";
      }
      this.key = key;
      this.state = on;
    };
    return KeyTip2;
  }();
  var keytip_default = KeyTip;

  // ../../../build/engine/osk/obj/screenUtils.js
  function getViewportScale() {
    try {
      if (this.device.formFactor == "desktop") {
        return 1;
      }
      var viewportWidth = document.documentElement.clientWidth;
      if (screen.width > viewportWidth) {
        return 1;
      }
      var screenWidth = screen.width;
      if (landscapeView()) {
        if (screen.width < screen.height) {
          screenWidth = screen.height;
        }
      } else {
        if (screen.width > screen.height) {
          screenWidth = screen.height;
        }
      }
      return Math.round(100 * screenWidth / viewportWidth) / 100;
    } catch (ex) {
      return 1;
    }
  }

  // ../../../build/engine/osk/obj/visualKeyboard.js
  var VisualKeyboard = /* @__PURE__ */ function(_super) {
    (0, build_exports.__extends)(VisualKeyboard2, _super);
    function VisualKeyboard2(config) {
      var _this_1 = this;
      var _a, _b;
      _this_1 = _super.call(this) || this;
      _this_1._layerId = "default";
      _this_1.layerIndex = 0;
      _this_1.isStatic = false;
      _this_1._fixedWidthScaling = false;
      _this_1._fixedHeightScaling = true;
      _this_1.stateKeys = {
        K_CAPS: false,
        K_NUMLOCK: false,
        K_SCROLL: false
      };
      _this_1.repeatDelete = function() {
        if (this.deleting) {
          this.modelKeyClick(this.deleteKey);
          this.deleting = window.setTimeout(this.repeatDelete, 100);
        }
      }.bind(_this_1);
      _this_1.config = config;
      _this_1.config.device = config.device || config.hostDevice;
      _this_1.config.isEmbedded = config.isEmbedded || false;
      if (config.isStatic) {
        _this_1.isStatic = config.isStatic;
      }
      _this_1._fixedWidthScaling = _this_1.device.touchable && !_this_1.isStatic;
      _this_1._fixedHeightScaling = _this_1.device.touchable && !_this_1.isStatic;
      var Lkbd = document.createElement("div");
      _this_1.config.styleSheetManager = config.styleSheetManager || new StylesheetManager(Lkbd);
      var layout;
      if (config.keyboard) {
        layout = _this_1.kbdLayout = config.keyboard.layout(config.device.formFactor);
        _this_1.layoutKeyboardProperties = config.keyboardMetadata;
        _this_1.isRTL = config.keyboard.isRTL;
      } else {
        var rawLayout = Layouts.buildDefaultLayout(null, null, config.device.formFactor);
        layout = _this_1.kbdLayout = ActiveLayout.polyfill(rawLayout, null, config.device.formFactor);
        _this_1.layoutKeyboardProperties = null;
        _this_1.isRTL = false;
      }
      if ("font" in layout) {
        _this_1.fontFamily = layout["font"];
      } else {
        _this_1.fontFamily = "";
      }
      var formFactor = config.device.formFactor;
      _this_1.layoutKeyboard = config.keyboard;
      if (!_this_1.layoutKeyboard) {
        _this_1.layoutKeyboard = new keyboard_default(null);
      }
      _this_1.layerGroup = new oskLayerGroup_default(_this_1, _this_1.layoutKeyboard, formFactor);
      _this_1.layoutKeyboard.markLayoutCalibrated(formFactor);
      Lkbd.appendChild(_this_1.layerGroup.element);
      _this_1.kbdDiv = Lkbd;
      if (!_this_1.isStatic) {
        if (_this_1.hostDevice.touchable) {
          _this_1.inputEngine = _this_1.touchInputConfiguration;
        } else {
          _this_1.inputEngine = _this_1.mouseInputConfiguration;
        }
        _this_1.inputEngine.registerEventHandlers();
      }
      Lkbd.classList.add(config.device.formFactor, "kmw-osk-inner-frame");
      var kbdID = (_b = (_a = _this_1.layoutKeyboard) === null || _a === void 0 ? void 0 : _a.id.replace("Keyboard_", "")) !== null && _b !== void 0 ? _b : "";
      var separatorIndex = kbdID.indexOf("::");
      if (separatorIndex != -1) {
        kbdID = kbdID.substring(separatorIndex + 2);
      }
      var kbdClassSuffix = "kmw-keyboard-" + kbdID;
      _this_1.element.classList.add(kbdClassSuffix);
      return _this_1;
    }
    Object.defineProperty(VisualKeyboard2.prototype, "layerId", {
      get: function() {
        return this._layerId;
      },
      set: function(value) {
        var changedLayer = value != this._layerId;
        if (!this.layerGroup.layers[value]) {
          throw new Error("Keyboard ".concat(this.layoutKeyboard.id, " does not have a layer with id ").concat(value));
        } else {
          this._layerId = value;
        }
        if (changedLayer) {
          this.updateState();
          this.refreshLayout();
        }
      },
      enumerable: false,
      configurable: true
    });
    Object.defineProperty(VisualKeyboard2.prototype, "currentLayer", {
      get: function() {
        var _a;
        return this.layerId ? (_a = this.layerGroup) === null || _a === void 0 ? void 0 : _a.layers[this.layerId] : null;
      },
      enumerable: false,
      configurable: true
    });
    Object.defineProperty(VisualKeyboard2.prototype, "lgKey", {
      get: function() {
        var _a, _b;
        return (_b = (_a = this.currentLayer) === null || _a === void 0 ? void 0 : _a.globeKey) === null || _b === void 0 ? void 0 : _b.btn;
      },
      enumerable: false,
      configurable: true
    });
    Object.defineProperty(VisualKeyboard2.prototype, "hkKey", {
      get: function() {
        var _a, _b;
        return (_b = (_a = this.currentLayer) === null || _a === void 0 ? void 0 : _a.hideKey) === null || _b === void 0 ? void 0 : _b.btn;
      },
      enumerable: false,
      configurable: true
    });
    Object.defineProperty(VisualKeyboard2.prototype, "spaceBar", {
      get: function() {
        var _a, _b;
        return (_b = (_a = this.currentLayer) === null || _a === void 0 ? void 0 : _a.spaceBarKey) === null || _b === void 0 ? void 0 : _b.btn;
      },
      enumerable: false,
      configurable: true
    });
    Object.defineProperty(VisualKeyboard2.prototype, "mouseInputConfiguration", {
      get: function() {
        var config = {
          targetRoot: this.element,
          eventRoot: document.body,
          inputStartHandler: this.touch.bind(this),
          inputMoveHandler: this.moveOver.bind(this),
          inputMoveCancelHandler: this.moveCancel.bind(this),
          inputEndHandler: this.release.bind(this),
          coordConstrainedWithinInteractiveBounds: this.detectWithinInteractiveBounds.bind(this)
        };
        return new mouseEventEngine_default(config);
      },
      enumerable: false,
      configurable: true
    });
    Object.defineProperty(VisualKeyboard2.prototype, "touchInputConfiguration", {
      get: function() {
        var config = {
          targetRoot: this.element,
          eventRoot: this.element,
          inputStartHandler: this.touch.bind(this),
          inputMoveHandler: this.moveOver.bind(this),
          inputMoveCancelHandler: this.moveCancel.bind(this),
          inputEndHandler: this.release.bind(this),
          coordConstrainedWithinInteractiveBounds: this.detectWithinInteractiveBounds.bind(this)
        };
        return new touchEventEngine_default(config);
      },
      enumerable: false,
      configurable: true
    });
    Object.defineProperty(VisualKeyboard2.prototype, "element", {
      get: function() {
        return this.kbdDiv;
      },
      enumerable: false,
      configurable: true
    });
    Object.defineProperty(VisualKeyboard2.prototype, "device", {
      get: function() {
        return this.config.device;
      },
      enumerable: false,
      configurable: true
    });
    Object.defineProperty(VisualKeyboard2.prototype, "hostDevice", {
      get: function() {
        return this.config.hostDevice;
      },
      enumerable: false,
      configurable: true
    });
    Object.defineProperty(VisualKeyboard2.prototype, "fontRootPath", {
      get: function() {
        return this.config.pathConfig.fonts;
      },
      enumerable: false,
      configurable: true
    });
    Object.defineProperty(VisualKeyboard2.prototype, "styleSheetManager", {
      get: function() {
        return this.config.styleSheetManager;
      },
      enumerable: false,
      configurable: true
    });
    Object.defineProperty(VisualKeyboard2.prototype, "topContainer", {
      get: function() {
        return this.config.topContainer;
      },
      enumerable: false,
      configurable: true
    });
    Object.defineProperty(VisualKeyboard2.prototype, "isEmbedded", {
      get: function() {
        return this.config.isEmbedded;
      },
      enumerable: false,
      configurable: true
    });
    VisualKeyboard2.prototype.postInsert = function() {
    };
    Object.defineProperty(VisualKeyboard2.prototype, "width", {
      get: function() {
        return this._width;
      },
      enumerable: false,
      configurable: true
    });
    Object.defineProperty(VisualKeyboard2.prototype, "height", {
      get: function() {
        return this._height;
      },
      enumerable: false,
      configurable: true
    });
    Object.defineProperty(VisualKeyboard2.prototype, "layoutWidth", {
      get: function() {
        if (this.usesFixedWidthScaling) {
          var baseWidth = this.width;
          var cs = getComputedStyle(this.element);
          if (cs.border) {
            var borderWidth = new ParsedLengthStyle(cs.borderWidth).val;
            baseWidth -= borderWidth * 2;
          }
          return ParsedLengthStyle.inPixels(baseWidth);
        } else {
          return ParsedLengthStyle.forScalar(1);
        }
      },
      enumerable: false,
      configurable: true
    });
    Object.defineProperty(VisualKeyboard2.prototype, "layoutHeight", {
      get: function() {
        if (this.usesFixedHeightScaling) {
          var baseHeight = this.height;
          var cs = getComputedStyle(this.element);
          if (cs.border) {
            var borderHeight = new ParsedLengthStyle(cs.borderWidth).val;
            baseHeight -= borderHeight * 2;
          }
          return ParsedLengthStyle.inPixels(baseHeight);
        } else {
          return ParsedLengthStyle.forScalar(1);
        }
      },
      enumerable: false,
      configurable: true
    });
    Object.defineProperty(VisualKeyboard2.prototype, "internalHeight", {
      get: function() {
        if (this.usesFixedHeightScaling) {
          return ParsedLengthStyle.inPixels(this.layoutHeight.val - this.getVerticalLayerGroupPadding());
        } else {
          return ParsedLengthStyle.forScalar(1);
        }
      },
      enumerable: false,
      configurable: true
    });
    Object.defineProperty(VisualKeyboard2.prototype, "fontSize", {
      get: function() {
        if (!this._fontSize) {
          this._fontSize = new ParsedLengthStyle("1em");
        }
        return this._fontSize;
      },
      set: function(value) {
        this._fontSize = value;
        this.kbdDiv.style.fontSize = value.styleString;
      },
      enumerable: false,
      configurable: true
    });
    Object.defineProperty(VisualKeyboard2.prototype, "usesFixedWidthScaling", {
      get: function() {
        return this._fixedWidthScaling;
      },
      set: function(val) {
        this._fixedWidthScaling = val;
      },
      enumerable: false,
      configurable: true
    });
    Object.defineProperty(VisualKeyboard2.prototype, "usesFixedHeightScaling", {
      get: function() {
        return this._fixedHeightScaling;
      },
      set: function(val) {
        this._fixedHeightScaling = val;
      },
      enumerable: false,
      configurable: true
    });
    Object.defineProperty(VisualKeyboard2.prototype, "usesFixedPositioning", {
      get: function() {
        var node = this.element;
        while (node) {
          if (getComputedStyle(node).position == "fixed") {
            return true;
          } else {
            node = node.offsetParent;
          }
        }
        return false;
      },
      enumerable: false,
      configurable: true
    });
    VisualKeyboard2.prototype.setSize = function(width, height, pending) {
      this._width = width;
      this._height = height;
      if (this.kbdDiv) {
        this.kbdDiv.style.width = width ? this._width + "px" : "";
        this.kbdDiv.style.height = height ? this._height + "px" : "";
        if (!this.device.touchable && height) {
          this.fontSize = new ParsedLengthStyle(this._height / 8 + "px");
        }
        if (!pending) {
          this.refreshLayout();
        }
      }
    };
    VisualKeyboard2.prototype.getDefaultKeyObject = function() {
      return new OSKKeySpec(void 0, "", ActiveKey.DEFAULT_KEY.width, ActiveKey.DEFAULT_KEY.sp, null, ActiveKey.DEFAULT_KEY.pad);
    };
    ;
    VisualKeyboard2.prototype.getTouchCoordinatesOnKeyboard = function(input) {
      var kbdCoords = {
        x: getAbsoluteX(this.kbdDiv),
        y: getAbsoluteY(this.kbdDiv)
      };
      var offsetCoords = { x: input.x - kbdCoords.x, y: input.y - kbdCoords.y };
      offsetCoords.x /= this.layerGroup.element.offsetWidth;
      offsetCoords.y /= this.kbdDiv.offsetHeight;
      return offsetCoords;
    };
    VisualKeyboard2.prototype.getTouchProbabilities = function(input, keySpec) {
      var touchKbdPos = this.getTouchCoordinatesOnKeyboard(input);
      var layerGroup = this.layerGroup.element;
      var width = layerGroup.offsetWidth, height = this.kbdDiv.offsetHeight;
      if (!width || !height) {
        return null;
      }
      var kbdAspectRatio = layerGroup.offsetWidth / this.kbdDiv.offsetHeight;
      var baseKeyProbabilities = this.kbdLayout.getLayer(this.layerId).getTouchProbabilities(touchKbdPos, kbdAspectRatio);
      if (!keySpec || !this.subkeyGesture || !this.subkeyGesture.baseKey.key) {
        return baseKeyProbabilities;
      } else {
        var baseMass = 1;
        var baseKeyMass = 1;
        var baseKeyID = this.subkeyGesture.baseKey.key.spec.coreID;
        var popupKeyMass = 0;
        var popupKeyID = null;
        popupKeyMass = 3;
        popupKeyID = keySpec.coreID;
        if (popupKeyID == baseKeyID) {
          baseKeyMass += popupKeyMass;
          popupKeyMass = 0;
        } else {
          popupKeyID = "".concat(baseKeyID, "::").concat(popupKeyID);
        }
        var totalMass = baseMass + baseKeyMass + popupKeyMass;
        var scalar = 1 / totalMass;
        for (var i = 0; i < baseKeyProbabilities.length; i++) {
          var entry = baseKeyProbabilities[i];
          if (entry.keyId == baseKeyID) {
            baseKeyMass += entry.p * scalar;
            baseKeyProbabilities.splice(i, 1);
            i--;
          } else if (entry.keyId == popupKeyID) {
            popupKeyMass = +entry.p * scalar;
            baseKeyProbabilities.splice(i, 1);
            i--;
          } else {
            entry.p *= scalar;
          }
        }
        var finalArray = [];
        if (popupKeyMass > 0) {
          finalArray.push({ keyId: popupKeyID, p: popupKeyMass * scalar });
        }
        finalArray.push({ keyId: baseKeyID, p: baseKeyMass * scalar });
        finalArray = finalArray.concat(baseKeyProbabilities);
        return finalArray;
      }
    };
    VisualKeyboard2.prototype.getInteractiveBoundingRect = function() {
      var oskX = getAbsoluteX(this.element);
      var oskY = getAbsoluteY(this.element);
      var rowCount = this.currentLayer.rows.length;
      var buffer = 0.333 * this.height / rowCount;
      var boundingRect = {
        left: oskX - buffer,
        right: oskX + this.width + buffer,
        top: oskY - buffer,
        bottom: oskY + this.height + buffer
      };
      return boundingRect;
    };
    VisualKeyboard2.prototype.applyScreenMarginBoundsThresholding = function(baseBounds, startCoord) {
      var xDelta = window.screenLeft - window.pageXOffset;
      var yDelta = window.screenTop - window.pageYOffset;
      var adjustedBounds = (0, build_exports.__assign)({}, baseBounds);
      var initScreenCoord = new inputEventCoordinate_default(startCoord.x + xDelta, startCoord.y + yDelta);
      if (initScreenCoord.x >= 5 && baseBounds.left + xDelta <= 2) {
        adjustedBounds.left = 2 - xDelta;
      }
      if (initScreenCoord.x <= screen.width - 5 && baseBounds.right + xDelta >= screen.width - 2) {
        adjustedBounds.right = screen.width - 2 - xDelta;
      }
      if (initScreenCoord.y >= 5 && baseBounds.top + yDelta <= 2) {
        adjustedBounds.top = 2 - yDelta;
      }
      if (initScreenCoord.y <= screen.height - 5 && baseBounds.bottom + yDelta >= screen.height - 2) {
        adjustedBounds.bottom = screen.height - 2 - yDelta;
      }
      return adjustedBounds;
    };
    VisualKeyboard2.prototype.detectWithinInteractiveBounds = function(coord) {
      if (coord.x === null && coord.y === null) {
        return true;
      }
      var baseBoundingRect = this.getInteractiveBoundingRect();
      var adjustedBoundingRect = baseBoundingRect;
      if (this.initTouchCoord) {
        this.applyScreenMarginBoundsThresholding(baseBoundingRect, this.initTouchCoord);
      }
      if (coord.x < adjustedBoundingRect.left || coord.x > adjustedBoundingRect.right) {
        return false;
      } else if (coord.y < adjustedBoundingRect.top || coord.y > adjustedBoundingRect.bottom) {
        return false;
      } else {
        return true;
      }
    };
    VisualKeyboard2.prototype.touch = function(input) {
      var t = input.target, key = this.keyTarget(t);
      this.initTouchCoord = input;
      this.currentTarget = key;
      this.cancelDelete();
      if (this.subkeyGesture && this.subkeyGesture.isVisible()) {
        return;
      }
      this.touchCount = input.activeInputCount;
      if (key && (key.className.indexOf("key-hidden") >= 0 || key.className.indexOf("key-blank") >= 0) || t.className.indexOf("kmw-key-row") >= 0) {
        if (!input.isFromMouse) {
          key = this.findNearestKey(input, t);
        }
      }
      if (key == null) {
        return;
      }
      var keyName = key["keyId"];
      this.highlightKey(key, true);
      if (keyName == "K_LOPT" || keyName == "K_ROPT") {
        window.setTimeout(function() {
          this.modelKeyClick(key);
          this.highlightKey(key, true);
        }.bind(this), 0);
        this.keyPending = null;
        this.touchPending = null;
      } else if (keyName == "K_BKSP") {
        this.modelKeyClick(key, input);
        this.deleteKey = key;
        this.deleting = window.setTimeout(this.repeatDelete, 500);
        this.keyPending = null;
        this.touchPending = null;
      } else {
        if (this.keyPending) {
          this.highlightKey(this.keyPending, false);
          if (this.subkeyGesture && this.subkeyGesture instanceof subkeyPopup_default) {
            var subkeyPopup = this.subkeyGesture;
            subkeyPopup.updateTouch(input);
            subkeyPopup.finalize(input);
          } else {
            this.modelKeyClick(this.keyPending, this.touchPending);
          }
          this.touchCount--;
        } else {
          this.initGestures(key, input);
        }
        this.keyPending = key;
        this.touchPending = input;
      }
    };
    VisualKeyboard2.prototype.release = function(input) {
      var t = this.currentTarget;
      this.cancelDelete();
      if (this.pendingMultiTap && this.pendingMultiTap.realized) {
        this.pendingMultiTap = null;
        this.highlightKey(this.keyPending, false);
        this.keyPending = null;
        this.touchPending = null;
        return;
      }
      if (this.pendingMultiTap && this.pendingMultiTap.cancelled) {
        this.pendingMultiTap = null;
      }
      if (this.subkeyGesture && this.subkeyGesture.isVisible()) {
        if (input.activeInputCount > 0) {
          return;
        }
        if (this.subkeyGesture instanceof subkeyPopup_default) {
          var subkeyPopup = this.subkeyGesture;
          subkeyPopup.finalize(input);
        }
        this.highlightKey(this.keyPending, false);
        this.keyPending = null;
        this.touchPending = null;
        return;
      }
      if (t && t.id) {
        this.optionKey(t, t.id, false);
      }
      if (!this.detectWithinInteractiveBounds(input)) {
        this.moveCancel(input);
        this.touchCount--;
        return;
      }
      var tc = this.touchCount;
      if (this.touchCount > 0) {
        this.touchCount--;
      }
      if (this.keyPending) {
        this.highlightKey(this.keyPending, false);
        if (this.keyPending.className.indexOf("hidden") < 0 && tc > 0) {
          this.modelKeyClick(this.keyPending, input);
        }
        this.clearPopup();
        this.keyPending = null;
        this.touchPending = null;
      } else {
        var tt = input;
        t = this.keyTarget(tt.target);
        if (!t) {
          var t1 = document.elementFromPoint(input.x - window.pageXOffset, input.y - window.pageYOffset);
          t = this.findNearestKey(input, t1);
        }
        this.highlightKey(t, false);
      }
    };
    VisualKeyboard2.prototype.moveCancel = function(input) {
      if (input.activeInputCount > 1) {
        return;
      }
      if (this.updateGestures(null, this.keyPending, input)) {
        return;
      }
      this.cancelDelete();
      this.highlightKey(this.keyPending, false);
      this.showKeyTip(null, false);
      this.clearPopup();
      this.keyPending = null;
      this.touchPending = null;
    };
    VisualKeyboard2.prototype.moveOver = function(input) {
      if (this.touchCount == 0) {
        this.cancelDelete();
        return;
      }
      var x = input.x - window.pageXOffset;
      var y = input.y - window.pageYOffset;
      this.touchPending = input;
      var t1 = document.elementFromPoint(x, y);
      var key0 = this.keyPending;
      var key1 = this.keyTarget(t1);
      if (key1 && key1.className.indexOf("key-hidden") >= 0 || t1 && !key1 && t1.className.indexOf("key-row") >= 0) {
        key1 = this.findNearestKey(input, t1);
      }
      if (key1 && typeof key1.id == "string" && key1.id.indexOf("-K_BKSP") < 0) {
        this.cancelDelete();
      }
      if (input.activeInputCount > 1) {
        return;
      }
      if (this.updateGestures(key1, key0, input)) {
        return;
      }
      this.currentTarget = key1;
      if (key1 && this.keyPending) {
        this.highlightKey(key0, false);
        this.keyPending = key1;
        this.touchPending = input;
      }
      if (key0 && key1 && key1 != key0 && key1.id != "") {
        this.clearPopup();
        this.initGestures(key1, input);
      }
      if (this.keyPending) {
        if (key0 != key1 || key1.className.indexOf(oskKey_default.HIGHLIGHT_CLASS) < 0) {
          this.highlightKey(key1, true);
        }
      }
    };
    VisualKeyboard2.prototype.keyTarget = function(target) {
      var t = target;
      try {
        if (t) {
          if (t.classList.contains("kmw-key")) {
            return getKeyFrom(t);
          }
          if (t.parentNode && t.parentNode.classList.contains("kmw-key")) {
            return getKeyFrom(t.parentNode);
          }
          if (t.firstChild && t.firstChild.classList.contains("kmw-key")) {
            return getKeyFrom(t.firstChild);
          }
        }
      } catch (ex) {
      }
      return null;
    };
    VisualKeyboard2.prototype.findNearestKey = function(input, t) {
      if (!input) {
        return null;
      }
      var x = input.x;
      while (t && t.className !== void 0 && t.className.indexOf("key-row") < 0) {
        t = t.parentNode;
      }
      if (!t) {
        return null;
      }
      var k, k0 = 0, dx, dxMax = 24, dxMin = 1e5, x1, x2;
      for (k = 0; k < t.childNodes.length; k++) {
        var keySquare = t.childNodes[k];
        var childNode = keySquare.firstChild ? keySquare.firstChild : keySquare;
        if (childNode.className !== void 0 && (childNode.className.indexOf("key-hidden") >= 0 || childNode.className.indexOf("key-blank") >= 0)) {
          continue;
        }
        x1 = keySquare.offsetLeft;
        x2 = x1 + keySquare.offsetWidth;
        if (x >= x1 && x <= x2) {
          return childNode;
        }
        dx = x1 - x;
        if (dx >= 0 && dx < dxMin) {
          k0 = k;
          dxMin = dx;
        }
        dx = x - x2;
        if (dx >= 0 && dx < dxMin) {
          k0 = k;
          dxMin = dx;
        }
      }
      if (dxMin < 1e5) {
        t = t.childNodes[k0];
        x1 = t.offsetLeft;
        x2 = x1 + t.offsetWidth;
        if (t.offsetWidth > 40) {
          dxMax = 0.6 * t.offsetWidth;
        }
        if (x1 - x >= 0 && x1 - x < dxMax || x - x2 >= 0 && x - x2 < dxMax) {
          return t.firstChild;
        }
      }
      return null;
    };
    VisualKeyboard2.prototype.cancelDelete = function() {
      if (this.deleting) {
        window.clearTimeout(this.deleting);
      }
      this.deleting = 0;
    };
    VisualKeyboard2.prototype.modelKeyClick = function(e, input) {
      var keyEvent = this.initKeyEvent(e, input);
      this.raiseKeyEvent(keyEvent, e);
    };
    VisualKeyboard2.prototype.initKeyEvent = function(e, input) {
      this.highlightKey(e, false);
      var keySpec = e["key"] ? e["key"].spec : null;
      if (!keySpec) {
        console.error("OSK key with ID '" + e.id + "', keyID '" + e.keyId + "' missing needed specification");
        return null;
      }
      return this.keyEventFromSpec(keySpec, input);
    };
    VisualKeyboard2.prototype.keyEventFromSpec = function(keySpec, input) {
      var Lkc = this.layoutKeyboard.constructKeyEvent(keySpec, this.device, this.stateKeys);
      Lkc.srcKeyboard = this.layoutKeyboard;
      if (input) {
        Lkc.source = input;
        Lkc.keyDistribution = this.getTouchProbabilities(input, keySpec);
      }
      return Lkc;
    };
    VisualKeyboard2.prototype._UpdateVKShiftStyle = function(layerId) {
      var _a;
      var i;
      if (!layerId) {
        layerId = this.layerId;
      }
      var layer = this.layerGroup.layers[layerId];
      if (!layer) {
        return;
      }
      if (!((_a = this.layoutKeyboard) === null || _a === void 0 ? void 0 : _a.usesDesktopLayoutOnDevice(this.device))) {
        return;
      }
      var states = ["K_CAPS", "K_NUMLOCK", "K_SCROLL"];
      var keys = [layer.capsKey, layer.numKey, layer.scrollKey];
      for (i = 0; i < keys.length; i++) {
        if (keys[i] == null) {
          continue;
        }
        keys[i].setToggleState(this.stateKeys[states[i]]);
      }
    };
    VisualKeyboard2.prototype.updateStateKeys = function(stateKeys) {
      for (var key in this.stateKeys) {
        this.stateKeys[key] = stateKeys[key];
      }
      this._UpdateVKShiftStyle();
    };
    VisualKeyboard2.prototype.clearPopup = function() {
      if (this.subkeyGesture) {
        this.subkeyGesture.clear();
        this.subkeyGesture = null;
      }
      if (this.pendingSubkey) {
        this.pendingSubkey.cancel();
        this.pendingSubkey = null;
      }
    };
    VisualKeyboard2.prototype.showLanguage = function() {
      var _a;
      var activeStub = this.layoutKeyboardProperties;
      var displayName = (_a = activeStub === null || activeStub === void 0 ? void 0 : activeStub.displayName) !== null && _a !== void 0 ? _a : "(System keyboard)";
      try {
        var t = this.spaceBar.key.label;
        var tParent = t.parentNode;
        if (typeof tParent.className == "undefined" || tParent.className == "") {
          tParent.className = "kmw-spacebar";
        } else if (tParent.className.indexOf("kmw-spacebar") == -1) {
          tParent.className += " kmw-spacebar";
        }
        if (t.className != "kmw-spacebar-caption") {
          t.className = "kmw-spacebar-caption";
        }
        if (t.innerText != displayName || displayName == "") {
          t.innerText = displayName;
        }
        this.spaceBar.key.refreshLayout(this);
      } catch (ex) {
      }
    };
    VisualKeyboard2.prototype.highlightKey = function(key, on) {
      if (!key || !key.key || key.className == "" || key.className.indexOf("kmw-key-row") >= 0)
        return;
      var usePreview = this.keytip != null && key.key.allowsKeyTip();
      if (usePreview) {
        this.showKeyTip(key, on);
      } else {
        this.showKeyTip(null, false);
        key.key.highlight(on);
      }
    };
    VisualKeyboard2.prototype.getKeyEmFontSize = function() {
      if (!this.fontSize) {
        return 0;
      }
      if (this.device.formFactor == "desktop") {
        var keySquareScale = 0.8;
        return this.fontSize.scaledBy(keySquareScale).val;
      } else {
        var emSizeStr = getComputedStyle(document.body).fontSize;
        var emSize = getFontSizeStyle(emSizeStr).val;
        var emScale = 1;
        if (!this.isStatic) {
          if (this.fontSize.absolute) {
            return this.fontSize.val;
          } else {
            emScale = this.fontSize.val;
          }
        }
        return emSize * emScale;
      }
    };
    VisualKeyboard2.prototype.updateState = function() {
      if (!this.currentLayer) {
        return;
      }
      var n, b = this.kbdDiv.childNodes[0].childNodes;
      this.nextLayer = this.layerId;
      if (this.currentLayer.nextlayer) {
        this.nextLayer = this.currentLayer.nextlayer;
      }
      for (n = 0; n < b.length; n++) {
        var layerElement = b[n];
        if (layerElement["layer"] == this.layerId) {
          layerElement.style.display = "block";
          this._UpdateVKShiftStyle();
        } else {
          layerElement.style.display = "none";
        }
      }
    };
    VisualKeyboard2.prototype.refreshLayout = function() {
      var device = this.device;
      var fs = 1;
      if (device.OS == deviceSpec_default.OperatingSystem.iOS && !this.isEmbedded) {
        fs = fs / getViewportScale();
      }
      var paddedHeight;
      if (this.height) {
        paddedHeight = this.computedAdjustedOskHeight(this.height);
      }
      var b = this.layerGroup.element;
      var gs = this.kbdDiv.style;
      var bs = b.style;
      if (this.usesFixedHeightScaling && this.height) {
        gs.height = gs.maxHeight = this.height + "px";
      }
      gs.fontSize = this.fontSize.styleString;
      bs.fontSize = ParsedLengthStyle.forScalar(fs).styleString;
      var fixedSize = this.width && this.height;
      var computedStyle = getComputedStyle(this.kbdDiv);
      var isInDOM = computedStyle.height != "" && computedStyle.height != "auto";
      this.showLanguage();
      if (fixedSize) {
        this._computedWidth = this.width;
        this._computedHeight = this.height;
      } else if (isInDOM) {
        this._computedWidth = parseInt(computedStyle.width, 10);
        if (!this._computedWidth) {
          var groupStyle = getComputedStyle(this.kbdDiv.firstElementChild);
          this._computedWidth = parseInt(groupStyle.width, 10);
        }
        this._computedHeight = parseInt(computedStyle.height, 10);
      } else {
        return;
      }
      if (this.currentLayer) {
        this.currentLayer.refreshLayout(this, this._computedHeight - this.getVerticalLayerGroupPadding());
      }
    };
    VisualKeyboard2.prototype.getVerticalLayerGroupPadding = function() {
      var computedGroupStyle = getComputedStyle(this.layerGroup.element);
      var pt = parseInt(computedGroupStyle.paddingTop, 10) || 0;
      var pb = parseInt(computedGroupStyle.paddingBottom, 10) || 0;
      return pt + pb;
    };
    VisualKeyboard2.prototype.computedAdjustedOskHeight = function(allottedHeight) {
      if (!this.layerGroup) {
        return allottedHeight;
      }
      var layers = this.layerGroup.layers;
      var oskHeight = 0;
      for (var layerID in layers) {
        var layer = layers[layerID];
        var nRows = layer.rows.length;
        var rowHeight = Math.floor(allottedHeight / (nRows == 0 ? 1 : nRows));
        var layerHeight = nRows * rowHeight;
        if (layerHeight > oskHeight) {
          oskHeight = layerHeight;
        }
      }
      var oskPad = 0;
      var oskPaddedHeight = oskHeight + oskPad;
      return oskPaddedHeight;
    };
    VisualKeyboard2.prototype.appendStyleSheet = function() {
      var _this_1 = this;
      var activeKeyboard = this.layoutKeyboard;
      var activeStub = this.layoutKeyboardProperties;
      if (activeStub == null) {
        return;
      }
      if (this.styleSheet && this.styleSheet.parentNode) {
        this.styleSheet.parentNode.removeChild(this.styleSheet);
      }
      var kfd = activeStub.textFont, ofd = activeStub.oskFont;
      this.styleSheetManager.addStyleSheetForFont(kfd, this.fontRootPath, this.device.OS);
      this.styleSheetManager.addStyleSheetForFont(ofd, this.fontRootPath, this.device.OS);
      var customStyle = this.addFontStyle(kfd, ofd);
      if (activeKeyboard != null && typeof activeKeyboard.oskStyling == "string")
        customStyle = customStyle + activeKeyboard.oskStyling;
      this.styleSheet = createStyleSheet(customStyle);
      this.styleSheet.addEventListener("load", function() {
        _this_1.refreshLayout();
      });
      this.styleSheetManager.linkStylesheet(this.styleSheet);
    };
    VisualKeyboard2.prototype.addFontStyle = function(kfd, ofd) {
      var s = "";
      var family = function(fd) {
        return fd.family.replace(/\u0022/g, "").replace(/,/g, '","');
      };
      if (kfd || ofd) {
        s = '\n.kmw-key-text {\n  font-family: "'.concat(family(ofd || kfd), '";\n}\n\n.kmw-suggestion-text {\n  font-family: "').concat(family(kfd || ofd), '";\n}\n');
      }
      return s;
    };
    VisualKeyboard2.buildDocumentationKeyboard = function(PKbd, kbdProperties, fontRootPath, argFormFactor, argLayerId, height) {
      if (!PKbd) {
        return null;
      }
      var formFactor = typeof argFormFactor == "undefined" ? "desktop" : argFormFactor, layerId = typeof argLayerId == "undefined" ? "default" : argLayerId, device = {};
      device.formFactor = formFactor;
      if (formFactor != "desktop") {
        device.OS = deviceSpec_default.OperatingSystem.iOS;
        device.touchable = true;
      } else {
        device.OS = deviceSpec_default.OperatingSystem.Windows;
        device.touchable = false;
      }
      var layout = PKbd.layout(formFactor);
      var deviceSpec = new deviceSpec_default("other", device.formFactor, device.OS, device.touchable);
      var kbdObj = new VisualKeyboard2({
        keyboard: PKbd,
        keyboardMetadata: kbdProperties,
        hostDevice: deviceSpec,
        isStatic: true,
        topContainer: null,
        pathConfig: {
          fonts: fontRootPath,
          resources: ""
        },
        styleSheetManager: null
      });
      kbdObj.layerGroup.element.className = kbdObj.kbdDiv.className;
      kbdObj.layerGroup.element.classList.add(device.formFactor + "-static");
      var kbd = kbdObj.kbdDiv.childNodes[0];
      var classWrapper = document.createElement("div");
      classWrapper.classList.add(device.OS.toLowerCase(), device.formFactor);
      if (layout != null) {
        kbdObj.layerId = layerId;
        kbdObj.setSize(800, height);
        kbdObj.fontSize = defaultFontSize(deviceSpec, height, false);
        kbdObj.refreshLayout();
        kbd.style.fontSize = kbdObj.kbdDiv.style.fontSize;
        kbd.style.height = kbdObj.kbdDiv.style.height;
        kbd.style.maxHeight = kbdObj.kbdDiv.style.maxHeight;
      } else {
        kbd.innerHTML = "<p style='color:#c40; font-size:0.5em;margin:10px;'>No " + formFactor + " layout is defined for " + PKbd.name + ".</p>";
      }
      kbd.style.border = "1px solid #ccc";
      kbdObj.updateState();
      var detectAndHandleInsertion = function() {
        if (document.contains(kbd)) {
          try {
            if (getComputedStyle(kbd) && kbd.style.fontSize) {
              kbdObj.fontSize = new ParsedLengthStyle(kbd.style.fontSize);
            }
            kbdObj.appendStyleSheet();
            var stylesheet = kbdObj.styleSheet;
            var stylesheetParentElement = stylesheet.parentElement;
            kbdObj.refreshLayout();
            kbd.style.fontSize = kbdObj.kbdDiv.style.fontSize;
            kbdObj.shutdown();
            kbd.appendChild(stylesheet);
          } finally {
            insertionObserver.disconnect();
          }
        }
      };
      var insertionObserver = new MutationObserver(detectAndHandleInsertion);
      insertionObserver.observe(document.body, {
        childList: true,
        subtree: true
      });
      classWrapper.append(kbd);
      return classWrapper;
    };
    VisualKeyboard2.prototype.onHide = function() {
      if (this.hkKey) {
        this.highlightKey(this.hkKey, false);
      }
    };
    VisualKeyboard2.prototype.startLongpress = function(key) {
      var _this_1 = this;
      var pendingLongpress = new pendingLongpress_default(this, key);
      pendingLongpress.promise.then(function(subkeyPopup) {
        if (subkeyPopup) {
          _this_1.topContainer.appendChild(subkeyPopup.element);
          _this_1.topContainer.appendChild(subkeyPopup.shim);
          subkeyPopup.reposition(_this_1);
        }
      });
      return pendingLongpress;
    };
    VisualKeyboard2.prototype.initGestures = function(key, input) {
      var _this_1 = this;
      if (this.pendingMultiTap) {
        switch (this.pendingMultiTap.incrementTouch(key)) {
          case PendingMultiTapState.Cancelled:
            this.pendingMultiTap = null;
            break;
          case PendingMultiTapState.Realized:
            return;
        }
      }
      if (!this.pendingMultiTap && pendingMultiTap_default.isValidTarget(this, key)) {
        this.pendingMultiTap = new pendingMultiTap_default(this, key, 2);
        this.pendingMultiTap.timeout.then(function() {
          _this_1.pendingMultiTap = null;
        });
      }
      if (key["subKeys"]) {
        var _this_2 = this;
        var pendingLongpress_1 = this.startLongpress(key);
        if (pendingLongpress_1 == null) {
          return;
        }
        this.pendingSubkey = pendingLongpress_1;
        pendingLongpress_1.promise.then(function(subkeyPopup) {
          if (_this_2.pendingSubkey == pendingLongpress_1) {
            _this_2.pendingSubkey = null;
          }
          if (subkeyPopup) {
            _this_2.showKeyTip(null, false);
            _this_2.subkeyGesture = subkeyPopup;
            subkeyPopup.promise.then(function(keyEvent) {
              if (keyEvent) {
                _this_2.raiseKeyEvent(keyEvent, null);
              }
              _this_2.clearPopup();
            });
          }
        });
      }
    };
    VisualKeyboard2.prototype.updateGestures = function(currentKey, previousKey, input) {
      var key0 = previousKey;
      var key1 = currentKey;
      if (!currentKey && this.pendingMultiTap) {
        this.pendingMultiTap.cancel();
        this.pendingMultiTap = null;
      }
      if (this.subkeyGesture) {
        if (key0) {
          key0.key.highlight(false);
        }
        this.subkeyGesture.updateTouch(input);
        this.keyPending = null;
        this.touchPending = null;
        return true;
      }
      this.currentTarget = null;
      if (key1 && key1["subKeys"] != null && this.initTouchCoord) {
        if (this.pendingSubkey && this.pendingSubkey instanceof pendingLongpress_default) {
          if (this.initTouchCoord.y - input.y > this.getLongpressFlickThreshold()) {
            this.pendingSubkey.resolve();
          }
        }
      }
      if (this.subkeyGesture || this.pendingSubkey) {
        return true;
      }
      return false;
    };
    VisualKeyboard2.prototype.getLongpressFlickThreshold = function() {
      var rowHeight = this.currentLayer.rowHeight;
      var proportionalThreshold = rowHeight / 4;
      return Math.max(proportionalThreshold, 5);
    };
    VisualKeyboard2.prototype.optionKey = function(e, keyName, keyDown) {
      if (keyName.indexOf("K_LOPT") >= 0) {
        this.emit("globekey", e, keyDown);
      } else if (keyName.indexOf("K_ROPT") >= 0) {
        if (keyDown) {
          this.emit("hiderequested", e);
        }
      }
    };
    ;
    VisualKeyboard2.prototype.showKeyTip = function(key, on) {
      var tip = this.keytip;
      if (tip == null) {
        return;
      }
      var sk = this.subkeyGesture;
      var popup = sk && sk.isVisible();
      on = popup ? false : on;
      tip.show(key, on, this);
    };
    ;
    VisualKeyboard2.prototype.createKeyTip = function() {
      if (this.device.formFactor == "phone") {
        if (this.keytip == null) {
          var constrainPopup = this.isEmbedded;
          this.keytip = new keytip_default(constrainPopup);
        }
      }
      if (this.keytip && this.keytip.element) {
        this.topContainer.appendChild(this.keytip.element);
      }
    };
    ;
    VisualKeyboard2.prototype.createGlobeHint = function() {
      if (this.config.embeddedGestureConfig.createGlobeHint) {
        return this.config.embeddedGestureConfig.createGlobeHint(this);
      } else {
        return null;
      }
    };
    VisualKeyboard2.prototype.shutdown = function() {
      var _a, _b, _c, _d;
      if (this.styleSheet && this.styleSheet.parentNode) {
        this.styleSheet.parentNode.removeChild(this.styleSheet);
      }
      if (this.inputEngine) {
        this.inputEngine.unregisterEventHandlers();
      }
      if (this.deleting) {
        window.clearTimeout(this.deleting);
      }
      this.keyPending = null;
      this.touchPending = null;
      (_a = this.keytip) === null || _a === void 0 ? void 0 : _a.show(null, false, this);
      (_b = this.subkeyGesture) === null || _b === void 0 ? void 0 : _b.clear();
      (_c = this.pendingMultiTap) === null || _c === void 0 ? void 0 : _c.cancel();
      (_d = this.pendingSubkey) === null || _d === void 0 ? void 0 : _d.cancel();
    };
    VisualKeyboard2.prototype.raiseKeyEvent = function(keyEvent, e) {
      if (keyEvent.kName == "K_LOPT" || keyEvent.kName == "K_ROPT") {
        this.optionKey(e, keyEvent.kName, true);
        return true;
      }
      this.emit("keyevent", keyEvent);
    };
    VisualKeyboard2.specialCharacters = oskKey_default.specialCharacters;
    return VisualKeyboard2;
  }(import_eventemitter312.default);
  var visualKeyboard_default = VisualKeyboard;

  // ../../../build/engine/osk/obj/views/activator.js
  var import_eventemitter313 = __toESM(require_eventemitter3(), 1);
  var Activator = /* @__PURE__ */ function(_super) {
    (0, build_exports.__extends)(Activator2, _super);
    function Activator2() {
      return _super !== null && _super.apply(this, arguments) || this;
    }
    return Activator2;
  }(import_eventemitter313.default);
  var activator_default = Activator;
  var StaticActivator = function(_super) {
    (0, build_exports.__extends)(StaticActivator2, _super);
    function StaticActivator2() {
      return _super !== null && _super.apply(this, arguments) || this;
    }
    Object.defineProperty(StaticActivator2.prototype, "enabled", {
      get: function() {
        return true;
      },
      enumerable: false,
      configurable: true
    });
    Object.defineProperty(StaticActivator2.prototype, "activate", {
      get: function() {
        return true;
      },
      enumerable: false,
      configurable: true
    });
    Object.defineProperty(StaticActivator2.prototype, "conditionsMet", {
      get: function() {
        return true;
      },
      enumerable: false,
      configurable: true
    });
    return StaticActivator2;
  }(Activator);

  // ../../../build/engine/osk/obj/views/touchEventPromiseMap.js
  var TouchEventPromiseMap = /* @__PURE__ */ function() {
    function TouchEventPromiseMap2() {
      this.map = {};
    }
    TouchEventPromiseMap2.prototype.promiseForTouchpoint = function(id) {
      if (!this.map[id]) {
        this.map[id] = new managedPromise_default();
      }
      return this.map[id];
    };
    TouchEventPromiseMap2.prototype.maintainTouches = function(list) {
      var keys = Object.keys(this.map);
      for (var i = 0; i < list.length; i++) {
        var pos = keys.indexOf("" + list.item(i).identifier);
        if (pos != -1) {
          keys.splice(pos, 1);
        }
      }
      for (var _i = 0, keys_1 = keys; _i < keys_1.length; _i++) {
        var endedKey = keys_1[_i];
        this.map[endedKey].resolve();
        delete this.map[endedKey];
      }
    };
    return TouchEventPromiseMap2;
  }();
  var touchEventPromiseMap_default = TouchEventPromiseMap;

  // ../../../build/engine/osk/obj/views/oskView.js
  var OSKView = /* @__PURE__ */ function(_super) {
    (0, build_exports.__extends)(OSKView2, _super);
    function OSKView2(configuration) {
      var _this_1 = _super.call(this) || this;
      _this_1.legacyEvents = new LegacyEventEmitter();
      _this_1.needsLayout = true;
      _this_1.touchEventPromiseManager = new touchEventPromiseMap_default();
      _this_1.activationListener = function(flag) {
        if (!_this_1.mayDisable && !_this_1.activationModel.enabled) {
          _this_1.activationModel.off("activate", _this_1.activationListener);
          try {
            _this_1.activationModel.enabled = true;
          } finally {
            _this_1.activationModel.on("activate", _this_1.activationListener);
          }
        }
        _this_1.commonCheckAndDisplay();
      };
      _this_1.layerChangeHandler = function(source, newValue) {
        var _a;
        if (_this_1.vkbd) {
          _this_1.vkbd._UpdateVKShiftStyle(newValue);
        }
        if (_this_1.vkbd && _this_1.vkbd.layerId != newValue || source.value != newValue) {
          if ((_a = _this_1.vkbd) === null || _a === void 0 ? void 0 : _a.layerGroup.layers[newValue]) {
            _this_1.vkbd.layerId = newValue;
            _this_1.vkbd.showLanguage();
          }
          _this_1.keyboardView.updateState();
          _this_1.refreshLayout();
        }
        return false;
      };
      _this_1._Visible = false;
      _this_1.config = configuration = (0, build_exports.__assign)({}, configuration);
      if (_this_1.config.allowHideAnimations === void 0) {
        _this_1.config.allowHideAnimations = true;
      }
      _this_1.config.device = configuration.device || configuration.hostDevice;
      _this_1.config.isEmbedded = configuration.isEmbedded || false;
      _this_1.config.embeddedGestureConfig = configuration.embeddedGestureConfig || {};
      _this_1.config.activator.on("activate", _this_1.activationListener);
      _this_1._Box = createUnselectableElement("div");
      _this_1.kbdStyleSheetManager = new StylesheetManager(_this_1._Box, _this_1.config.doCacheBusting || false);
      _this_1.uiStyleSheetManager = new StylesheetManager(_this_1._Box);
      _this_1.bannerView = new bannerView_default();
      _this_1.bannerView.events.on("bannerchange", function() {
        return _this_1.refreshLayout();
      });
      _this_1._bannerController = new BannerController(_this_1.bannerView, _this_1.hostDevice, _this_1.config.predictionContextManager);
      _this_1.keyboardView = null;
      _this_1.setBaseMouseEventListeners();
      if (_this_1.hostDevice.touchable) {
        _this_1.setBaseTouchEventListeners();
      }
      return _this_1;
    }
    Object.defineProperty(OSKView2.prototype, "keyCodes", {
      get: function() {
        return codes_default.keyCodes;
      },
      enumerable: false,
      configurable: true
    });
    Object.defineProperty(OSKView2.prototype, "modifierCodes", {
      get: function() {
        return codes_default.modifierCodes;
      },
      enumerable: false,
      configurable: true
    });
    Object.defineProperty(OSKView2.prototype, "modifierBitmasks", {
      get: function() {
        return codes_default.modifierBitmasks;
      },
      enumerable: false,
      configurable: true
    });
    Object.defineProperty(OSKView2.prototype, "stateBitmasks", {
      get: function() {
        return codes_default.stateBitmasks;
      },
      enumerable: false,
      configurable: true
    });
    Object.defineProperty(OSKView2.prototype, "configuration", {
      get: function() {
        return this.config;
      },
      enumerable: false,
      configurable: true
    });
    Object.defineProperty(OSKView2.prototype, "bannerController", {
      get: function() {
        return this._bannerController;
      },
      enumerable: false,
      configurable: true
    });
    Object.defineProperty(OSKView2.prototype, "hostDevice", {
      get: function() {
        return this.config.hostDevice;
      },
      enumerable: false,
      configurable: true
    });
    Object.defineProperty(OSKView2.prototype, "fontRootPath", {
      get: function() {
        return this.config.pathConfig.fonts;
      },
      enumerable: false,
      configurable: true
    });
    Object.defineProperty(OSKView2.prototype, "isEmbedded", {
      get: function() {
        return this.config.isEmbedded;
      },
      enumerable: false,
      configurable: true
    });
    OSKView2.prototype.setBaseMouseEventListeners = function() {
      var _this_1 = this;
      this._Box.onmouseenter = this._VKbdMouseEnter = function(e) {
        if (_this_1.mouseEnterPromise) {
          _this_1.mouseEnterPromise.resolve();
        }
        _this_1.mouseEnterPromise = new managedPromise_default();
        _this_1.emit("pointerinteraction", _this_1.mouseEnterPromise.corePromise);
      };
      this._Box.onmouseleave = this._VKbdMouseLeave = function(e) {
        _this_1.mouseEnterPromise.resolve();
        _this_1.mouseEnterPromise = null;
      };
    };
    OSKView2.prototype.removeBaseMouseEventListeners = function() {
      this._Box.onmouseenter = null;
      this._Box.onmouseleave = null;
    };
    OSKView2.prototype.setBaseTouchEventListeners = function() {
      var _this_1 = this;
      var commonPrevention = function(e) {
        if (e.cancelable) {
          e.preventDefault();
        }
        e.stopPropagation();
        return false;
      };
      this._boxBaseTouchEventCancel = function(e) {
        _this_1.touchEventPromiseManager.maintainTouches(e.touches);
        return commonPrevention(e);
      };
      this._boxBaseTouchStart = function(e) {
        for (var i = 0; i < e.changedTouches.length; i++) {
          var promise = _this_1.touchEventPromiseManager.promiseForTouchpoint(e.changedTouches[i].identifier);
          _this_1.emit("pointerinteraction", promise.corePromise);
        }
        _this_1.touchEventPromiseManager.maintainTouches(e.touches);
        return commonPrevention(e);
      };
      this._Box.addEventListener("touchstart", this._boxBaseTouchStart, false);
      this._Box.addEventListener("touchmove", this._boxBaseTouchEventCancel, false);
      this._Box.addEventListener("touchend", this._boxBaseTouchEventCancel, false);
      this._Box.addEventListener("touchcancel", this._boxBaseTouchEventCancel, false);
    };
    OSKView2.prototype.removeBaseTouchEventListeners = function() {
      if (!this._boxBaseTouchEventCancel) {
        return;
      }
      this._Box.removeEventListener("touchstart", this._boxBaseTouchStart, false);
      this._Box.removeEventListener("touchmove", this._boxBaseTouchEventCancel, false);
      this._Box.removeEventListener("touchend", this._boxBaseTouchEventCancel, false);
      this._Box.removeEventListener("touchcancel", this._boxBaseTouchEventCancel, false);
      this._boxBaseTouchEventCancel = null;
      this._boxBaseTouchStart = null;
    };
    Object.defineProperty(OSKView2.prototype, "targetDevice", {
      get: function() {
        return this.config.device;
      },
      set: function(spec) {
        if (this.allowsDeviceChange(spec)) {
          this.config.device = spec;
          this.loadActiveKeyboard();
        } else {
          console.error("May not change target device for this OSKView type.");
        }
      },
      enumerable: false,
      configurable: true
    });
    OSKView2.prototype.allowsDeviceChange = function(newSpec) {
      return false;
    };
    Object.defineProperty(OSKView2.prototype, "activationModel", {
      get: function() {
        return this.config.activator;
      },
      set: function(model) {
        if (!model) {
          throw new Error("The activation model may not be set to null or undefined!");
        }
        this.config.activator.off("activate", this.activationListener);
        model.on("activate", this.activationListener);
        this.config.activator = model;
        this.commonCheckAndDisplay();
      },
      enumerable: false,
      configurable: true
    });
    Object.defineProperty(OSKView2.prototype, "mayDisable", {
      get: function() {
        var _a;
        if (this.hostDevice.touchable) {
          return false;
        }
        if ((_a = this.activeKeyboard) === null || _a === void 0 ? void 0 : _a.keyboard.isCJK) {
          return false;
        }
        return true;
      },
      enumerable: false,
      configurable: true
    });
    Object.defineProperty(OSKView2.prototype, "displayIfActive", {
      get: function() {
        return this.activationModel.enabled;
      },
      enumerable: false,
      configurable: true
    });
    OSKView2.prototype.commonCheckAndDisplay = function() {
      if (this.activationModel.activate && this.activeKeyboard) {
        this.present();
      } else {
        this.startHide(false);
      }
    };
    Object.defineProperty(OSKView2.prototype, "vkbd", {
      get: function() {
        if (this.keyboardView instanceof visualKeyboard_default) {
          return this.keyboardView;
        } else {
          return null;
        }
      },
      enumerable: false,
      configurable: true
    });
    Object.defineProperty(OSKView2.prototype, "banner", {
      get: function() {
        return this.bannerView;
      },
      enumerable: false,
      configurable: true
    });
    Object.defineProperty(OSKView2.prototype, "width", {
      get: function() {
        return this._width;
      },
      enumerable: false,
      configurable: true
    });
    Object.defineProperty(OSKView2.prototype, "height", {
      get: function() {
        return this._height;
      },
      enumerable: false,
      configurable: true
    });
    Object.defineProperty(OSKView2.prototype, "computedWidth", {
      get: function() {
        if (this.needsLayout) {
          this.refreshLayout();
        }
        return this._computedWidth;
      },
      enumerable: false,
      configurable: true
    });
    Object.defineProperty(OSKView2.prototype, "computedHeight", {
      get: function() {
        if (this.needsLayout) {
          this.refreshLayout();
        }
        return this._computedHeight;
      },
      enumerable: false,
      configurable: true
    });
    Object.defineProperty(OSKView2.prototype, "baseFontSize", {
      get: function() {
        var _a;
        return ((_a = this.parsedBaseFontSize) === null || _a === void 0 ? void 0 : _a.styleString) || "";
      },
      enumerable: false,
      configurable: true
    });
    Object.defineProperty(OSKView2.prototype, "parsedBaseFontSize", {
      get: function() {
        if (!this._baseFontSize) {
          this._baseFontSize = OSKView2.defaultFontSize(this.targetDevice, this.computedHeight, this.isEmbedded);
        }
        return this._baseFontSize;
      },
      enumerable: false,
      configurable: true
    });
    OSKView2.defaultFontSize = function(device, computedHeight, isEmbedded) {
      if (device.touchable) {
        var fontScale = device.formFactor == "phone" ? 1.6 * (isEmbedded ? 0.65 : 0.6) * 1.2 : 2;
        return ParsedLengthStyle.special(fontScale, "em");
      } else {
        return computedHeight ? ParsedLengthStyle.inPixels(computedHeight / 8) : void 0;
      }
    };
    Object.defineProperty(OSKView2.prototype, "activeKeyboard", {
      get: function() {
        return this.keyboardData;
      },
      set: function(keyboardData) {
        var _a;
        this.keyboardData = keyboardData;
        this.loadActiveKeyboard();
        if ((_a = this.keyboardData) === null || _a === void 0 ? void 0 : _a.keyboard.isCJK) {
          this.activationModel.enabled = true;
        }
      },
      enumerable: false,
      configurable: true
    });
    OSKView2.prototype.computeFrameHeight = function() {
      var _a, _b;
      return (((_a = this.headerView) === null || _a === void 0 ? void 0 : _a.layoutHeight.val) || 0) + (((_b = this.footerView) === null || _b === void 0 ? void 0 : _b.layoutHeight.val) || 0);
    };
    OSKView2.prototype.setSize = function(width, height, pending) {
      var mutatedFlag = false;
      var parsedWidth;
      var parsedHeight;
      if (!width && width !== 0) {
        return;
      }
      if (!height && height !== 0) {
        return;
      }
      if (Number.isFinite(width)) {
        parsedWidth = ParsedLengthStyle.inPixels(width);
      } else {
        parsedWidth = new ParsedLengthStyle(width);
      }
      if (Number.isFinite(height)) {
        parsedHeight = ParsedLengthStyle.inPixels(height);
      } else {
        parsedHeight = new ParsedLengthStyle(height);
      }
      if (width && height) {
        mutatedFlag = !this._width || !this._height;
        mutatedFlag = mutatedFlag || parsedWidth.styleString != this._width.styleString;
        mutatedFlag = mutatedFlag || parsedHeight.styleString != this._height.styleString;
        this._width = parsedWidth;
        this._height = parsedHeight;
      }
      this.needsLayout = this.needsLayout || mutatedFlag;
      this.refreshLayoutIfNeeded(pending);
    };
    OSKView2.prototype.setNeedsLayout = function() {
      this.needsLayout = true;
    };
    OSKView2.prototype.refreshLayout = function(pending) {
      var _a, _b;
      if (!this.keyboardView) {
        return;
      }
      var hasDimensions = this.width && this.height;
      if (!hasDimensions) {
        return;
      }
      var fixedSize = this.width.absolute && this.height.absolute;
      var computedStyle = getComputedStyle(this._Box);
      var isInDOM = computedStyle.height != "" && computedStyle.height != "auto";
      if (fixedSize) {
        this._computedWidth = this.width.val;
        this._computedHeight = this.height.val;
      } else if (isInDOM) {
        var parent_1 = this._Box.parentElement;
        this._computedWidth = this.width.val * (this.width.absolute ? 1 : parent_1.offsetWidth);
        this._computedHeight = this.height.val * (this.height.absolute ? 1 : parent_1.offsetHeight);
      } else {
        console.warn("Unable to properly perform layout - specification uses a relative spec, thus relies upon insertion into the DOM for layout.");
        return;
      }
      this.needsLayout = false;
      this.banner.element.style.fontSize = this.baseFontSize;
      if (this.vkbd) {
        this.vkbd.fontSize = this.parsedBaseFontSize;
      }
      if (!pending) {
        (_a = this.headerView) === null || _a === void 0 ? void 0 : _a.refreshLayout();
        this.bannerView.refreshLayout();
        (_b = this.footerView) === null || _b === void 0 ? void 0 : _b.refreshLayout();
      }
      if (this.vkbd) {
        var availableHeight = this.computedHeight - this.computeFrameHeight();
        if (this.bannerView.height > 0) {
          availableHeight -= this.bannerView.height + 5;
        }
        this.vkbd.setSize(this.computedWidth, availableHeight, pending);
        var bs = this._Box.style;
        bs.width = bs.maxWidth = this.computedWidth + "px";
        bs.height = bs.maxHeight = this.computedHeight + "px";
        this.vkbd.showLanguage();
      } else {
        var bs = this._Box.style;
        bs.width = "auto";
        bs.height = "auto";
        bs.maxWidth = bs.maxHeight = "";
      }
    };
    OSKView2.prototype.refreshLayoutIfNeeded = function(pending) {
      if (this.needsLayout) {
        this.refreshLayout(pending);
      }
    };
    OSKView2.prototype.postKeyboardLoad = function() {
      this._Visible = false;
      this.postKeyboardAdjustments();
      if (this.displayIfActive) {
        this.present();
      }
    };
    OSKView2.prototype.loadActiveKeyboard = function() {
      var _a, _b, _c, _d;
      this.setBoxStyling();
      if (this.vkbd) {
        this.vkbd.shutdown();
      }
      this.keyboardView = null;
      this.needsLayout = true;
      this._Box.innerHTML = "";
      var subpath = "osk/";
      if (this.config.isEmbedded) {
        subpath = "";
      }
      for (var _i = 0, _e = OSKView2.STYLESHEET_FILES; _i < _e.length; _i++) {
        var sheetFile = _e[_i];
        var sheetHref = "".concat(this.config.pathConfig.resources, "/").concat(subpath).concat(sheetFile);
        this.uiStyleSheetManager.linkExternalSheet(sheetHref);
      }
      if (this.headerView) {
        this._Box.appendChild(this.headerView.element);
      }
      this._Box.appendChild(this.banner.element);
      if (this.bannerView.banner) {
        this.banner.banner.configureForKeyboard((_a = this.keyboardData) === null || _a === void 0 ? void 0 : _a.keyboard, (_b = this.keyboardData) === null || _b === void 0 ? void 0 : _b.metadata);
      }
      var kbdView = this.keyboardView = this._GenerateKeyboardView((_c = this.keyboardData) === null || _c === void 0 ? void 0 : _c.keyboard, (_d = this.keyboardData) === null || _d === void 0 ? void 0 : _d.metadata);
      this._Box.appendChild(kbdView.element);
      kbdView.postInsert();
      if (this.footerView) {
        this._Box.appendChild(this.footerView.element);
      }
      this.banner.appendStyles();
      if (this.vkbd) {
        this.vkbd.createKeyTip();
        var globeHint = this.vkbd.createGlobeHint();
        if (globeHint) {
          this._Box.appendChild(globeHint.element);
        }
        this.vkbd.appendStyleSheet();
      }
      this.postKeyboardLoad();
    };
    OSKView2.prototype._GenerateKeyboardView = function(keyboard, keyboardMetadata) {
      var device = this.targetDevice;
      if (this.vkbd) {
        this.vkbd.shutdown();
      }
      this._Box.className = "";
      if (keyboard == null && !device.touchable) {
        return new emptyView_default();
      } else {
        if (keyboard && keyboard.layout(device.formFactor)) {
          return this._GenerateVisualKeyboard(keyboard, keyboardMetadata);
        } else if (!keyboard || !keyboardMetadata) {
          return this._GenerateVisualKeyboard(null, null);
        } else {
          return new helpPageView_default(keyboard);
        }
      }
    };
    OSKView2.prototype._GenerateVisualKeyboard = function(keyboard, keyboardMetadata) {
      var _this_1 = this;
      var device = this.targetDevice;
      var vkbd = new visualKeyboard_default({
        keyboard: keyboard,
        keyboardMetadata: keyboardMetadata,
        device: device,
        hostDevice: this.hostDevice,
        topContainer: this._Box,
        styleSheetManager: this.kbdStyleSheetManager,
        pathConfig: this.config.pathConfig,
        embeddedGestureConfig: this.config.embeddedGestureConfig,
        isEmbedded: this.config.isEmbedded
      });
      vkbd.on("keyevent", function(keyEvent) {
        return _this_1.emit("keyevent", keyEvent);
      });
      vkbd.on("globekey", function(keyElement, on) {
        return _this_1.emit("globekey", keyElement, on);
      });
      vkbd.on("hiderequested", function(keyElement) {
        _this_1.doHide(true);
        _this_1.emit("hiderequested", keyElement);
      });
      this._Box.className = device.formFactor + " " + device.OS.toLowerCase() + " kmw-osk-frame";
      return vkbd;
    };
    OSKView2.prototype.present = function() {
      if (!this.mayShow()) {
        return;
      }
      this.keyboardView.updateState();
      this._Box.style.display = "block";
      this.refreshLayoutIfNeeded();
      if (this.keyboardView instanceof visualKeyboard_default) {
        this.keyboardView.showLanguage();
      }
      this._Visible = true;
      this._Box.style.opacity = "1";
      if (this._Box.style.visibility == "hidden") {
        var _this_2 = this;
        window.setTimeout(function() {
          _this_2._Box.style.visibility = "visible";
        }, 0);
      }
      this.setDisplayPositioning();
    };
    OSKView2.prototype.startHide = function(hiddenByUser) {
      if (!this.mayHide(hiddenByUser)) {
        return;
      }
      if (hiddenByUser) {
        this.activationModel.enabled = this.keyboardData.keyboard.isCJK || this.hostDevice.touchable ? true : false;
      }
      var promise = null;
      if (this._Box && this.hostDevice.touchable && !(this.keyboardView instanceof emptyView_default) && this.config.allowHideAnimations) {
        promise = this.useHideAnimation();
      } else {
        promise = Promise.resolve(true);
      }
      var _this = this;
      promise.then(function(shouldHide) {
        if (shouldHide) {
          _this.finalizeHide();
        }
      });
      this.doHide(hiddenByUser);
    };
    OSKView2.prototype.finalizeHide = function() {
      if (document.body.className.indexOf("osk-always-visible") >= 0) {
        return;
      }
      if (this._Box) {
        var bs = this._Box.style;
        bs.display = "none";
        bs.transition = "";
        bs.opacity = "1";
        this._Visible = false;
      }
      if (this.vkbd) {
        this.vkbd.onHide();
      }
    };
    OSKView2.prototype.mayShow = function() {
      if (!this.activationModel.conditionsMet) {
        return false;
      }
      if (!this.keyboardView || this.keyboardView instanceof emptyView_default || !this.activationModel.enabled) {
        return false;
      }
      if (!this._Box) {
        return false;
      }
      return true;
    };
    OSKView2.prototype.mayHide = function(hiddenByUser) {
      if (this.activationModel.conditionsMet && !this.mayDisable) {
        return false;
      }
      if (this.activationModel instanceof StaticActivator) {
        return false;
      }
      if (!hiddenByUser && this.hostDevice.formFactor == "desktop") {
        if (document.body.className.indexOf("osk-always-visible") >= 0) {
          return false;
        }
      }
      return true;
    };
    OSKView2.prototype.useHideAnimation = function() {
      var os = this._Box.style;
      var _this = this;
      return new Promise(function(resolve) {
        var cleanup = function() {
          _this._Box.removeEventListener("transitionend", cleanup, false);
          _this._Box.removeEventListener("webkitTransitionEnd", cleanup, false);
          _this._Box.removeEventListener("transitioncancel", cleanup, false);
          _this._Box.removeEventListener("webkitTransitionCancel", cleanup, false);
          if (_this._animatedHideTimeout != 0) {
            window.clearTimeout(_this._animatedHideTimeout);
          }
          _this._animatedHideTimeout = 0;
          if (_this._Visible && _this.activationModel.conditionsMet) {
            os.transition = "";
            os.opacity = "1";
            resolve(false);
            return false;
          } else {
            resolve(true);
            return true;
          }
        }, startup = function() {
          _this._Box.removeEventListener("transitionrun", startup, false);
          _this._Box.removeEventListener("webkitTransitionRun", startup, false);
          _this._Box.addEventListener("transitionend", cleanup, false);
          _this._Box.addEventListener("webkitTransitionEnd", cleanup, false);
          _this._Box.addEventListener("transitioncancel", cleanup, false);
          _this._Box.addEventListener("webkitTransitionCancel", cleanup, false);
        };
        _this._Box.addEventListener("transitionrun", startup, false);
        _this._Box.addEventListener("webkitTransitionRun", startup, false);
        os.transition = "opacity 0.5s linear 0";
        os.opacity = "0";
        _this._animatedHideTimeout = window.setTimeout(cleanup, 200);
      });
    };
    OSKView2.prototype.hideNow = function() {
      if (!this.mayHide(false) || !this._Box) {
        return;
      }
      if (this._animatedHideTimeout) {
        window.clearTimeout(this._animatedHideTimeout);
        this._animatedHideTimeout = 0;
      }
      var os = this._Box.style;
      os.transition = "";
      os.opacity = "0";
      this.finalizeHide();
    };
    OSKView2.prototype["shutdown"] = function() {
      this.removeBaseMouseEventListeners();
      this.removeBaseTouchEventListeners();
      var _box = this._Box;
      if (_box.parentElement) {
        _box.parentElement.removeChild(_box);
      }
      this.kbdStyleSheetManager.unlinkAll();
      this.uiStyleSheetManager.unlinkAll();
    };
    OSKView2.prototype.getRect = function() {
      var p = {};
      p["left"] = p.left = getAbsoluteX(this._Box);
      p["top"] = p.top = getAbsoluteY(this._Box);
      p["width"] = this.computedWidth;
      p["height"] = this.computedHeight;
      return p;
    };
    OSKView2.prototype.isEnabled = function() {
      return this.displayIfActive;
    };
    OSKView2.prototype.isVisible = function() {
      return this._Visible;
    };
    OSKView2.prototype.hide = function() {
      this.activationModel.enabled = false;
      this.startHide(true);
    };
    OSKView2.prototype.show = function(bShow) {
      if (arguments.length > 0) {
        this.activationModel.enabled = bShow;
      } else {
        if (this.activationModel.conditionsMet) {
          this.activationModel.enabled = !this.activationModel.enabled;
        }
      }
    };
    OSKView2.prototype.doShow = function(p) {
      this.legacyEvents.callEvent("show", p);
    };
    OSKView2.prototype.doHide = function(hiddenByUser) {
      var p = {
        HiddenByUser: hiddenByUser
      };
      this.legacyEvents.callEvent("hide", p);
    };
    OSKView2.prototype.addEventListener = function(event, fn) {
      this.legacyEvents.addEventListener(event, fn);
    };
    OSKView2.prototype.removeEventListener = function(event, fn) {
      this.legacyEvents.removeEventListener(event, fn);
    };
    OSKView2.STYLESHEET_FILES = ["kmwosk.css", "globe-hint.css"];
    return OSKView2;
  }(import_eventemitter314.default);
  var oskView_default = OSKView;

  // ../../../build/engine/osk/obj/components/titleBar.js
  var import_eventemitter315 = __toESM(require_eventemitter3(), 1);
  var TitleBar = /* @__PURE__ */ function(_super) {
    (0, build_exports.__extends)(TitleBar2, _super);
    function TitleBar2(dragHandler) {
      var _this = _super.call(this) || this;
      _this.mouseCancellingHandler = function(ev) {
        ev.preventDefault();
        ev.cancelBubble = true;
        return false;
      };
      _this._element = _this.buildTitleBar();
      _this.helpEnabled = false;
      _this.configEnabled = false;
      if (dragHandler) {
        _this.element.onmousedown = dragHandler.mouseDownHandler;
      }
      return _this;
    }
    Object.defineProperty(TitleBar2.prototype, "helpEnabled", {
      get: function() {
        return this._helpEnabled;
      },
      set: function(val) {
        this._helpEnabled = val;
        this._helpButton.style.display = val ? "inline" : "none";
      },
      enumerable: false,
      configurable: true
    });
    Object.defineProperty(TitleBar2.prototype, "configEnabled", {
      get: function() {
        return this._configEnabled;
      },
      set: function(val) {
        this._configEnabled = val;
        this._configButton.style.display = val ? "inline" : "none";
      },
      enumerable: false,
      configurable: true
    });
    Object.defineProperty(TitleBar2.prototype, "layoutHeight", {
      get: function() {
        return TitleBar2.DISPLAY_HEIGHT;
      },
      enumerable: false,
      configurable: true
    });
    Object.defineProperty(TitleBar2.prototype, "element", {
      get: function() {
        return this._element;
      },
      enumerable: false,
      configurable: true
    });
    TitleBar2.prototype.setPinCJKOffset = function() {
      this._unpinButton.style.left = "15px";
    };
    TitleBar2.prototype.showPin = function(visible) {
      this._unpinButton.style.display = visible ? "block" : "none";
    };
    TitleBar2.prototype.setTitle = function(str) {
      this._caption.innerHTML = str;
    };
    TitleBar2.prototype.setTitleFromKeyboard = function(keyboard) {
      var title = "<span style='font-weight:bold'>" + (keyboard === null || keyboard === void 0 ? void 0 : keyboard.name) + "</span>";
      this._caption.innerHTML = title;
    };
    TitleBar2.prototype.buildTitleBar = function() {
      var _this = this;
      var bar = createUnselectableElement("div");
      bar.id = "keymanweb_title_bar";
      bar.className = "kmw-title-bar";
      var Ltitle = this._caption = createUnselectableElement("span");
      Ltitle.className = "kmw-title-bar-caption";
      Ltitle.style.color = "#fff";
      bar.appendChild(Ltitle);
      var Limg = this._closeButton = this.buildCloseButton();
      this._closeButton.onclick = function() {
        _this.emit("close");
        return false;
      };
      bar.appendChild(Limg);
      Limg = this._helpButton = this.buildHelpButton();
      this._helpButton.onclick = function() {
        _this.emit("help");
        return false;
      };
      bar.appendChild(Limg);
      Limg = this._configButton = this.buildConfigButton();
      this._configButton.onclick = function() {
        _this.emit("config");
        return false;
      };
      bar.appendChild(Limg);
      Limg = this._unpinButton = this.buildUnpinButton();
      this._unpinButton.onclick = function() {
        _this.emit("unpin");
        return false;
      };
      bar.appendChild(Limg);
      return bar;
    };
    TitleBar2.prototype.buildCloseButton = function() {
      var Limg = createUnselectableElement("div");
      Limg.id = "kmw-close-button";
      Limg.className = "kmw-title-bar-image";
      Limg.onmousedown = this.mouseCancellingHandler;
      return Limg;
    };
    TitleBar2.prototype.buildHelpButton = function() {
      var Limg = createUnselectableElement("div");
      Limg.id = "kmw-help-image";
      Limg.className = "kmw-title-bar-image";
      Limg.title = "KeymanWeb Help";
      Limg.onmousedown = this.mouseCancellingHandler;
      return Limg;
    };
    TitleBar2.prototype.buildConfigButton = function() {
      var Limg = createUnselectableElement("div");
      Limg.id = "kmw-config-image";
      Limg.className = "kmw-title-bar-image";
      Limg.title = "KeymanWeb Configuration Options";
      Limg.onmousedown = this.mouseCancellingHandler;
      return Limg;
    };
    TitleBar2.prototype.buildUnpinButton = function() {
      var Limg = createUnselectableElement("div");
      Limg.id = "kmw-pin-image";
      Limg.className = "kmw-title-bar-image";
      Limg.title = "Pin the On Screen Keyboard to its default location on the active text box";
      Limg.onmousedown = this.mouseCancellingHandler;
      return Limg;
    };
    TitleBar2.prototype.refreshLayout = function() {
    };
    TitleBar2.DISPLAY_HEIGHT = ParsedLengthStyle.inPixels(20);
    return TitleBar2;
  }(import_eventemitter315.default);
  var titleBar_default = TitleBar;

  // ../../../build/engine/osk/obj/components/resizeBar.js
  var import_eventemitter316 = __toESM(require_eventemitter3(), 1);
  var ResizeBar = /* @__PURE__ */ function(_super) {
    (0, build_exports.__extends)(ResizeBar2, _super);
    function ResizeBar2(dragHandler) {
      var _this = _super.call(this) || this;
      _this.mouseCancellingHandler = function(ev) {
        ev.preventDefault();
        ev.cancelBubble = true;
        return false;
      };
      _this._element = _this.buildResizeBar();
      if (dragHandler) {
        _this._resizeHandle.onmousedown = dragHandler.mouseDownHandler;
      }
      return _this;
    }
    Object.defineProperty(ResizeBar2.prototype, "layoutHeight", {
      get: function() {
        return ResizeBar2.DISPLAY_HEIGHT;
      },
      enumerable: false,
      configurable: true
    });
    Object.defineProperty(ResizeBar2.prototype, "element", {
      get: function() {
        return this._element;
      },
      enumerable: false,
      configurable: true
    });
    Object.defineProperty(ResizeBar2.prototype, "handle", {
      get: function() {
        return this._resizeHandle;
      },
      enumerable: false,
      configurable: true
    });
    ResizeBar2.prototype.allowResizing = function(flag) {
      this._resizeHandle.style.display = flag ? "block" : "none";
    };
    ResizeBar2.prototype.buildResizeBar = function() {
      var _this = this;
      var bar = createUnselectableElement("div");
      bar.className = "kmw-footer";
      bar.onmousedown = this.mouseCancellingHandler;
      var Ltitle = createUnselectableElement("div");
      Ltitle.className = "kmw-footer-caption";
      Ltitle.innerHTML = '<a href="https://keyman.com/developer/keymanweb/">KeymanWeb</a>';
      Ltitle.id = "keymanweb-osk-footer-caption";
      Ltitle.addEventListener("dblclick", function(e) {
        _this.emit("showbuild");
        return false;
      }, false);
      bar.appendChild(Ltitle);
      var Limg = createUnselectableElement("div");
      Limg.className = "kmw-footer-resize";
      bar.appendChild(Limg);
      this._resizeHandle = Limg;
      return bar;
    };
    ResizeBar2.prototype.refreshLayout = function() {
    };
    ResizeBar2.DISPLAY_HEIGHT = ParsedLengthStyle.inPixels(16);
    return ResizeBar2;
  }(import_eventemitter316.default);
  var resizeBar_default = ResizeBar;

  // ../../../build/engine/osk/obj/input/mouseDragOperation.js
  var MouseStartSnapshot = /* @__PURE__ */ function() {
    function MouseStartSnapshot2(e) {
      this._VPreviousMouseMove = document.onmousemove;
      this._VPreviousMouseUp = document.onmouseup;
      this._VPreviousCursor = document.body.style.cursor;
      this._VPreviousMouseButton = typeof e.which == "undefined" ? e.button : e.which;
    }
    MouseStartSnapshot2.prototype.restore = function() {
      document.onmousemove = this._VPreviousMouseMove;
      document.onmouseup = this._VPreviousMouseUp;
      if (document.body.style.cursor) {
        document.body.style.cursor = this._VPreviousCursor;
      }
    };
    MouseStartSnapshot2.prototype.matchesCausingClick = function(e) {
      return this._VPreviousMouseButton == (typeof e.which == "undefined" ? e.button : e.which);
    };
    return MouseStartSnapshot2;
  }();
  var MouseDragOperation = function() {
    function MouseDragOperation2(cursorType) {
      this.startHandler = this._VMoveMouseDown.bind(this);
      this.cursorType = cursorType;
    }
    Object.defineProperty(MouseDragOperation2.prototype, "enabled", {
      get: function() {
        return this._enabled;
      },
      set: function(flag) {
        this._enabled = flag;
      },
      enumerable: false,
      configurable: true
    });
    Object.defineProperty(MouseDragOperation2.prototype, "isActive", {
      get: function() {
        return !!this._mouseStartSnapshot;
      },
      enumerable: false,
      configurable: true
    });
    Object.defineProperty(MouseDragOperation2.prototype, "mouseDownHandler", {
      get: function() {
        return this.startHandler;
      },
      enumerable: false,
      configurable: true
    });
    MouseDragOperation2.prototype._VMoveMouseDown = function(e) {
      if (!e) {
        return true;
      }
      if (!this._enabled) {
        return true;
      }
      if (!this._mouseStartSnapshot) {
        this._mouseStartSnapshot = new MouseStartSnapshot(e);
      }
      this._startCoord = inputEventCoordinate_default.fromEvent(e);
      document.onmousemove = this._VMoveMouseMove.bind(this);
      document.onmouseup = this._VMoveMouseUp.bind(this);
      if (document.body.style.cursor) {
        document.body.style.cursor = this.cursorType;
      }
      e.preventDefault();
      e.cancelBubble = true;
      this.onDragStart();
      return false;
    };
    MouseDragOperation2.prototype._VMoveMouseMove = function(e) {
      if (!e) {
        return true;
      }
      if (!this.enabled) {
        return true;
      }
      e.preventDefault();
      e.cancelBubble = true;
      if (!this._mouseStartSnapshot.matchesCausingClick(e)) {
        return this._VMoveMouseUp(e);
      } else {
        var coord = inputEventCoordinate_default.fromEvent(e);
        var deltaX = coord.x - this._startCoord.x;
        var deltaY = coord.y - this._startCoord.y;
        this.onDragMove(deltaX, deltaY);
        return false;
      }
    };
    MouseDragOperation2.prototype._VMoveMouseUp = function(e) {
      if (!e) {
        return true;
      }
      this._mouseStartSnapshot.restore();
      this._mouseStartSnapshot = null;
      e.preventDefault();
      e.cancelBubble = true;
      this.onDragRelease();
      return false;
    };
    return MouseDragOperation2;
  }();
  var mouseDragOperation_default = MouseDragOperation;

  // ../../../build/engine/osk/obj/views/twoStateActivator.js
  var TwoStateActivator = /* @__PURE__ */ function(_super) {
    (0, build_exports.__extends)(TwoStateActivator2, _super);
    function TwoStateActivator2() {
      var _this = _super !== null && _super.apply(this, arguments) || this;
      _this._enabled = true;
      _this.actValue = null;
      return _this;
    }
    Object.defineProperty(TwoStateActivator2.prototype, "activate", {
      get: function() {
        return this._enabled && !!this.actValue;
      },
      enumerable: false,
      configurable: true
    });
    TwoStateActivator2.prototype.checkState = function(oldValue) {
      if (this.activate != oldValue) {
        this.emit("activate", this.activate);
      }
    };
    Object.defineProperty(TwoStateActivator2.prototype, "enabled", {
      get: function() {
        return this._enabled;
      },
      set: function(flag) {
        var oldState = this.activate;
        this._enabled = flag;
        this.checkState(oldState);
      },
      enumerable: false,
      configurable: true
    });
    Object.defineProperty(TwoStateActivator2.prototype, "activationTrigger", {
      get: function() {
        return this.actValue;
      },
      set: function(value) {
        var oldState = this.activate;
        var oldValue = this.actValue;
        this.actValue = value;
        this.checkState(oldState);
        if (oldValue != value) {
          this.emit("triggerchange", value);
        }
      },
      enumerable: false,
      configurable: true
    });
    Object.defineProperty(TwoStateActivator2.prototype, "conditionsMet", {
      get: function() {
        return !!this.activationTrigger;
      },
      enumerable: false,
      configurable: true
    });
    return TwoStateActivator2;
  }(activator_default);
  var twoStateActivator_default = TwoStateActivator;

  // ../../../build/engine/osk/obj/views/floatingOskCookie.js
  var FloatingOSKCookieSerializer = /* @__PURE__ */ function(_super) {
    (0, build_exports.__extends)(FloatingOSKCookieSerializer2, _super);
    function FloatingOSKCookieSerializer2() {
      return _super.call(this, "KeymanWeb_OnScreenKeyboard") || this;
    }
    FloatingOSKCookieSerializer2.prototype.loadWithDefaults = function(defaults) {
      return (0, build_exports.__assign)((0, build_exports.__assign)({}, defaults), this.load());
    };
    FloatingOSKCookieSerializer2.prototype.load = function() {
      var cookie = _super.prototype.load.call(this, function(value, key) {
        switch (key) {
          case "version":
            return value;
          default:
            return Number.parseInt(value, 10);
        }
      });
      if (!cookie.width) {
        delete cookie.width;
      }
      if (!cookie.height) {
        delete cookie.height;
      }
      return cookie;
    };
    FloatingOSKCookieSerializer2.prototype.save = function(cookie) {
      _super.prototype.save.call(this, cookie);
    };
    return FloatingOSKCookieSerializer2;
  }(cookieSerializer_default);

  // ../../../build/engine/osk/obj/views/floatingOskView.js
  var FloatingOSKView = /* @__PURE__ */ function(_super) {
    (0, build_exports.__extends)(FloatingOSKView2, _super);
    function FloatingOSKView2(config) {
      var _this_1 = this;
      config.activator = config.activator || new twoStateActivator_default();
      _this_1 = _super.call(this, config) || this;
      _this_1.userPositioned = false;
      _this_1.specifiedPosition = false;
      _this_1.noDrag = false;
      _this_1.layoutSerializer = new FloatingOSKCookieSerializer();
      _this_1.restorePosition = function(keepDefaultPosition) {
        var isVisible = this._Visible;
        var dragPromise = new managedPromise_default();
        this.emit("dragmove", dragPromise.corePromise);
        this.loadPersistedLayout();
        this.userPositioned = false;
        if (!keepDefaultPosition) {
          delete this.dfltX;
          delete this.dfltY;
        }
        this.savePersistedLayout();
        if (isVisible) {
          this.present();
        }
        this.titleBar.showPin(false);
        dragPromise.resolve();
        this.doResizeMove();
      }.bind(_this_1);
      _this_1.typedActivationModel.on("triggerchange", function() {
        return _this_1.setDisplayPositioning();
      });
      document.body.appendChild(_this_1._Box);
      _this_1.titleBar = new titleBar_default(_this_1.titleDragHandler);
      _this_1.titleBar.on("help", function() {
        _this_1.legacyEvents.callEvent("helpclick", {});
      });
      _this_1.titleBar.on("config", function() {
        _this_1.legacyEvents.callEvent("configclick", {});
      });
      _this_1.titleBar.on("close", function() {
        return _this_1.startHide(true);
      });
      _this_1.titleBar.on("unpin", function() {
        return _this_1.restorePosition(true);
      });
      _this_1.resizeBar = new resizeBar_default(_this_1.resizeDragHandler);
      _this_1.resizeBar.on("showbuild", function() {
        return _this_1.emit("showbuild");
      });
      _this_1.headerView = _this_1.titleBar;
      var onListenedEvent = function(eventName) {
        var titleBar = _this_1.headerView;
        if (titleBar && titleBar instanceof titleBar_default) {
          switch (eventName) {
            case "configclick":
              titleBar.configEnabled = _this_1.legacyEvents.listenerCount("configclick") > 0;
              break;
            case "helpclick":
              titleBar.helpEnabled = _this_1.legacyEvents.listenerCount("helpclick") > 0;
              break;
            default:
              return;
          }
        }
      };
      var listenerSpyNew = new EmitterListenerSpy(_this_1);
      var listenerSpyOld = new EmitterListenerSpy(_this_1.legacyEvents);
      for (var _i = 0, _a = [listenerSpyNew, listenerSpyOld]; _i < _a.length; _i++) {
        var listenerSpy = _a[_i];
        listenerSpy.on("listeneradded", onListenedEvent);
        listenerSpy.on("listenerremoved", onListenedEvent);
      }
      _this_1.loadPersistedLayout();
      return _this_1;
    }
    Object.defineProperty(FloatingOSKView2.prototype, "typedActivationModel", {
      get: function() {
        return this.activationModel;
      },
      enumerable: false,
      configurable: true
    });
    FloatingOSKView2.prototype._Unload = function() {
      this.keyboardView = null;
      this.bannerView = null;
      this._Box = null;
    };
    FloatingOSKView2.prototype.setBoxStyling = function() {
      var s = this._Box.style;
      s.zIndex = "9999";
      s.display = "none";
      s.width = "auto";
      s.position = "absolute";
    };
    FloatingOSKView2.prototype.postKeyboardAdjustments = function() {
      this.enableMoveResizeHandlers();
      if (this.activeKeyboard) {
        this.titleBar.setTitleFromKeyboard(this.activeKeyboard.keyboard);
      }
      if (this.vkbd) {
        this.footerView = this.resizeBar;
        this._Box.appendChild(this.footerView.element);
      } else {
        if (this.footerView) {
          this._Box.removeChild(this.footerView.element);
        }
        this.footerView = null;
      }
      this.loadPersistedLayout();
      this.setNeedsLayout();
    };
    FloatingOSKView2.prototype["isEnabled"] = function() {
      return this.displayIfActive;
    };
    FloatingOSKView2.prototype["isVisible"] = function() {
      return this._Visible;
    };
    FloatingOSKView2.prototype.savePersistedLayout = function() {
      var p = this.getPos();
      var c = {
        visible: this.displayIfActive ? 1 : 0,
        userSet: this.userPositioned ? 1 : 0,
        left: p.left,
        top: p.top,
        _version: version_default.CURRENT.toString()
      };
      if (this.vkbd) {
        c.width = this.width.val;
        c.height = this.height.val;
      }
      this.layoutSerializer.save(c);
    };
    FloatingOSKView2.prototype.loadPersistedLayout = function() {
      var c = this.layoutSerializer.loadWithDefaults({
        visible: 1,
        userSet: 0,
        left: -1,
        top: -1,
        _version: void 0,
        width: 0.3 * screen.width,
        height: 0.15 * screen.height
      });
      this.activationModel.enabled = c.visible == 1;
      this.userPositioned = c.userSet == 1;
      this.x = c.left;
      this.y = c.top;
      var cookieVersionString = c._version;
      var isNewCookie = cookieVersionString === void 0;
      var newWidth = c.width;
      var newHeight = c.height;
      if (newWidth < 0.2 * screen.width) {
        newWidth = 0.2 * screen.width;
      }
      if (newHeight < 0.1 * screen.height) {
        newHeight = 0.1 * screen.height;
      }
      if (newWidth > 0.9 * screen.width) {
        newWidth = 0.9 * screen.width;
      }
      if (newHeight > 0.5 * screen.height) {
        newHeight = 0.5 * screen.height;
      }
      if (isNewCookie || !cookieVersionString) {
        if (this.headerView && this.headerView.layoutHeight.absolute) {
          newHeight += this.headerView.layoutHeight.val;
        }
        if (this.footerView && this.footerView.layoutHeight.absolute) {
          newHeight += this.footerView.layoutHeight.val;
        }
      }
      this.setSize(newWidth, newHeight);
      if (this.x == -1 || this.y == -1 || !this._Box) {
        this.userPositioned = false;
      }
      if (this.x < window.pageXOffset - 0.8 * newWidth) {
        this.x = window.pageXOffset - 0.8 * newWidth;
      }
      if (this.y < 0) {
        this.x = -1;
        this.y = -1;
        this.userPositioned = false;
      }
      if (this.userPositioned && this._Box) {
        this.setPos({ "left": this.x, "top": this.y });
      }
    };
    FloatingOSKView2.prototype.getDefaultKeyboardHeight = function() {
      if (this.configuration.heightOverride) {
        return this.configuration.heightOverride();
      }
      var oskHeightLandscapeView = Math.floor(Math.min(screen.availHeight, screen.availWidth) / 2), height = oskHeightLandscapeView;
      if (this.targetDevice.formFactor == "phone") {
        var sx = Math.min(screen.height, screen.width), sy = Math.max(screen.height, screen.width);
        if (!landscapeView())
          height = Math.floor(Math.max(screen.availHeight, screen.availWidth) / 3);
        else
          height = height * (sy / sx) / 1.6;
      }
      if (this.targetDevice.OS == deviceSpec_default.OperatingSystem.iOS) {
        height = height / getViewportScale();
      }
      return height;
    };
    FloatingOSKView2.prototype.getDefaultWidth = function() {
      if (this.configuration.widthOverride) {
        return this.configuration.widthOverride();
      }
      var width;
      if (this.targetDevice.OS == deviceSpec_default.OperatingSystem.iOS) {
        width = window.innerWidth;
      } else if (this.targetDevice.OS == deviceSpec_default.OperatingSystem.Android) {
        try {
          width = document.documentElement.clientWidth;
        } catch (ex) {
          width = screen.availWidth;
        }
      } else {
        width = screen.width;
      }
      return width;
    };
    FloatingOSKView2.prototype.doResizeMove = function(p) {
      this.legacyEvents.callEvent("resizemove", p);
    };
    FloatingOSKView2.prototype.setRect = function(p) {
      if (this._Box == null || this.targetDevice.formFactor != "desktop") {
        return;
      }
      var b = this._Box, bs = b.style;
      if ("left" in p) {
        this.x = p["left"] - getAbsoluteX(b) + b.offsetLeft;
        bs.left = this.x + "px";
        this.dfltX = bs.left;
      }
      if ("top" in p) {
        this.y = p["top"] - getAbsoluteY(b) + b.offsetTop;
        bs.top = this.y + "px";
        this.dfltY = bs.top;
      }
      if (this.vkbd != null) {
        var d = this.vkbd.kbdDiv, ds = d.style;
        if ("width" in p) {
          var w = p["width"] - (b.offsetWidth - d.offsetWidth);
          if (w < 0.2 * screen.width) {
            w = 0.2 * screen.width;
          }
          if (w > 0.9 * screen.width) {
            w = 0.9 * screen.width;
          }
          ds.width = w + "px";
          this.setSize(w, this.computedHeight, true);
        }
        if ("height" in p) {
          var h = p["height"] - (b.offsetHeight - d.offsetHeight);
          if (h < 0.1 * screen.height) {
            h = 0.1 * screen.height;
          }
          if (h > 0.5 * screen.height) {
            h = 0.5 * screen.height;
          }
          ds.height = h + "px";
          ds.fontSize = h / 8 + "px";
          this.setSize(this.computedWidth, h, true);
        }
        if ("nosize" in p) {
          this.resizingEnabled = !p["nosize"];
        }
      }
      if ("nomove" in p) {
        this.noDrag = p["nomove"];
        this.movementEnabled = !this.noDrag;
      }
      this.savePersistedLayout();
    };
    FloatingOSKView2.prototype.getPos = function() {
      var Lkbd = this._Box, p = {
        left: this._Visible ? Lkbd.offsetLeft : this.x,
        top: this._Visible ? Lkbd.offsetTop : this.y
      };
      return p;
    };
    FloatingOSKView2.prototype.setPos = function(p) {
      if (typeof this._Box == "undefined") {
        return;
      }
      if (this.userPositioned) {
        var Px = p["left"], Py = p["top"];
        if (typeof Px != "undefined") {
          if (Px < -0.8 * this._Box.offsetWidth) {
            Px = -0.8 * this._Box.offsetWidth;
          }
          if (this.userPositioned) {
            this._Box.style.left = Px + "px";
            this.x = Px;
          }
        }
        if (typeof Py != "undefined") {
          if (Py < 0) {
            Py = 0;
          }
          if (this.userPositioned) {
            this._Box.style.top = Py + "px";
            this.y = Py;
          }
        }
      }
      this.titleBar.showPin(this.userPositioned);
    };
    FloatingOSKView2.prototype.setDisplayPositioning = function() {
      var Ls = this._Box.style;
      Ls.position = "absolute";
      if (this.activationModel.activate) {
        Ls.display = "block";
      }
      Ls.left = "0px";
      if (this.specifiedPosition || this.userPositioned) {
        Ls.left = this.x + "px";
        Ls.top = this.y + "px";
      } else {
        var el = this.typedActivationModel.activationTrigger || null;
        if (this.dfltX) {
          Ls.left = this.dfltX;
        } else if (typeof el != "undefined" && el != null) {
          Ls.left = getAbsoluteX(el) + "px";
        }
        if (this.dfltY) {
          Ls.top = this.dfltY;
        } else if (typeof el != "undefined" && el != null) {
          Ls.top = getAbsoluteY(el) + el.offsetHeight + "px";
        }
      }
      this.specifiedPosition = false;
    };
    FloatingOSKView2.prototype.presentAtPosition = function(Px, Py) {
      if (!this.mayShow()) {
        return;
      }
      this.specifiedPosition = Px >= 0 || Py >= 0;
      if (this.specifiedPosition) {
        this.x = Px;
        this.y = Py;
      }
      this.specifiedPosition = this.specifiedPosition || this.userPositioned;
      this.present();
    };
    FloatingOSKView2.prototype.present = function() {
      if (!this.mayShow()) {
        return;
      }
      this.titleBar.showPin(this.userPositioned);
      _super.prototype.present.call(this);
      var Lpos = {};
      Lpos["x"] = this._Box.offsetLeft;
      Lpos["y"] = this._Box.offsetTop;
      Lpos["userLocated"] = this.userPositioned;
      this.doShow(Lpos);
    };
    FloatingOSKView2.prototype.startHide = function(hiddenByUser) {
      _super.prototype.startHide.call(this, hiddenByUser);
      if (hiddenByUser) {
        this.savePersistedLayout();
      }
    };
    FloatingOSKView2.prototype["show"] = function(bShow) {
      if (bShow !== void 0) {
        _super.prototype["show"].call(this, bShow);
      } else {
        _super.prototype["show"].call(this);
      }
      this.savePersistedLayout();
    };
    FloatingOSKView2.prototype.userLocated = function() {
      return this.userPositioned;
    };
    Object.defineProperty(FloatingOSKView2.prototype, "movementEnabled", {
      get: function() {
        return this.titleDragHandler.enabled;
      },
      set: function(flag) {
        this.titleDragHandler.enabled = flag;
        this.titleBar.showPin(flag && this.userPositioned);
      },
      enumerable: false,
      configurable: true
    });
    Object.defineProperty(FloatingOSKView2.prototype, "resizingEnabled", {
      get: function() {
        return this.resizeDragHandler.enabled;
      },
      set: function(flag) {
        this.resizeDragHandler.enabled = flag;
        this.resizeBar.allowResizing(flag);
      },
      enumerable: false,
      configurable: true
    });
    Object.defineProperty(FloatingOSKView2.prototype, "isBeingMoved", {
      get: function() {
        return this.titleDragHandler.isActive;
      },
      enumerable: false,
      configurable: true
    });
    Object.defineProperty(FloatingOSKView2.prototype, "isBeingResized", {
      get: function() {
        return this.resizeDragHandler.isActive;
      },
      enumerable: false,
      configurable: true
    });
    FloatingOSKView2.prototype.enableMoveResizeHandlers = function() {
      this.titleDragHandler.enabled = !this.noDrag;
      this.resizeDragHandler.enabled = true;
    };
    Object.defineProperty(FloatingOSKView2.prototype, "titleDragHandler", {
      get: function() {
        var _this = this;
        if (this._moveHandler) {
          return this._moveHandler;
        }
        this._moveHandler = new (function(_super2) {
          (0, build_exports.__extends)(class_1, _super2);
          function class_1() {
            return _super2.call(this, "move") || this;
          }
          class_1.prototype.onDragStart = function() {
            this.startX = _this._Box.offsetLeft;
            this.startY = _this._Box.offsetTop;
            if (_this.activeKeyboard.keyboard.isCJK) {
              _this.titleBar.setPinCJKOffset();
            }
            if (this.dragPromise) {
              this.dragPromise.resolve();
            }
            this.dragPromise = new managedPromise_default();
            _this.emit("dragmove", this.dragPromise.corePromise);
          };
          class_1.prototype.onDragMove = function(cumulativeX, cumulativeY) {
            _this.titleBar.showPin(true);
            _this.userPositioned = true;
            _this._Box.style.left = this.startX + cumulativeX + "px";
            _this._Box.style.top = this.startY + cumulativeY + "px";
            var r = _this.getRect();
            _this.setSize(r.width, r.height, true);
            _this.x = r.left;
            _this.y = r.top;
          };
          class_1.prototype.onDragRelease = function() {
            if (_this.vkbd) {
              _this.vkbd.currentKey = null;
            }
            this.dragPromise.resolve();
            this.dragPromise.then(function() {
              _this.userPositioned = true;
              _this.doResizeMove();
              _this.savePersistedLayout();
            });
            this.dragPromise = null;
          };
          return class_1;
        }(mouseDragOperation_default))();
        return this._moveHandler;
      },
      enumerable: false,
      configurable: true
    });
    Object.defineProperty(FloatingOSKView2.prototype, "resizeDragHandler", {
      get: function() {
        var _this = this;
        if (this._resizeHandler) {
          return this._resizeHandler;
        }
        this._resizeHandler = new (function(_super2) {
          (0, build_exports.__extends)(class_2, _super2);
          function class_2() {
            return _super2.call(this, "se-resize") || this;
          }
          class_2.prototype.onDragStart = function() {
            this.startWidth = _this.computedWidth;
            this.startHeight = _this.computedHeight;
            if (this.dragPromise) {
              this.dragPromise.resolve();
            }
            this.dragPromise = new managedPromise_default();
            _this.emit("resizemove", this.dragPromise.corePromise);
          };
          class_2.prototype.onDragMove = function(cumulativeX, cumulativeY) {
            var newWidth = this.startWidth + cumulativeX;
            var newHeight = this.startHeight + cumulativeY;
            if (newWidth < 0.2 * screen.width) {
              newWidth = 0.2 * screen.width;
            }
            if (newHeight < 0.1 * screen.height) {
              newHeight = 0.1 * screen.height;
            }
            if (newWidth > 0.9 * screen.width) {
              newWidth = 0.9 * screen.width;
            }
            if (newHeight > 0.5 * screen.height) {
              newHeight = 0.5 * screen.height;
            }
            _this.setSize(newWidth, newHeight, true);
          };
          class_2.prototype.onDragRelease = function() {
            if (_this.vkbd) {
              _this.vkbd.currentKey = null;
            }
            if (_this.vkbd) {
              this.startWidth = _this.computedWidth;
              this.startHeight = _this.computedHeight;
            }
            _this.refreshLayout();
            this.dragPromise.resolve();
            this.dragPromise.then(function() {
              _this.doResizeMove();
              _this.savePersistedLayout();
            });
            this.dragPromise = null;
          };
          return class_2;
        }(mouseDragOperation_default))();
        return this._resizeHandler;
      },
      enumerable: false,
      configurable: true
    });
    return FloatingOSKView2;
  }(oskView_default);
  var floatingOskView_default = FloatingOSKView;

  // ../../../build/engine/osk/obj/views/anchoredOskView.js
  var AnchoredOSKView = /* @__PURE__ */ function(_super) {
    (0, build_exports.__extends)(AnchoredOSKView2, _super);
    function AnchoredOSKView2(config) {
      var _this = this;
      if (config.isEmbedded) {
        config.activator = config.activator || new StaticActivator();
      } else {
        config.activator = config.activator || new twoStateActivator_default();
      }
      _this = _super.call(this, config) || this;
      _this.isResizing = false;
      _this["restorePosition"] = function(keepDefaultPosition) {
        return;
      }.bind(_this);
      document.body.appendChild(_this._Box);
      return _this;
    }
    AnchoredOSKView2.prototype._Unload = function() {
      this.keyboardView = null;
      this.bannerView = null;
      this._Box = null;
    };
    AnchoredOSKView2.prototype.setBoxStyling = function() {
      var s = this._Box.style;
      s.zIndex = "9999";
      s.display = "none";
      s.width = "100%";
      s.position = "fixed";
    };
    AnchoredOSKView2.prototype.refreshLayout = function(pending) {
      if (this.isResizing) {
        return;
      }
      try {
        this.isResizing = true;
        this.doResize();
      } finally {
        this.isResizing = false;
      }
      _super.prototype.refreshLayout.call(this, pending);
    };
    AnchoredOSKView2.prototype.doResize = function() {
      if (this.vkbd) {
        var targetOSKHeight = this.getDefaultKeyboardHeight();
        this.setSize(this.getDefaultWidth(), targetOSKHeight + this.banner.height);
      }
    };
    AnchoredOSKView2.prototype.postKeyboardAdjustments = function() {
      this.doResize();
    };
    AnchoredOSKView2.prototype.getDefaultKeyboardHeight = function() {
      var _a, _b;
      var device = this.targetDevice;
      if (this.configuration.heightOverride) {
        return this.configuration.heightOverride();
      }
      var baseWidth = (_a = document === null || document === void 0 ? void 0 : document.documentElement) === null || _a === void 0 ? void 0 : _a.clientWidth;
      var baseHeight = (_b = document === null || document === void 0 ? void 0 : document.documentElement) === null || _b === void 0 ? void 0 : _b.clientHeight;
      if (typeof baseWidth == "undefined") {
        baseWidth = Math.min(screen.height, screen.width);
        baseHeight = Math.max(screen.height, screen.width);
        if (landscapeView()) {
          var temp = baseWidth;
          baseWidth = baseHeight;
          baseHeight = temp;
        }
      }
      var oskHeightLandscapeView = Math.floor(Math.min(baseHeight, baseWidth) / 2), height = oskHeightLandscapeView;
      if (device.formFactor == "phone") {
        if (!landscapeView())
          height = Math.floor(baseHeight / 2.4);
        else
          height = Math.floor(baseHeight / 1.6);
      }
      if (this.targetDevice.OS == deviceSpec_default.OperatingSystem.iOS) {
        height = height / getViewportScale();
      }
      return height;
    };
    AnchoredOSKView2.prototype.getDefaultWidth = function() {
      var _a;
      var device = this.targetDevice;
      if (this.configuration.widthOverride) {
        return this.configuration.widthOverride();
      }
      var width;
      width = (_a = document === null || document === void 0 ? void 0 : document.documentElement) === null || _a === void 0 ? void 0 : _a.clientWidth;
      if (typeof width == "undefined") {
        if (this.targetDevice.OS == deviceSpec_default.OperatingSystem.iOS) {
          width = window.innerWidth;
        } else if (device.OS == deviceSpec_default.OperatingSystem.Android) {
          width = screen.availWidth;
        } else {
          width = screen.width;
        }
      }
      return width;
    };
    AnchoredOSKView2.prototype["setRect"] = function(p) {
      return;
    };
    AnchoredOSKView2.prototype.getPos = function() {
      var Lkbd = this._Box, p = {
        left: this._Visible ? Lkbd.offsetLeft : this.x,
        top: this._Visible ? Lkbd.offsetTop : this.y
      };
      return p;
    };
    AnchoredOSKView2.prototype["setPos"] = function(p) {
      return;
    };
    AnchoredOSKView2.prototype.setDisplayPositioning = function() {
      var Ls = this._Box.style;
      if (this.vkbd) {
        Ls.position = "fixed";
        Ls.left = Ls.bottom = "0px";
        Ls.border = "none";
        Ls.borderTop = "1px solid gray";
      }
    };
    AnchoredOSKView2.prototype.present = function() {
      _super.prototype.present.call(this);
      this.legacyEvents.callEvent("show", {});
    };
    return AnchoredOSKView2;
  }(oskView_default);
  var anchoredOskView_default = AnchoredOSKView;

  // ../../../build/engine/osk/obj/views/simpleActivator.js
  var SimpleActivator = /* @__PURE__ */ function(_super) {
    (0, build_exports.__extends)(SimpleActivator2, _super);
    function SimpleActivator2() {
      var _this = _super !== null && _super.apply(this, arguments) || this;
      _this.flag = true;
      return _this;
    }
    Object.defineProperty(SimpleActivator2.prototype, "enabled", {
      get: function() {
        return this.flag;
      },
      set: function(value) {
        this.activate = value;
      },
      enumerable: false,
      configurable: true
    });
    Object.defineProperty(SimpleActivator2.prototype, "activate", {
      get: function() {
        return this.flag;
      },
      set: function(value) {
        if (this.flag != value) {
          this.flag = value;
          this.emit("activate", value);
        }
      },
      enumerable: false,
      configurable: true
    });
    Object.defineProperty(SimpleActivator2.prototype, "conditionsMet", {
      get: function() {
        return true;
      },
      enumerable: false,
      configurable: true
    });
    return SimpleActivator2;
  }(activator_default);
  var simpleActivator_default = SimpleActivator;

  // ../../../build/engine/osk/obj/views/inlinedOskView.js
  var InlinedOSKView = /* @__PURE__ */ function(_super) {
    (0, build_exports.__extends)(InlinedOSKView2, _super);
    function InlinedOSKView2(config) {
      var _this = this;
      config.activator = config.activator || new simpleActivator_default();
      _this = _super.call(this, config) || this;
      _this["restorePosition"] = function(keepDefaultPosition) {
        return;
      }.bind(_this);
      return _this;
    }
    Object.defineProperty(InlinedOSKView2.prototype, "element", {
      get: function() {
        return this._Box;
      },
      enumerable: false,
      configurable: true
    });
    InlinedOSKView2.prototype._Unload = function() {
      this.keyboardView = null;
      this.bannerView = null;
      this._Box = null;
    };
    InlinedOSKView2.prototype.setBoxStyling = function() {
      var s = this._Box.style;
      s.display = "none";
      s.position = "relative";
    };
    InlinedOSKView2.prototype.postKeyboardAdjustments = function() {
    };
    InlinedOSKView2.prototype.getDefaultKeyboardHeight = function() {
      if (this.keyboardView instanceof visualKeyboard_default) {
        return this.keyboardView.height;
      } else {
        return this.computedHeight;
      }
    };
    InlinedOSKView2.prototype.getDefaultWidth = function() {
      return this.computedWidth;
    };
    InlinedOSKView2.prototype["setRect"] = function(p) {
      return;
    };
    InlinedOSKView2.prototype.getPos = function() {
      var Lkbd = this._Box, p = {
        left: this._Visible ? Lkbd.offsetLeft : void 0,
        top: this._Visible ? Lkbd.offsetTop : void 0
      };
      return p;
    };
    InlinedOSKView2.prototype["setPos"] = function(p) {
      return;
    };
    InlinedOSKView2.prototype.present = function() {
      _super.prototype.present.call(this);
      this.legacyEvents.callEvent("show", {});
    };
    InlinedOSKView2.prototype.setDisplayPositioning = function() {
    };
    InlinedOSKView2.prototype.allowsDeviceChange = function(newSpec) {
      return true;
    };
    return InlinedOSKView2;
  }(oskView_default);
  var inlinedOskView_default = InlinedOSKView;

  // ../../../build/app/browser/obj/viewsAnchorpoint.js
  var viewsAnchorpoint_exports = {};
  __export(viewsAnchorpoint_exports, {
    AnchoredOSKView: function() {
      return PublishedAnchoredOSKView;
    },
    FloatingOSKView: function() {
      return PublishedFloatingOSKView;
    },
    InlinedOSKView: function() {
      return PublishedInlineOSKView;
    }
  });
  function buildBaseOskConfiguration(engine) {
    return {
      hostDevice: engine.config.hostDevice,
      pathConfig: engine.config.paths,
      predictionContextManager: engine.contextManager.predictionContext,
      isEmbedded: false
    };
  }
  var PublishedAnchoredOSKView = /* @__PURE__ */ function(_super) {
    (0, build_exports.__extends)(PublishedAnchoredOSKView2, _super);
    function PublishedAnchoredOSKView2(engine, config) {
      var finalConfig = (0, build_exports.__assign)((0, build_exports.__assign)({}, buildBaseOskConfiguration(engine)), config || {});
      return _super.call(this, finalConfig) || this;
    }
    return PublishedAnchoredOSKView2;
  }(anchoredOskView_default);
  var PublishedFloatingOSKView = function(_super) {
    (0, build_exports.__extends)(PublishedFloatingOSKView2, _super);
    function PublishedFloatingOSKView2(engine, config) {
      var finalConfig = (0, build_exports.__assign)((0, build_exports.__assign)({}, buildBaseOskConfiguration(engine)), config || {});
      return _super.call(this, finalConfig) || this;
    }
    return PublishedFloatingOSKView2;
  }(floatingOskView_default);
  var PublishedInlineOSKView = function(_super) {
    (0, build_exports.__extends)(PublishedInlineOSKView2, _super);
    function PublishedInlineOSKView2(engine, config) {
      var finalConfig = (0, build_exports.__assign)((0, build_exports.__assign)({}, buildBaseOskConfiguration(engine)), config || {});
      return _super.call(this, finalConfig) || this;
    }
    return PublishedInlineOSKView2;
  }(inlinedOskView_default);

  // ../../../build/engine/element-wrappers/obj/outputTarget.js
  var import_eventemitter317 = __toESM(require_eventemitter3(), 1);
  var OutputTarget2 = /* @__PURE__ */ function(_super) {
    (0, build_exports.__extends)(OutputTarget3, _super);
    function OutputTarget3() {
      var _this = _super !== null && _super.apply(this, arguments) || this;
      _this.events = new import_eventemitter317.default();
      _this.changed = false;
      return _this;
    }
    OutputTarget3.prototype.focus = function() {
      var ele = this.getElement();
      if (ele.focus) {
        ele.focus();
      }
    };
    OutputTarget3.prototype.isForcingScroll = function() {
      return false;
    };
    OutputTarget3.prototype.dispatchInputEventOn = function(elem) {
      var event;
      if (window["InputEvent"]) {
        event = new InputEvent("input", { "bubbles": true, "cancelable": false });
      }
      if (elem && event) {
        elem.dispatchEvent(event);
      }
    };
    return OutputTarget3;
  }(outputTarget_default);
  var outputTarget_default2 = OutputTarget2;

  // ../../../build/engine/element-wrappers/obj/input.js
  var Input = /* @__PURE__ */ function(_super) {
    (0, build_exports.__extends)(Input2, _super);
    function Input2(ele) {
      var _this = _super.call(this) || this;
      _this.root = ele;
      _this._cachedSelectionStart = -1;
      return _this;
    }
    Object.defineProperty(Input2.prototype, "isSynthetic", {
      get: function() {
        return false;
      },
      enumerable: false,
      configurable: true
    });
    Input2.prototype.getElement = function() {
      return this.root;
    };
    Input2.prototype.clearSelection = function() {
      this.getCaret();
      this.root.value = this.root.value._kmwSubstring(0, this.processedSelectionStart) + this.root.value._kmwSubstring(this.processedSelectionEnd);
      this.setCaret(this.processedSelectionStart);
    };
    Input2.prototype.isSelectionEmpty = function() {
      return this.root.selectionStart == this.root.selectionEnd;
    };
    Input2.prototype.hasSelection = function() {
      return true;
    };
    Input2.prototype.invalidateSelection = function() {
      this._cachedSelectionStart = -1;
    };
    Input2.prototype.getCaret = function() {
      if (this.root.selectionStart != this._cachedSelectionStart) {
        this._cachedSelectionStart = this.root.selectionStart;
        this.processedSelectionStart = this.root.value._kmwCodeUnitToCodePoint(this.root.selectionStart);
        this.processedSelectionEnd = this.root.value._kmwCodeUnitToCodePoint(this.root.selectionEnd);
      }
      return this.root.selectionDirection == "forward" ? this.processedSelectionEnd : this.processedSelectionStart;
    };
    Input2.prototype.getDeadkeyCaret = function() {
      return this.getCaret();
    };
    Input2.prototype.setCaret = function(caret) {
      this.setSelection(caret, caret, "none");
    };
    Input2.prototype.setSelection = function(start, end, direction) {
      var domStart = this.root.value._kmwCodePointToCodeUnit(start);
      var domEnd = this.root.value._kmwCodePointToCodeUnit(end);
      this.root.setSelectionRange(domStart, domEnd, direction);
      this.processedSelectionStart = start;
      this.processedSelectionEnd = end;
      this.forceScroll();
      this.root.setSelectionRange(domStart, domEnd, direction);
    };
    Input2.prototype.forceScroll = function() {
      var element = this.getElement();
      var selectionStart = element.selectionStart;
      var selectionEnd = element.selectionEnd;
      this._activeForcedScroll = true;
      try {
        element.blur();
        element.focus();
      } finally {
        element.selectionStart = selectionStart;
        element.selectionEnd = selectionEnd;
        this._activeForcedScroll = false;
      }
    };
    Input2.prototype.isForcingScroll = function() {
      return this._activeForcedScroll;
    };
    Input2.prototype.getSelectionDirection = function() {
      return this.root.selectionDirection;
    };
    Input2.prototype.getTextBeforeCaret = function() {
      this.getCaret();
      return this.getText()._kmwSubstring(0, this.processedSelectionStart);
    };
    Input2.prototype.getSelectedText = function() {
      this.getCaret();
      return this.getText()._kmwSubstring(this.processedSelectionStart, this.processedSelectionEnd);
    };
    Input2.prototype.setTextBeforeCaret = function(text) {
      this.getCaret();
      var selectionLength = this.processedSelectionEnd - this.processedSelectionStart;
      var direction = this.getSelectionDirection();
      var newCaret = text._kmwLength();
      this.root.value = text + this.getText()._kmwSubstring(this.processedSelectionStart);
      this.setSelection(newCaret, newCaret + selectionLength, direction);
    };
    Input2.prototype.setTextAfterCaret = function(s) {
      var c = this.getCaret();
      var direction = this.getSelectionDirection();
      this.root.value = this.getTextBeforeCaret() + s;
      this.setSelection(this.processedSelectionStart, this.processedSelectionEnd, direction);
    };
    Input2.prototype.getTextAfterCaret = function() {
      this.getCaret();
      return this.getText()._kmwSubstring(this.processedSelectionEnd);
    };
    Input2.prototype.getText = function() {
      return this.root.value;
    };
    Input2.prototype.deleteCharsBeforeCaret = function(dn) {
      if (dn > 0) {
        var curText = this.getTextBeforeCaret();
        var caret = this.processedSelectionStart;
        if (dn > caret) {
          dn = caret;
        }
        this.adjustDeadkeys(-dn);
        this.setTextBeforeCaret(curText.kmwSubstring(0, caret - dn));
        this.setCaret(caret - dn);
      }
    };
    Input2.prototype.insertTextBeforeCaret = function(s) {
      if (!s) {
        return;
      }
      var caret = this.getCaret();
      var front = this.getTextBeforeCaret();
      var back = this.getText()._kmwSubstring(this.processedSelectionStart);
      this.adjustDeadkeys(s._kmwLength());
      this.root.value = front + s + back;
      this.setCaret(caret + s._kmwLength());
    };
    Input2.prototype.handleNewlineAtCaret = function() {
      var inputEle = this.root;
      if (inputEle && (inputEle.type == "search" || inputEle.type == "submit")) {
        inputEle.disabled = false;
        inputEle.form.submit();
      } else {
        this.events.emit("unhandlednewline", inputEle);
      }
    };
    Input2.prototype.doInputEvent = function() {
      this.dispatchInputEventOn(this.root);
    };
    return Input2;
  }(outputTarget_default2);
  var input_default = Input;

  // ../../../build/engine/element-wrappers/obj/textarea.js
  var TextArea = /* @__PURE__ */ function(_super) {
    (0, build_exports.__extends)(TextArea2, _super);
    function TextArea2(ele) {
      var _this = _super.call(this) || this;
      _this.root = ele;
      _this._cachedSelectionStart = -1;
      return _this;
    }
    Object.defineProperty(TextArea2.prototype, "isSynthetic", {
      get: function() {
        return false;
      },
      enumerable: false,
      configurable: true
    });
    TextArea2.prototype.getElement = function() {
      return this.root;
    };
    TextArea2.prototype.clearSelection = function() {
      this.getCaret();
      this.root.value = this.root.value._kmwSubstring(0, this.processedSelectionStart) + this.root.value._kmwSubstring(this.processedSelectionEnd);
      this.setCaret(this.processedSelectionStart);
    };
    TextArea2.prototype.isSelectionEmpty = function() {
      return this.root.selectionStart == this.root.selectionEnd;
    };
    TextArea2.prototype.hasSelection = function() {
      return true;
    };
    TextArea2.prototype.invalidateSelection = function() {
      this._cachedSelectionStart = -1;
    };
    TextArea2.prototype.getCaret = function() {
      if (this.root.selectionStart != this._cachedSelectionStart) {
        this._cachedSelectionStart = this.root.selectionStart;
        this.processedSelectionStart = this.root.value._kmwCodeUnitToCodePoint(this.root.selectionStart);
        this.processedSelectionEnd = this.root.value._kmwCodeUnitToCodePoint(this.root.selectionEnd);
      }
      return this.root.selectionDirection == "forward" ? this.processedSelectionEnd : this.processedSelectionStart;
    };
    TextArea2.prototype.getDeadkeyCaret = function() {
      return this.getCaret();
    };
    TextArea2.prototype.setCaret = function(caret) {
      this.setSelection(caret, caret, "none");
    };
    TextArea2.prototype.setSelection = function(start, end, direction) {
      var domStart = this.root.value._kmwCodePointToCodeUnit(start);
      var domEnd = this.root.value._kmwCodePointToCodeUnit(end);
      this.root.setSelectionRange(domStart, domEnd, direction);
      this.processedSelectionStart = start;
      this.processedSelectionEnd = end;
      this.forceScroll();
      this.root.setSelectionRange(domStart, domEnd, direction);
    };
    TextArea2.prototype.forceScroll = function() {
      var element = this.getElement();
      var selectionStart = element.selectionStart;
      var selectionEnd = element.selectionEnd;
      this._activeForcedScroll = true;
      try {
        element.blur();
        element.focus();
      } finally {
        element.selectionStart = selectionStart;
        element.selectionEnd = selectionEnd;
        this._activeForcedScroll = false;
      }
    };
    TextArea2.prototype.isForcingScroll = function() {
      return this._activeForcedScroll;
    };
    TextArea2.prototype.getSelectionDirection = function() {
      return this.root.selectionDirection;
    };
    TextArea2.prototype.getTextBeforeCaret = function() {
      this.getCaret();
      return this.getText()._kmwSubstring(0, this.processedSelectionStart);
    };
    TextArea2.prototype.setTextBeforeCaret = function(text) {
      this.getCaret();
      var selectionLength = this.processedSelectionEnd - this.processedSelectionStart;
      var direction = this.getSelectionDirection();
      var newCaret = text._kmwLength();
      this.root.value = text + this.getText()._kmwSubstring(this.processedSelectionStart);
      this.setSelection(newCaret, newCaret + selectionLength, direction);
    };
    TextArea2.prototype.setTextAfterCaret = function(s) {
      var c = this.getCaret();
      var direction = this.getSelectionDirection();
      this.root.value = this.getTextBeforeCaret() + s;
      this.setSelection(this.processedSelectionStart, this.processedSelectionEnd, direction);
    };
    TextArea2.prototype.getTextAfterCaret = function() {
      this.getCaret();
      return this.getText()._kmwSubstring(this.processedSelectionEnd);
    };
    TextArea2.prototype.getSelectedText = function() {
      this.getCaret();
      return this.getText()._kmwSubstring(this.processedSelectionStart, this.processedSelectionEnd);
    };
    TextArea2.prototype.getText = function() {
      return this.root.value;
    };
    TextArea2.prototype.deleteCharsBeforeCaret = function(dn) {
      if (dn > 0) {
        var curText = this.getTextBeforeCaret();
        var caret = this.processedSelectionStart;
        if (dn > caret) {
          dn = caret;
        }
        this.adjustDeadkeys(-dn);
        this.setTextBeforeCaret(curText.kmwSubstring(0, caret - dn));
        this.setCaret(caret - dn);
      }
    };
    TextArea2.prototype.insertTextBeforeCaret = function(s) {
      if (!s) {
        return;
      }
      var caret = this.getCaret();
      var front = this.getTextBeforeCaret();
      var back = this.getText()._kmwSubstring(this.processedSelectionStart);
      this.adjustDeadkeys(s._kmwLength());
      this.root.value = front + s + back;
      this.setCaret(caret + s._kmwLength());
    };
    TextArea2.prototype.handleNewlineAtCaret = function() {
      this.insertTextBeforeCaret("\n");
    };
    TextArea2.prototype.doInputEvent = function() {
      this.dispatchInputEventOn(this.root);
    };
    return TextArea2;
  }(outputTarget_default2);
  var textarea_default = TextArea;

  // ../../../build/engine/element-wrappers/obj/designIFrame.js
  var SelectionCaret = /* @__PURE__ */ function() {
    function SelectionCaret3(node, offset) {
      this.node = node;
      this.offset = offset;
    }
    return SelectionCaret3;
  }();
  var SelectionRange = function() {
    function SelectionRange3(start, end) {
      this.start = start;
      this.end = end;
    }
    return SelectionRange3;
  }();
  var StyleCommand = function() {
    function StyleCommand2(c, s) {
      this.cmd = c;
      this.stateType = s;
    }
    return StyleCommand2;
  }();
  var DesignIFrame = function(_super) {
    (0, build_exports.__extends)(DesignIFrame2, _super);
    function DesignIFrame2(ele) {
      var _this = _super.call(this) || this;
      _this.root = ele;
      if (ele.contentWindow && ele.contentWindow.document && ele.contentWindow.document.designMode == "on") {
        _this.doc = ele.contentWindow.document;
        _this.docRoot = ele.contentWindow.document.documentElement;
      } else {
        throw "Specified IFrame is not in design-mode!";
      }
      return _this;
    }
    Object.defineProperty(DesignIFrame2.prototype, "isSynthetic", {
      get: function() {
        return false;
      },
      enumerable: false,
      configurable: true
    });
    DesignIFrame2.prototype.getElement = function() {
      return this.root;
    };
    DesignIFrame2.prototype.focus = function() {
      this.doc.defaultView.focus();
    };
    DesignIFrame2.prototype.isSelectionEmpty = function() {
      if (!this.hasSelection()) {
        return true;
      }
      return this.doc.getSelection().isCollapsed;
    };
    DesignIFrame2.prototype.hasSelection = function() {
      var Lsel = this.doc.getSelection();
      var outerSel = document.getSelection();
      if (outerSel.anchorNode == Lsel.anchorNode && outerSel.focusNode == Lsel.focusNode) {
        return true;
      } else {
        return true;
      }
    };
    DesignIFrame2.prototype.clearSelection = function() {
      if (this.hasSelection()) {
        var Lsel = this.doc.getSelection();
        if (!Lsel.isCollapsed) {
          Lsel.deleteFromDocument();
        }
      } else {
        console.warn("Attempted to clear an unowned Selection!");
      }
    };
    DesignIFrame2.prototype.invalidateSelection = function() {
    };
    DesignIFrame2.prototype.getCarets = function() {
      var Lsel = this.doc.getSelection();
      var code = Lsel.anchorNode.compareDocumentPosition(Lsel.focusNode);
      if (Lsel.isCollapsed) {
        var caret = new SelectionCaret(Lsel.anchorNode, Lsel.anchorOffset);
        return new SelectionRange(caret, caret);
      } else {
        var anchor = new SelectionCaret(Lsel.anchorNode, Lsel.anchorOffset);
        var focus_1 = new SelectionCaret(Lsel.focusNode, Lsel.focusOffset);
        if (anchor.node == focus_1.node) {
          code = focus_1.offset - anchor.offset > 0 ? 2 : 4;
        }
        if (code & 2) {
          return new SelectionRange(anchor, focus_1);
        } else {
          return new SelectionRange(focus_1, anchor);
        }
      }
    };
    DesignIFrame2.prototype.getDeadkeyCaret = function() {
      return this.getTextBeforeCaret().kmwLength();
    };
    DesignIFrame2.prototype.getTextBeforeCaret = function() {
      if (!this.hasSelection()) {
        return this.getText();
      }
      var caret = this.getCarets().start;
      if (caret.node.nodeType != 3) {
        return "";
      }
      return caret.node.textContent.substr(0, caret.offset);
    };
    DesignIFrame2.prototype.getSelectedText = function() {
      return "";
    };
    DesignIFrame2.prototype.getTextAfterCaret = function() {
      if (!this.hasSelection()) {
        return "";
      }
      var caret = this.getCarets().end;
      if (caret.node.nodeType != 3) {
        return "";
      }
      return caret.node.textContent.substr(caret.offset);
    };
    DesignIFrame2.prototype.getText = function() {
      return this.docRoot.innerText;
    };
    DesignIFrame2.prototype.deleteCharsBeforeCaret = function(dn) {
      if (!this.hasSelection() || dn <= 0) {
        return;
      }
      var start = this.getCarets().start;
      if (dn > start.offset) {
        dn = start.offset;
      }
      if (start.node.nodeType != 3) {
        console.warn("Deletion of characters requested without available context!");
        return;
      }
      var range = this.doc.createRange();
      var dnOffset = start.offset - start.node.nodeValue.substr(0, start.offset)._kmwSubstr(-dn).length;
      range.setStart(start.node, dnOffset);
      range.setEnd(start.node, start.offset);
      this.adjustDeadkeys(-dn);
      range.deleteContents();
    };
    DesignIFrame2.prototype.insertTextBeforeCaret = function(s) {
      if (!this.hasSelection()) {
        return;
      }
      var start = this.getCarets().start;
      var delta = s._kmwLength();
      var Lsel = this.doc.getSelection();
      if (delta == 0) {
        return;
      }
      this.adjustDeadkeys(delta);
      var finalCaret = this.root.ownerDocument.createRange();
      if (start.node.nodeType == 3) {
        var textStart = start.node;
        textStart.insertData(start.offset, s);
        finalCaret.setStart(textStart, start.offset + s.length);
      } else {
        var n = this.doc.createTextNode(s);
        var range = this.doc.createRange();
        range.setStart(start.node, start.offset);
        range.collapse(true);
        range.insertNode(n);
        finalCaret.setStart(n, s.length);
      }
      finalCaret.collapse(true);
      Lsel.removeAllRanges();
      try {
        Lsel.addRange(finalCaret);
      } catch (e) {
        start.node.parentElement.scrollIntoView();
        Lsel.addRange(finalCaret);
      }
      Lsel.collapseToEnd();
    };
    DesignIFrame2.prototype.handleNewlineAtCaret = function() {
    };
    DesignIFrame2.prototype.setTextAfterCaret = function(s) {
      if (!this.hasSelection()) {
        return;
      }
      var caret = this.getCarets().end;
      var delta = s._kmwLength();
      var Lsel = this.doc.getSelection();
      if (delta == 0) {
        return;
      }
      if (caret.node.nodeType == 3) {
        var textStart = caret.node;
        textStart.replaceData(caret.offset, textStart.length, s);
      } else {
        var n = caret.node.ownerDocument.createTextNode(s);
        var range = this.root.ownerDocument.createRange();
        range.setStart(caret.node, caret.offset);
        range.collapse(true);
        range.insertNode(n);
      }
    };
    DesignIFrame2.prototype.saveProperties = function() {
      var _CacheableCommands = [
        new StyleCommand("backcolor", 1),
        new StyleCommand("fontname", 1),
        new StyleCommand("fontsize", 1),
        new StyleCommand("forecolor", 1),
        new StyleCommand("bold", 0),
        new StyleCommand("italic", 0),
        new StyleCommand("strikethrough", 0),
        new StyleCommand("subscript", 0),
        new StyleCommand("superscript", 0),
        new StyleCommand("underline", 0)
      ];
      if (this.doc.defaultView) {
        _CacheableCommands.push(new StyleCommand("hilitecolor", 1));
      }
      for (var n = 0; n < _CacheableCommands.length; n++) {
        var cmd = _CacheableCommands[n];
        if (cmd.stateType == 1) {
          cmd.cache = this.doc.queryCommandValue(cmd.cmd);
        } else {
          cmd.cache = this.doc.queryCommandState(cmd.cmd);
        }
      }
      this.commandCache = _CacheableCommands;
    };
    DesignIFrame2.prototype.restoreProperties = function(_func) {
      if (!this.commandCache) {
        console.error("No command cache exists to restore!");
      }
      for (var n = 0; n < this.commandCache.length; n++) {
        var cmd = this.commandCache[n];
        if (cmd.stateType == 1) {
          if (this.doc.queryCommandValue(cmd.cmd) != cmd.cache) {
            if (_func) {
              _func();
            }
            this.doc.execCommand(cmd.cmd, false, cmd.cache);
          }
        } else if (this.doc.queryCommandState(cmd.cmd) != cmd.cache) {
          if (_func) {
            _func();
          }
          this.doc.execCommand(cmd.cmd, false, null);
        }
      }
    };
    DesignIFrame2.prototype.doInputEvent = function() {
      this.dispatchInputEventOn(this.root);
    };
    return DesignIFrame2;
  }(outputTarget_default2);
  var designIFrame_default = DesignIFrame;

  // ../../../build/engine/element-wrappers/obj/contentEditable.js
  var SelectionCaret2 = /* @__PURE__ */ function() {
    function SelectionCaret3(node, offset) {
      this.node = node;
      this.offset = offset;
    }
    return SelectionCaret3;
  }();
  var SelectionRange2 = function() {
    function SelectionRange3(start, end) {
      this.start = start;
      this.end = end;
    }
    return SelectionRange3;
  }();
  var ContentEditable = function(_super) {
    (0, build_exports.__extends)(ContentEditable2, _super);
    function ContentEditable2(ele) {
      var _this = this;
      if (ele.isContentEditable) {
        _this = _super.call(this) || this;
        _this.root = ele;
      } else {
        throw "Specified element is not already content-editable!";
      }
      return _this;
    }
    Object.defineProperty(ContentEditable2.prototype, "isSynthetic", {
      get: function() {
        return false;
      },
      enumerable: false,
      configurable: true
    });
    ContentEditable2.prototype.getElement = function() {
      return this.root;
    };
    ContentEditable2.prototype.isSelectionEmpty = function() {
      if (!this.hasSelection()) {
        return true;
      }
      return this.root.ownerDocument.getSelection().isCollapsed;
    };
    ContentEditable2.prototype.hasSelection = function() {
      var Lsel = this.root.ownerDocument.getSelection();
      if (this.root != Lsel.anchorNode && !this.root.contains(Lsel.anchorNode)) {
        return false;
      }
      if (this.root != Lsel.focusNode && !this.root.contains(Lsel.focusNode)) {
        return false;
      }
      return true;
    };
    ContentEditable2.prototype.clearSelection = function() {
      if (this.hasSelection()) {
        var Lsel = this.root.ownerDocument.getSelection();
        if (!Lsel.isCollapsed) {
          Lsel.deleteFromDocument();
        }
      } else {
        console.warn("Attempted to clear an unowned Selection!");
      }
    };
    ContentEditable2.prototype.invalidateSelection = function() {
    };
    ContentEditable2.prototype.getCarets = function() {
      var Lsel = this.root.ownerDocument.getSelection();
      var code = Lsel.anchorNode.compareDocumentPosition(Lsel.focusNode);
      if (Lsel.isCollapsed) {
        var caret = new SelectionCaret2(Lsel.anchorNode, Lsel.anchorOffset);
        return new SelectionRange2(caret, caret);
      } else {
        var anchor = new SelectionCaret2(Lsel.anchorNode, Lsel.anchorOffset);
        var focus_1 = new SelectionCaret2(Lsel.focusNode, Lsel.focusOffset);
        if (anchor.node == focus_1.node) {
          code = focus_1.offset - anchor.offset > 0 ? 2 : 4;
        }
        if (code & 2) {
          return new SelectionRange2(anchor, focus_1);
        } else {
          return new SelectionRange2(focus_1, anchor);
        }
      }
    };
    ContentEditable2.prototype.getDeadkeyCaret = function() {
      return this.getTextBeforeCaret().kmwLength();
    };
    ContentEditable2.prototype.getTextBeforeCaret = function() {
      if (!this.hasSelection()) {
        return this.getText();
      }
      var caret = this.getCarets().start;
      if (caret.node.nodeType != 3) {
        return "";
      }
      return caret.node.textContent.substr(0, caret.offset);
    };
    ContentEditable2.prototype.getSelectedText = function() {
      return "";
    };
    ContentEditable2.prototype.getTextAfterCaret = function() {
      if (!this.hasSelection()) {
        return "";
      }
      var caret = this.getCarets().end;
      if (caret.node.nodeType != 3) {
        return "";
      }
      return caret.node.textContent.substr(caret.offset);
    };
    ContentEditable2.prototype.getText = function() {
      return this.root.innerText;
    };
    ContentEditable2.prototype.deleteCharsBeforeCaret = function(dn) {
      if (!this.hasSelection() || dn <= 0) {
        return;
      }
      var start = this.getCarets().start;
      if (dn > start.offset) {
        dn = start.offset;
      }
      if (start.node.nodeType != 3) {
        console.warn("Deletion of characters requested without available context!");
        return;
      }
      var range = this.root.ownerDocument.createRange();
      var dnOffset = start.offset - start.node.nodeValue.substr(0, start.offset)._kmwSubstr(-dn).length;
      range.setStart(start.node, dnOffset);
      range.setEnd(start.node, start.offset);
      this.adjustDeadkeys(-dn);
      range.deleteContents();
    };
    ContentEditable2.prototype.insertTextBeforeCaret = function(s) {
      if (!this.hasSelection()) {
        return;
      }
      var start = this.getCarets().start;
      var delta = s._kmwLength();
      var Lsel = this.root.ownerDocument.getSelection();
      if (delta == 0) {
        return;
      }
      this.adjustDeadkeys(delta);
      var finalCaret = this.root.ownerDocument.createRange();
      if (start.node.nodeType == 3) {
        var textStart = start.node;
        textStart.insertData(start.offset, s);
        finalCaret.setStart(textStart, start.offset + s.length);
      } else {
        var n = start.node.ownerDocument.createTextNode(s);
        var range = this.root.ownerDocument.createRange();
        range.setStart(start.node, start.offset);
        range.collapse(true);
        range.insertNode(n);
        finalCaret.setStart(n, s.length);
      }
      finalCaret.collapse(true);
      Lsel.removeAllRanges();
      try {
        Lsel.addRange(finalCaret);
      } catch (e) {
        start.node.parentElement.scrollIntoView();
        Lsel.addRange(finalCaret);
      }
      Lsel.collapseToEnd();
    };
    ContentEditable2.prototype.handleNewlineAtCaret = function() {
    };
    ContentEditable2.prototype.setTextAfterCaret = function(s) {
      if (!this.hasSelection()) {
        return;
      }
      var caret = this.getCarets().end;
      var delta = s._kmwLength();
      var Lsel = this.root.ownerDocument.getSelection();
      if (delta == 0) {
        return;
      }
      if (caret.node.nodeType == 3) {
        var textStart = caret.node;
        textStart.replaceData(caret.offset, textStart.length, s);
      } else {
        var n = caret.node.ownerDocument.createTextNode(s);
        var range = this.root.ownerDocument.createRange();
        range.setStart(caret.node, caret.offset);
        range.collapse(true);
        range.insertNode(n);
      }
    };
    ContentEditable2.prototype.doInputEvent = function() {
      this.dispatchInputEventOn(this.root);
    };
    return ContentEditable2;
  }(outputTarget_default2);
  var contentEditable_default = ContentEditable;

  // ../../../build/engine/element-wrappers/obj/utils.js
  function nestedInstanceOf(Pelem, className) {
    var scopedClass;
    if (!Pelem) {
      return false;
    }
    if (Pelem["Window"]) {
      return className == "Window";
    } else if (Pelem["defaultView"]) {
      scopedClass = Pelem["defaultView"][className];
    } else if (Pelem["ownerDocument"]) {
      scopedClass = Pelem.ownerDocument.defaultView[className];
    } else if (Pelem["target"]) {
      var event = Pelem;
      if (this.instanceof(event.target, "Window")) {
        scopedClass = event.target[className];
      } else if (this.instanceof(event.target, "Document")) {
        scopedClass = event.target.defaultView[className];
      } else if (this.instanceof(event.target, "HTMLElement")) {
        scopedClass = event.target.ownerDocument.defaultView[className];
      }
    }
    if (scopedClass) {
      return Pelem instanceof scopedClass;
    } else {
      return false;
    }
  }

  // ../../../build/engine/element-wrappers/obj/wrapElement.js
  function wrapElement(e) {
    if (nestedInstanceOf(e, "HTMLInputElement")) {
      return new input_default(e);
    } else if (nestedInstanceOf(e, "HTMLTextAreaElement")) {
      return new textarea_default(e);
    } else if (nestedInstanceOf(e, "HTMLIFrameElement")) {
      var iframe = e;
      if (iframe.contentWindow && iframe.contentWindow.document && iframe.contentWindow.document.designMode == "on") {
        return new designIFrame_default(iframe);
      } else if (e.isContentEditable) {
        return new contentEditable_default(e);
      } else {
        return null;
      }
    } else if (e.isContentEditable) {
      return new contentEditable_default(e);
    }
    return null;
  }

  // ../../../build/app/browser/obj/utils/alertHost.js
  var AlertHost = /* @__PURE__ */ function() {
    function AlertHost2() {
      var _this = this;
      this.pending = false;
      var bg = this.bg = document.createElement("div"), lb = this.lb = document.createElement("div"), lt = this.lt = document.createElement("div"), gr = this.gr = document.createElement("div"), bx = this.bx = document.createElement("div");
      bg.className = "kmw-wait-background";
      lb.className = "kmw-wait-box";
      this.dismiss = null;
      lt.className = "kmw-wait-text";
      gr.className = "kmw-wait-graphic";
      bx.className = "kmw-alert-close";
      lb.onmousedown = lb.onclick = function(e) {
        if (bx.style.display == "block") {
          bg.style.display = "none";
          if (_this.dismiss) {
            _this.dismiss();
          }
        }
      };
      lb.addEventListener("touchstart", lb.onclick, false);
      bg.onmousedown = bg.onclick = function(e) {
        e.preventDefault();
        e.stopPropagation();
      };
      bg.addEventListener("touchstart", bg.onclick, false);
      lb.appendChild(bx);
      lb.appendChild(lt);
      lb.appendChild(gr);
      bg.appendChild(lb);
      document.body.appendChild(bg);
    }
    Object.defineProperty(AlertHost2.prototype, "rootElement", {
      get: function() {
        return this.bg;
      },
      enumerable: false,
      configurable: true
    });
    AlertHost2.prototype.wait = function(s) {
      var _this = this;
      var bg = this.bg;
      if (typeof bg == "undefined" || bg == null) {
        return;
      }
      if (s) {
        this.pending = true;
        window.setTimeout(function() {
          if (_this.pending) {
            window.scrollTo(0, 0);
            _this.bx.style.display = "none";
            _this.lt.className = "kmw-wait-text";
            _this.lt.innerHTML = s;
            _this.gr.style.display = "block";
            bg.style.display = "block";
          }
        }, 1e3);
      } else {
        if (this.pending) {
          this.lt.innerHTML = "";
          this.pending = false;
          bg.style.display = "none";
        }
      }
    };
    AlertHost2.prototype.alert = function(s, fn) {
      var bg = this.bg;
      this.bx.style.display = "block";
      this.lt.className = "kmw-alert-text";
      this.lt.innerHTML = s;
      this.gr.style.display = "none";
      bg.style.display = "block";
      this.dismiss = arguments.length > 1 ? fn : null;
    };
    AlertHost2.prototype.shutdown = function() {
      this.bg.parentNode.removeChild(this.bg);
    };
    return AlertHost2;
  }();

  // ../../../build/app/browser/obj/utils/documentReady.js
  function whenDocumentReady() {
    if (document.readyState === "complete") {
      return Promise.resolve();
    }
    return new Promise(function(resolve, reject) {
      var loadHandler = function() {
        window.removeEventListener("load", loadHandler);
        resolve();
      };
      window.addEventListener("load", loadHandler);
    });
  }

  // ../../../build/app/browser/obj/configuration.js
  var BrowserConfiguration = /* @__PURE__ */ function(_super) {
    (0, build_exports.__extends)(BrowserConfiguration2, _super);
    function BrowserConfiguration2() {
      return _super !== null && _super.apply(this, arguments) || this;
    }
    BrowserConfiguration2.prototype.initialize = function(options) {
      var _this = this;
      if (this._options) {
        this._options = (0, build_exports.__assign)((0, build_exports.__assign)({}, this._options), options);
      } else {
        this._options = (0, build_exports.__assign)({}, options);
      }
      _super.prototype.initialize.call(this, options);
      this._options = options;
      this._ui = options.ui;
      this._attachType = options.attachType;
      whenDocumentReady().then(function() {
        var _a;
        if (options.useAlerts && !_this.alertHost) {
          _this._alertHost = new AlertHost();
        } else if (!options.useAlerts && _this.alertHost) {
          (_a = _this._alertHost) === null || _a === void 0 ? void 0 : _a.shutdown();
          _this._alertHost = null;
        }
      });
    };
    Object.defineProperty(BrowserConfiguration2.prototype, "options", {
      get: function() {
        return this._options;
      },
      enumerable: false,
      configurable: true
    });
    Object.defineProperty(BrowserConfiguration2.prototype, "attachType", {
      get: function() {
        return this._attachType;
      },
      enumerable: false,
      configurable: true
    });
    Object.defineProperty(BrowserConfiguration2.prototype, "alertHost", {
      get: function() {
        return this._alertHost;
      },
      enumerable: false,
      configurable: true
    });
    Object.defineProperty(BrowserConfiguration2.prototype, "signalUser", {
      set: function(host) {
        if (!host || host != this.alertHost) {
          this.alertHost.shutdown();
        }
        this._alertHost = host;
      },
      enumerable: false,
      configurable: true
    });
    BrowserConfiguration2.prototype.debugReport = function() {
      var baseReport = _super.prototype.debugReport.call(this);
      baseReport.attachType = this.attachType;
      baseReport.ui = this._ui;
      baseReport.keymanEngine = "app/browser";
      return baseReport;
    };
    BrowserConfiguration2.prototype.onRuleFinalization = function(ruleBehavior, outputTarget) {
      var ruleTransform = ruleBehavior.transcription.transform;
      if (!isEmptyTransform(ruleTransform)) {
        if (outputTarget instanceof outputTarget_default2) {
          outputTarget.changed = true;
        }
      }
    };
    return BrowserConfiguration2;
  }(EngineConfiguration);
  var BrowserInitOptionDefaults = (0, build_exports.__assign)({ ui: "", attachType: "", useAlerts: true }, InitOptionDefaults);

  // ../../../build/engine/attachment/obj/attachmentInfo.js
  var AttachmentInfo = /* @__PURE__ */ function() {
    function AttachmentInfo2(eleInterface, kbd, touch) {
      this.interface = eleInterface;
      this.keyboard = kbd;
    }
    return AttachmentInfo2;
  }();

  // ../../../build/engine/attachment/obj/outputTargetForElement.js
  function eventOutputTarget(e) {
    var Ltarg = e === null || e === void 0 ? void 0 : e.target;
    return outputTargetForElement(Ltarg);
  }
  function outputTargetForElement(Ltarg) {
    if (Ltarg == null) {
      return null;
    }
    if (Ltarg["body"]) {
      Ltarg = Ltarg["body"];
    }
    if (Ltarg.nodeType == 3) {
      Ltarg = Ltarg.parentNode;
    }
    if (nestedInstanceOf(Ltarg, "HTMLInputElement")) {
      var et = Ltarg.type.toLowerCase();
      if (!(et == "text" || et == "search")) {
        return null;
      }
    }
    return Ltarg._kmwAttachment.interface;
  }

  // ../../../build/engine/attachment/obj/pageContextAttachment.js
  var import_eventemitter318 = __toESM(require_eventemitter3(), 1);
  var PageContextAttachment = /* @__PURE__ */ function(_super) {
    (0, build_exports.__extends)(PageContextAttachment2, _super);
    function PageContextAttachment2(document2, options) {
      var _this = this;
      if (!document2) {
        throw new Error("Cannot attach to a null/undefined document");
      }
      _this = _super.call(this) || this;
      _this.baseFont = "";
      _this.appliedFont = "";
      _this.embeddedPageContexts = [];
      _this._inputList = [];
      _this._sortedInputs = [];
      _this._InputModeObserverCore = function(mutations) {
        _this.disableInputModeObserver();
        try {
          for (var _i = 0, mutations_1 = mutations; _i < mutations_1.length; _i++) {
            var mutation = mutations_1[_i];
            var target = mutation.target;
            if (!_this.isAttached(target)) {
              continue;
            }
            target._kmwAttachment.inputMode = target.inputMode;
            if (_this.device.touchable) {
              target.inputMode = "none";
            }
          }
        } finally {
          _this.enableInputModeObserver();
        }
      };
      _this._EnablementMutationObserverCore = function(mutations) {
        for (var i = 0; i < mutations.length; i++) {
          var mutation = mutations[i];
          var disabledBefore = mutation.oldValue ? mutation.oldValue.indexOf("kmw-disabled") >= 0 : false;
          var disabledAfter = mutation.target.className.indexOf("kmw-disabled") >= 0;
          if (disabledBefore && !disabledAfter) {
            _this._EnableControl(mutation.target);
          } else if (!disabledBefore && disabledAfter) {
            _this._DisableControl(mutation.target);
          }
          if (!disabledAfter && mutation.attributeName == "readonly") {
            var readonlyBefore = mutation.oldValue ? mutation.oldValue != null : false;
            var elem = mutation.target;
            if (elem instanceof elem.ownerDocument.defaultView.HTMLInputElement || elem instanceof elem.ownerDocument.defaultView.HTMLTextAreaElement) {
              var readonlyAfter = elem.readOnly;
              if (readonlyBefore && !readonlyAfter) {
                _this._EnableControl(mutation.target);
              } else if (!readonlyBefore && readonlyAfter) {
                _this._DisableControl(mutation.target);
              }
            }
          }
        }
      };
      _this._AutoAttachObserverCore = function(mutations) {
        var inputElementAdditions = [];
        var inputElementRemovals = [];
        for (var i = 0; i < mutations.length; i++) {
          var mutation = mutations[i];
          for (var j = 0; j < mutation.addedNodes.length; j++) {
            inputElementAdditions = inputElementAdditions.concat(_this._GetDocumentEditables(mutation.addedNodes[j]));
          }
          for (j = 0; j < mutation.removedNodes.length; j++) {
            inputElementRemovals = inputElementRemovals.concat(_this._GetDocumentEditables(mutation.removedNodes[j]));
          }
        }
        for (var k = 0; k < inputElementAdditions.length; k++) {
          if (_this.isKMWInput(inputElementAdditions[k])) {
            _this._MutationAdditionObserved(inputElementAdditions[k]);
          }
        }
        for (k = 0; k < inputElementRemovals.length; k++) {
          var matched = false;
          var elem = inputElementRemovals[k];
          if (elem instanceof elem.ownerDocument.defaultView.HTMLIFrameElement) {
            for (var i_1 = 0; i_1 < _this.embeddedPageContexts.length; i_1++) {
              if (_this.embeddedPageContexts[i_1].options.owner == elem) {
                _this.embeddedPageContexts[i_1].shutdown();
                _this.embeddedPageContexts.splice(i_1, 1);
                matched = true;
                break;
              }
            }
            if (!matched) {
              for (var i_2 = 0; i_2 < _this._inputList.length; i_2++) {
                if (_this._inputList[i_2] == elem) {
                  _this.detachFromControl(elem);
                  if (_this._inputList[i_2] == elem) {
                    _this._inputList.splice(i_2, 1);
                  }
                  break;
                }
              }
            }
          } else if (_this.isKMWInput(elem)) {
            _this._MutationRemovalObserved(elem);
          }
        }
        if (inputElementAdditions.length || inputElementRemovals.length) {
          if (!_this.device.touchable) {
            _this.listInputs();
          } else if (_this.device.touchable) {
            window.setTimeout(function() {
              _this.listInputs();
            }, 1);
          }
        }
      };
      _this._MutationAdditionObserved = function(Pelem) {
        if (Pelem instanceof Pelem.ownerDocument.defaultView.HTMLIFrameElement) {
          var attachFunctor = function() {
            window.setTimeout(function() {
              _this.attachToControl(Pelem);
            }, 1);
          };
          Pelem.addEventListener("load", attachFunctor);
        } else {
          _this.attachToControl(Pelem);
        }
      };
      _this._MutationRemovalObserved = function(Pelem) {
        _this.detachFromControl(Pelem);
      };
      _this.options = options;
      _this.document = document2;
      _this.stylesheetManager = new StylesheetManager(_this.document.body);
      return _this;
    }
    Object.defineProperty(PageContextAttachment2.prototype, "device", {
      get: function() {
        return this.options.hostDevice;
      },
      enumerable: false,
      configurable: true
    });
    Object.defineProperty(PageContextAttachment2.prototype, "window", {
      get: function() {
        return this.document.defaultView;
      },
      enumerable: false,
      configurable: true
    });
    Object.defineProperty(PageContextAttachment2.prototype, "inputList", {
      get: function() {
        var embeddedInputs = this.embeddedPageContexts.map(
          function(embeddedPage) {
            return embeddedPage.inputList;
          }
        ).reduce(
          function(flattenedInputList, pageInputList) {
            return flattenedInputList.concat(pageInputList);
          },
          []
        );
        return [].concat(this._inputList).concat(embeddedInputs);
      },
      enumerable: false,
      configurable: true
    });
    Object.defineProperty(PageContextAttachment2.prototype, "sortedInputs", {
      get: function() {
        return this._sortedInputs;
      },
      enumerable: false,
      configurable: true
    });
    PageContextAttachment2.prototype.install = function(manualAttach) {
      this.manualAttach = manualAttach;
      this.baseFont = this.getBaseFont();
      if (!this.manualAttach) {
        this._SetupDocument(this.document.documentElement);
        this.listInputs();
      }
      if (!this.options.owner) {
        this.initMutationObservers(this.document, manualAttach);
      }
    };
    PageContextAttachment2.prototype.setupElementAttachment = function(x) {
      if (x._kmwAttachment) {
        return;
      } else {
        var eleInterface = wrapElement(x);
        if (!(eleInterface || nestedInstanceOf(x, "HTMLIFrameElement"))) {
          console.warn("Could not create processing interface for newly-attached element!");
        }
        x._kmwAttachment = new AttachmentInfo(eleInterface, null, this.device.touchable);
      }
    };
    PageContextAttachment2.prototype.clearElementAttachment = function(x) {
      x._kmwAttachment = null;
    };
    PageContextAttachment2.prototype.isKMWInput = function(x) {
      if (x instanceof x.ownerDocument.defaultView.HTMLTextAreaElement) {
        return true;
      } else if (x instanceof x.ownerDocument.defaultView.HTMLInputElement) {
        if (x.type == "text" || x.type == "search") {
          return true;
        }
      } else if (x instanceof x.ownerDocument.defaultView.HTMLIFrameElement) {
        try {
          if (x.contentWindow) {
            var iframeDoc = x.contentWindow.document;
            if (iframeDoc) {
              if (this.device.touchable && iframeDoc.designMode.toLowerCase() == "on") {
                return false;
              }
              return true;
            }
          } else {
            return !!x._kmwAttachment;
          }
        } catch (err) {
          console.warn("Error during attachment to / detachment from iframe: ");
          console.warn(err);
        }
      } else if (x.isContentEditable) {
        return true;
      }
      return false;
    };
    PageContextAttachment2.prototype.isAttached = function(x) {
      if (x._kmwAttachment) {
        return true;
      }
      if (nestedInstanceOf(x, "HTMLIFrameElement")) {
        var iframe = x;
        if (iframe.contentDocument == this.document) {
          return true;
        }
        for (var _i = 0, _a = this.embeddedPageContexts; _i < _a.length; _i++) {
          var child = _a[_i];
          if (child.isAttached(x)) {
            return true;
          }
        }
      }
      return false;
    };
    PageContextAttachment2.prototype.isKMWDisabled = function(x) {
      var c = x.className;
      if (x["readOnly"]) {
        return true;
      } else if (c && c.indexOf("kmw-disabled") >= 0) {
        return true;
      }
      return false;
    };
    PageContextAttachment2.prototype.enableInputElement = function(Pelem) {
      var _a;
      if (!this.isKMWDisabled(Pelem)) {
        if (Pelem instanceof Pelem.ownerDocument.defaultView.HTMLIFrameElement) {
          this._AttachToIframe(Pelem);
        } else {
          this.setupElementAttachment(Pelem);
          Pelem._kmwAttachment.inputMode = (_a = Pelem.inputMode) !== null && _a !== void 0 ? _a : "text";
          this.disableInputModeObserver();
          Pelem.inputMode = "none";
          this.enableInputModeObserver();
          Pelem.classList.add("keymanweb-font");
          this._inputList.push(Pelem);
          this.emit("enabled", Pelem);
        }
      }
    };
    ;
    PageContextAttachment2.prototype.disableInputElement = function(Pelem) {
      var _a;
      if (!Pelem) {
        return;
      }
      if (Pelem.ownerDocument.defaultView && Pelem instanceof Pelem.ownerDocument.defaultView.HTMLIFrameElement || Pelem instanceof HTMLIFrameElement) {
        this._DetachFromIframe(Pelem);
      } else {
        if (this.isAttached(Pelem)) {
          var intendedInputMode = (_a = Pelem._kmwAttachment) === null || _a === void 0 ? void 0 : _a.inputMode;
          this.disableInputModeObserver();
          Pelem.inputMode = intendedInputMode;
          this.enableInputModeObserver();
        }
        var cnIndex = Pelem.className.indexOf("keymanweb-font");
        if (cnIndex >= 0) {
          Pelem.className = Pelem.className.replace("keymanweb-font", "").trim();
        }
        var index = this.inputList.indexOf(Pelem);
        if (index > -1) {
          this._inputList.splice(index, 1);
        }
        this.emit("disabled", Pelem);
      }
      return;
    };
    ;
    PageContextAttachment2.prototype.enableTouchElement = function(Pelem) {
      if (this.isKMWDisabled(Pelem)) {
        this.emit("disabled", Pelem);
        return false;
      }
      if (!this.isAttached(Pelem)) {
        this.setupElementAttachment(Pelem);
      }
      this.enableInputElement(Pelem);
      return true;
    };
    PageContextAttachment2.prototype.disableTouchElement = function(Pelem) {
      if (this.isAttached(Pelem)) {
        var intendedInputMode = Pelem._kmwAttachment.inputMode;
        this.disableInputModeObserver();
        Pelem.inputMode = intendedInputMode;
        this.enableInputModeObserver();
      }
    };
    PageContextAttachment2.prototype._AttachToIframe = function(Pelem) {
      var _this = this;
      try {
        var Lelem_1 = Pelem.contentWindow.document;
        if (Lelem_1) {
          if (Lelem_1.designMode.toLowerCase() == "on") {
            this.setupElementAttachment(Pelem);
            Lelem_1.body._kmwAttachment = Pelem._kmwAttachment;
            this._inputList.push(Pelem);
            this.emit("enabled", Pelem);
          } else {
            if (this.embeddedPageContexts.filter(function(context) {
              return context.document == Lelem_1;
            }).length == 0) {
              var embeddedPageAttachment = new PageContextAttachment2(Lelem_1, (0, build_exports.__assign)((0, build_exports.__assign)({}, this.options), { owner: Pelem }));
              this.embeddedPageContexts.push(embeddedPageAttachment);
              embeddedPageAttachment.on("enabled", function(elem) {
                return _this.emit("enabled", elem);
              });
              embeddedPageAttachment.on("disabled", function(elem) {
                return _this.emit("disabled", elem);
              });
              embeddedPageAttachment.install(this.manualAttach);
            }
          }
        }
      } catch (err) {
      }
    };
    PageContextAttachment2.prototype._DetachFromIframe = function(Pelem) {
      var _this = this;
      var detachFromDesignIframe = function() {
        _this.clearElementAttachment(Pelem);
        var index = _this._inputList.indexOf(Pelem);
        if (index != -1) {
          _this._inputList.splice(index, 1);
        }
        _this.emit("disabled", Pelem);
      };
      try {
        var Lelem = Pelem.contentWindow.document;
        if (Lelem) {
          if (Lelem.designMode.toLowerCase() == "on") {
            Lelem.body._kmwAttachment = null;
            detachFromDesignIframe();
          } else {
            for (var i = 0; i < this.embeddedPageContexts.length; i++) {
              if (this.embeddedPageContexts[i].document == Lelem) {
                var embeddedPageAttachment = this.embeddedPageContexts.splice(i, 1)[0];
                embeddedPageAttachment._ClearDocument(Lelem.body);
                embeddedPageAttachment.shutdown();
                this.embeddedPageContexts.splice(i, 1);
                break;
              }
            }
          }
        }
      } catch (err) {
        if (Pelem._kmwAttachment) {
          detachFromDesignIframe();
        }
      }
    };
    PageContextAttachment2.prototype.attachToControl = function(Pelem) {
      var touchable = this.device.touchable;
      if (this.isAttached(Pelem) && !(Pelem instanceof Pelem.ownerDocument.defaultView.HTMLIFrameElement)) {
        return;
      }
      if (this.isKMWInput(Pelem)) {
        if (this.isKMWDisabled(Pelem)) {
          this.emit("disabled", Pelem);
        } else {
          if (touchable) {
            this.enableTouchElement(Pelem);
          } else {
            this.enableInputElement(Pelem);
          }
        }
      } else if (touchable) {
        this.emit("disabled", Pelem);
      }
    };
    PageContextAttachment2.prototype.detachFromControl = function(Pelem) {
      if (!(this.isAttached(Pelem) || Pelem instanceof Pelem.ownerDocument.defaultView.HTMLIFrameElement)) {
        return;
      }
      if (this.isKMWInput(Pelem)) {
        if (!this.isKMWDisabled(Pelem)) {
          this._DisableControl(Pelem);
        }
      }
      this.clearElementAttachment(Pelem);
    };
    PageContextAttachment2.prototype._DisableControl = function(Pelem) {
      if (this.isAttached(Pelem) || Pelem instanceof Pelem.ownerDocument.defaultView.HTMLIFrameElement) {
        if (this.device.touchable) {
          this.disableTouchElement(Pelem);
        }
        this.listInputs();
        this.disableInputElement(Pelem);
      }
    };
    PageContextAttachment2.prototype._EnableControl = function(Pelem) {
      if (this.isAttached(Pelem)) {
        if (this.device.touchable) {
          this.enableTouchElement(Pelem);
        } else {
          this.enableInputElement(Pelem);
        }
        this.listInputs();
      } else if (nestedInstanceOf(Pelem, "HTMLIFrameElement")) {
        this._AttachToIframe(Pelem);
      }
    };
    PageContextAttachment2.prototype.disableControl = function(Pelem) {
      if (!this.isAttached(Pelem)) {
        console.warn("KeymanWeb is not attached to element " + Pelem);
      }
      var cn = Pelem.className;
      if (cn.indexOf("kmw-disabled") < 0) {
        Pelem.className = cn ? cn + " kmw-disabled" : "kmw-disabled";
      }
    };
    PageContextAttachment2.prototype.enableControl = function(Pelem) {
      if (!this.isAttached(Pelem) && !nestedInstanceOf(Pelem, "HTMLIFrameElement")) {
        console.warn("KeymanWeb is not attached to element " + Pelem);
      }
      var cn = Pelem.className;
      var tagIndex = cn.indexOf("kmw-disabled");
      if (tagIndex >= 0) {
        Pelem.className = cn.replace("kmw-disabled", "").trim();
      }
    };
    PageContextAttachment2.prototype.listInputs = function() {
      var eList = [];
      var t1 = document.getElementsByTagName("input");
      var t2 = document.getElementsByTagName("textarea");
      for (var i = 0; i < t1.length; i++) {
        switch (t1[i].type) {
          case "text":
          case "search":
          case "email":
          case "url":
            if (t1[i].className.indexOf("kmw-disabled") < 0) {
              eList.push({ ip: t1[i], x: getAbsoluteX(t1[i]), y: getAbsoluteY(t1[i]) });
            }
            break;
        }
      }
      for (var i = 0; i < t2.length; i++) {
        if (t2[i].className.indexOf("kmw-disabled") < 0) {
          eList.push({ ip: t2[i], x: getAbsoluteX(t2[i]), y: getAbsoluteY(t2[i]) });
        }
      }
      eList.sort(function(e1, e2) {
        if (e1.y != e2.y) {
          return e1.y - e2.y;
        }
        return e1.x - e2.x;
      });
      var tList = [];
      for (var i = 0; i < eList.length; i++) {
        tList.push(eList[i].ip);
      }
      this._sortedInputs = tList;
    };
    PageContextAttachment2.prototype.findNeighboringInput = function(activeBase, bBack) {
      var i, t = this.sortedInputs;
      if (t.length == 0) {
        return null;
      }
      for (i = 0; i < t.length; i++) {
        if (t[i] == activeBase) {
          break;
        }
      }
      if (i == t.length && !bBack) {
        i--;
      }
      i = bBack ? i - 1 : i + 1;
      i = i >= t.length ? i - t.length : i;
      i = i < 0 ? i + t.length : i;
      return t[i];
    };
    PageContextAttachment2.prototype._GetDocumentEditables = function(Pelem) {
      var possibleInputs = [];
      if (Pelem.ownerDocument && Pelem instanceof Pelem.ownerDocument.defaultView.HTMLElement) {
        var dv = Pelem.ownerDocument.defaultView;
        if (Pelem instanceof dv.HTMLInputElement || Pelem instanceof dv.HTMLTextAreaElement) {
          possibleInputs.push(Pelem);
        } else if (Pelem instanceof dv.HTMLIFrameElement) {
          possibleInputs.push(Pelem);
        }
      }
      if (Pelem.getElementsByTagName) {
        var LiTmp = function(_colon) {
          return arrayFromNodeList(Pelem.getElementsByTagName(_colon));
        };
        possibleInputs = possibleInputs.concat(LiTmp("INPUT"), LiTmp("TEXTAREA"), LiTmp("IFRAME"));
      }
      if (Pelem.querySelectorAll) {
        possibleInputs = possibleInputs.concat(arrayFromNodeList(Pelem.querySelectorAll("[contenteditable]")));
      }
      if (Pelem.ownerDocument && Pelem instanceof Pelem.ownerDocument.defaultView.HTMLElement && Pelem.isContentEditable) {
        possibleInputs.push(Pelem);
      }
      return possibleInputs;
    };
    PageContextAttachment2.prototype._SetupDocument = function(Pelem) {
      var possibleInputs = this._GetDocumentEditables(Pelem);
      for (var Li = 0; Li < possibleInputs.length; Li++) {
        this.attachToControl(possibleInputs[Li]);
      }
    };
    PageContextAttachment2.prototype._ClearDocument = function(Pelem) {
      var possibleInputs = this._GetDocumentEditables(Pelem);
      for (var Li = 0; Li < possibleInputs.length; Li++) {
        this.detachFromControl(possibleInputs[Li]);
      }
    };
    PageContextAttachment2.prototype.initMutationObservers = function(document2, manualAttach) {
      if (typeof MutationObserver == "function") {
        var observationTarget = document2.querySelector("body"), observationConfig;
        if (!manualAttach) {
          observationConfig = { childList: true, subtree: true };
          this.attachmentObserver = new MutationObserver(this._AutoAttachObserverCore);
          this.attachmentObserver.observe(observationTarget, observationConfig);
        }
        observationConfig = { subtree: true, attributes: true, attributeOldValue: true, attributeFilter: ["class", "readonly"] };
        this.enablementObserver = new MutationObserver(this._EnablementMutationObserverCore);
        this.enablementObserver.observe(observationTarget, observationConfig);
        this.inputModeObserver = new MutationObserver(this._InputModeObserverCore);
        this.enableInputModeObserver();
      } else {
        console.warn("Your browser is outdated and does not support MutationObservers, a web feature needed by KeymanWeb to support dynamically-added elements.");
      }
    };
    PageContextAttachment2.prototype.enableInputModeObserver = function() {
      var _a;
      var observationTarget = document.querySelector("body");
      var observationConfig = { subtree: true, attributes: true, attributeFilter: ["inputmode"] };
      (_a = this.inputModeObserver) === null || _a === void 0 ? void 0 : _a.observe(observationTarget, observationConfig);
    };
    PageContextAttachment2.prototype.disableInputModeObserver = function() {
      var _a;
      (_a = this.inputModeObserver) === null || _a === void 0 ? void 0 : _a.disconnect();
    };
    PageContextAttachment2.prototype.getBaseFont = function() {
      var ipInput = document.getElementsByTagName("input"), ipTextArea = document.getElementsByTagName("textarea"), n = 0, fs, fsDefault = "Arial,sans-serif";
      if (ipInput.length == 0 && ipTextArea.length == 0) {
        n = 0;
      } else if (ipInput.length > 0 && ipTextArea.length == 0) {
        n = 1;
      } else if (ipInput.length == 0 && ipTextArea.length > 0) {
        n = 2;
      } else {
        var firstInput = ipInput[0];
        var firstTextArea = ipTextArea[0];
        if (firstInput.offsetTop < firstTextArea.offsetTop) {
          n = 1;
        } else if (firstInput.offsetTop > firstTextArea.offsetTop) {
          n = 2;
        } else if (firstInput.offsetLeft < firstTextArea.offsetLeft) {
          n = 1;
        } else if (firstInput.offsetLeft > firstTextArea.offsetLeft) {
          n = 2;
        }
      }
      switch (n) {
        case 0:
          fs = fsDefault;
          break;
        case 1:
          fs = getComputedStyle(ipInput[0]).fontFamily || "";
          break;
        case 2:
          fs = getComputedStyle(ipTextArea[0]).fontFamily || "";
          break;
      }
      if (typeof fs == "undefined" || fs == "monospace") {
        fs = fsDefault;
      }
      return fs;
    };
    PageContextAttachment2.prototype.buildAttachmentFontStyle = function(keyboardFontDescriptor) {
      var kfd = keyboardFontDescriptor;
      var fontName = this.baseFont;
      if (kfd && typeof kfd.family != "undefined") {
        fontName = kfd["family"];
      }
      fontName = fontName.replace(/\u0022/g, "");
      var rx = new RegExp("\\s?" + fontName + ",?"), fontFamily = this.appliedFont.replace(/\u0022/g, "");
      fontFamily = fontFamily.replace(rx, "");
      fontFamily = fontFamily.replace(/,$/, "");
      if (fontFamily == "") {
        fontFamily = fontName;
      } else {
        fontFamily = fontName + "," + fontFamily;
      }
      fontFamily = '"' + fontFamily.replace(/\,\s?/g, '","') + '"';
      var s = ".keymanweb-font{\nfont-family:" + fontFamily + " !important;\n}\n";
      this.appliedFont = fontFamily;
      return s;
    };
    PageContextAttachment2.prototype.setAttachmentFont = function(keyboardFontDescriptor, fontRoot, os) {
      this.stylesheetManager.unlinkAll();
      this.stylesheetManager.addStyleSheetForFont(keyboardFontDescriptor, fontRoot, os);
      this.stylesheetManager.linkStylesheet(createStyleSheet(this.buildAttachmentFontStyle(keyboardFontDescriptor)));
    };
    PageContextAttachment2.prototype.shutdown = function() {
      var _a, _b, _c, _d;
      try {
        (_a = this.enablementObserver) === null || _a === void 0 ? void 0 : _a.disconnect();
        (_b = this.attachmentObserver) === null || _b === void 0 ? void 0 : _b.disconnect();
        (_c = this.inputModeObserver) === null || _c === void 0 ? void 0 : _c.disconnect();
        (_d = this.stylesheetManager) === null || _d === void 0 ? void 0 : _d.unlinkAll();
        this.inputModeObserver = null;
        this.embeddedPageContexts.forEach(function(embeddedPage) {
          try {
            embeddedPage.shutdown();
          } catch (e) {
          }
        });
        for (var _i = 0, _e = this.inputList; _i < _e.length; _i++) {
          var input = _e[_i];
          try {
            this.detachFromControl(input);
          } catch (e) {
            this.emit("disabled", input);
          }
        }
        this._inputList = [];
      } catch (e) {
        console.error("Error occurred during shutdown");
        console.error(e);
      }
    };
    return PageContextAttachment2;
  }(import_eventemitter318.default);

  // ../../../build/app/browser/obj/context/focusAssistant.js
  var import_eventemitter319 = __toESM(require_eventemitter3(), 1);
  var FocusStateAPIObject = /* @__PURE__ */ function() {
    function FocusStateAPIObject2(pending, activated) {
      this.activationPending = pending;
      this.activated = activated;
    }
    return FocusStateAPIObject2;
  }();
  var FocusAssistant = function(_super) {
    (0, build_exports.__extends)(FocusAssistant2, _super);
    function FocusAssistant2(isTargetForcingScroll) {
      var _this = _super.call(this) || this;
      _this._maintainingFocus = false;
      _this.restoringFocus = false;
      _this._IgnoreNextSelChange = 0;
      _this.isTargetForcingScroll = isTargetForcingScroll;
      return _this;
    }
    Object.defineProperty(FocusAssistant2.prototype, "maintainingFocus", {
      get: function() {
        return this._maintainingFocus;
      },
      set: function(value) {
        var priorValue = this._maintainingFocus;
        this._maintainingFocus = value;
        if (priorValue && !value) {
          this.emit("maintainingfocusend");
        }
      },
      enumerable: false,
      configurable: true
    });
    FocusAssistant2.prototype.getUIState = function() {
      return new FocusStateAPIObject(this.maintainingFocus, this.restoringFocus);
    };
    FocusAssistant2.prototype.setMaintainingFocus = function(state) {
      this.maintainingFocus = state ? true : false;
    };
    FocusAssistant2.prototype.setFocusTimer = function() {
      this.focusing = true;
      this.focusTimer = window.setTimeout(function() {
        this.focusing = false;
      }.bind(this), 50);
    };
    return FocusAssistant2;
  }(import_eventemitter319.default);

  // ../../../build/app/browser/obj/contextManager.js
  function _SetTargDir(Ptarg, activeKeyboard) {
    var elDir = (activeKeyboard === null || activeKeyboard === void 0 ? void 0 : activeKeyboard.isRTL) ? "rtl" : "ltr";
    if (Ptarg) {
      if (Ptarg instanceof Ptarg.ownerDocument.defaultView.HTMLInputElement || Ptarg instanceof Ptarg.ownerDocument.defaultView.HTMLTextAreaElement) {
        if (Ptarg.value.length == 0) {
          Ptarg.dir = elDir;
        }
      } else if (typeof Ptarg.textContent == "string" && Ptarg.textContent.length == 0) {
        Ptarg.dir = elDir;
      }
    }
  }
  var ContextManager = /* @__PURE__ */ function(_super) {
    (0, build_exports.__extends)(ContextManager2, _super);
    function ContextManager2(engineConfig, eventsClosure) {
      var _this = _super.call(this, engineConfig) || this;
      _this.cookieManager = new cookieSerializer_default("KeymanWeb_Keyboard");
      _this.focusAssistant = new FocusAssistant(function() {
        var _a;
        return (_a = _this.activeTarget) === null || _a === void 0 ? void 0 : _a.isForcingScroll();
      });
      _this.domEventTracker = new DomEventTracker();
      _this._ControlFocus = function(e) {
        var target = eventOutputTarget(e);
        if (!target) {
          return true;
        }
        _this.setActiveTarget(target, true);
        return true;
      };
      _this._ControlBlur = function(e) {
        if (_this.focusAssistant._IgnoreNextSelChange) {
          _this.focusAssistant._IgnoreNextSelChange--;
          e.cancelBubble = true;
          e.stopPropagation();
          return true;
        }
        if (_this.focusAssistant.isTargetForcingScroll()) {
          e.cancelBubble = true;
          e.stopPropagation();
          return true;
        }
        var target = eventOutputTarget(e);
        if (target == null) {
          return true;
        }
        if (_this.lastActiveTarget) {
          _this._BlurKeyboardSettings(_this.lastActiveTarget.getElement());
        }
        var previousTarget = _this.activeTarget;
        _this.currentTarget = null;
        if (previousTarget || _this.lastActiveTarget) {
          _this.mostRecentTarget = target;
        }
        _this.focusAssistant.restoringFocus = false;
        var activeKeyboard = _this.activeKeyboard;
        var maintainingFocus = _this.focusAssistant.maintainingFocus;
        if (!maintainingFocus && activeKeyboard) {
          activeKeyboard.keyboard.notify(0, target, 0);
        }
        if (previousTarget && !_this.activeTarget) {
          _this.emit("targetchange", null);
        }
        _this.apiEvents.callEvent("controlblurred", {
          target: target.getElement(),
          event: e,
          isActivating: maintainingFocus
        });
        _this.doChangeEvent(target);
        _this.resetContext();
        return true;
      };
      _this._Click = function(e) {
        _this.resetContext();
        return true;
      };
      _this.nonKMWTouchHandler = function(x) {
        _this.focusAssistant.focusing = false;
        clearTimeout(_this.focusAssistant.focusTimer);
        _this.forgetActiveTarget();
      };
      _this._eventsObj = eventsClosure;
      _this.page = new PageContextAttachment(window.document, {
        hostDevice: _this.engineConfig.hostDevice
      });
      _this.focusAssistant.on("maintainingfocusend", function() {
        if (!_this.activeTarget && _this.mostRecentTarget) {
          _this.emit("targetchange", _this.activeTarget);
        }
      });
      return _this;
    }
    Object.defineProperty(ContextManager2.prototype, "apiEvents", {
      get: function() {
        return this._eventsObj();
      },
      enumerable: false,
      configurable: true
    });
    ContextManager2.prototype.initialize = function() {
      var _this = this;
      this.on("keyboardasyncload", function(stub, completion) {
        var _a;
        (_a = _this.engineConfig.alertHost) === null || _a === void 0 ? void 0 : _a.wait("Installing keyboard<br/>" + stub.name);
        completion.then(function() {
          var _a2;
          (_a2 = _this.engineConfig.alertHost) === null || _a2 === void 0 ? void 0 : _a2.wait();
        });
      });
      this.engineConfig.deferForInitialization.then(function() {
        var device = _this.engineConfig.hostDevice;
        var noPropagation = function(event) {
          return event.stopPropagation();
        };
        _this.page.on("enabled", function(elem) {
          if (!(elem._kmwAttachment.interface instanceof designIFrame_default)) {
            if (device.touchable) {
              _this.domEventTracker.detachDOMEvent(elem, "touchstart", _this.nonKMWTouchHandler);
              _this.domEventTracker.attachDOMEvent(elem, "touchmove", noPropagation, false);
              _this.domEventTracker.attachDOMEvent(elem, "touchend", noPropagation, false);
            }
            _this.domEventTracker.attachDOMEvent(elem, "focus", _this._ControlFocus);
            _this.domEventTracker.attachDOMEvent(elem, "blur", _this._ControlBlur);
            _this.domEventTracker.attachDOMEvent(elem, "click", _this._Click);
          } else {
            var Lelem = elem.contentWindow.document;
            if (device.browser == "firefox") {
              _this.domEventTracker.attachDOMEvent(Lelem, "focus", _this._ControlFocus);
              _this.domEventTracker.attachDOMEvent(Lelem, "blur", _this._ControlBlur);
            } else {
              _this.domEventTracker.attachDOMEvent(Lelem.body, "focus", _this._ControlFocus);
              _this.domEventTracker.attachDOMEvent(Lelem.body, "blur", _this._ControlBlur);
            }
          }
        });
        _this.page.on("disabled", function(elem) {
          var _a;
          if (!nestedInstanceOf(elem, "HTMLIFrameElement")) {
            if (device.touchable) {
              _this.domEventTracker.attachDOMEvent(elem, "touchstart", _this.nonKMWTouchHandler, false);
            }
            _this.domEventTracker.detachDOMEvent(elem, "focus", _this._ControlFocus);
            _this.domEventTracker.detachDOMEvent(elem, "blur", _this._ControlBlur);
            _this.domEventTracker.detachDOMEvent(elem, "click", _this._Click);
          } else {
            var Lelem = elem.contentWindow.document;
            if (device.browser == "firefox") {
              _this.domEventTracker.detachDOMEvent(Lelem, "focus", _this._ControlFocus);
              _this.domEventTracker.detachDOMEvent(Lelem, "blur", _this._ControlBlur);
            } else {
              _this.domEventTracker.detachDOMEvent(Lelem.body, "focus", _this._ControlFocus);
              _this.domEventTracker.detachDOMEvent(Lelem.body, "blur", _this._ControlBlur);
            }
          }
          var lastElem = (_a = _this.mostRecentTarget) === null || _a === void 0 ? void 0 : _a.getElement();
          if (lastElem && lastElem == elem) {
            _this.forgetActiveTarget();
          }
        });
        _this.page.install(_this.engineConfig.attachType == "manual");
      });
    };
    Object.defineProperty(ContextManager2.prototype, "activeTarget", {
      get: function() {
        var maintainingFocus = this.focusAssistant.maintainingFocus;
        return this.currentTarget || (maintainingFocus ? this.mostRecentTarget : null);
      },
      enumerable: false,
      configurable: true
    });
    Object.defineProperty(ContextManager2.prototype, "lastActiveTarget", {
      get: function() {
        return this.mostRecentTarget;
      },
      enumerable: false,
      configurable: true
    });
    ContextManager2.prototype.deactivateCurrentTarget = function() {
      var priorTarget = this.activeTarget || this.lastActiveTarget;
      if (priorTarget && this.page.isAttached(priorTarget.getElement())) {
        this._BlurKeyboardSettings(priorTarget.getElement());
      }
      if (!this.activeTarget) {
        this.setActiveTarget(null, true);
      }
    };
    ContextManager2.prototype.forgetActiveTarget = function() {
      this.focusAssistant.maintainingFocus = false;
      this.focusAssistant.restoringFocus = false;
      var priorTarget = this.activeTarget || this.mostRecentTarget;
      if (priorTarget) {
        this._BlurKeyboardSettings(priorTarget.getElement());
      }
      this.setActiveTarget(null, true);
      if (priorTarget == this.lastActiveTarget) {
        this.mostRecentTarget = null;
      }
    };
    ContextManager2.prototype.setActiveTarget = function(target, sendEvents) {
      var _a;
      var previousTarget = this.mostRecentTarget;
      var originalTarget = this.activeTarget;
      if (target == originalTarget) {
        if (originalTarget) {
          this.currentTarget = originalTarget;
        }
        return;
      }
      var hadRecentElement = !!previousTarget;
      this.currentTarget = this.mostRecentTarget = target;
      this.predictionContext.setCurrentTarget(target);
      if (this.focusAssistant.restoringFocus) {
        this._BlurKeyboardSettings(target.getElement());
      } else if (target) {
        this._FocusKeyboardSettings(target.getElement(), !hadRecentElement);
      }
      if (this._CommonFocusHelper(target)) {
        return true;
      }
      ;
      var Ltarg = target === null || target === void 0 ? void 0 : target.getElement();
      if (target instanceof designIFrame_default) {
        Ltarg = target.docRoot;
      }
      if (Ltarg && Ltarg.ownerDocument && Ltarg instanceof Ltarg.ownerDocument.defaultView.HTMLElement) {
        _SetTargDir(Ltarg, (_a = this.activeKeyboard) === null || _a === void 0 ? void 0 : _a.keyboard);
      }
      if (target != originalTarget) {
        this.emit("targetchange", target);
      }
      if (sendEvents) {
        this.apiEvents.callEvent("controlfocused", {
          target: (target === null || target === void 0 ? void 0 : target.getElement()) || null,
          activeControl: previousTarget === null || previousTarget === void 0 ? void 0 : previousTarget.getElement()
        });
      }
    };
    Object.defineProperty(ContextManager2.prototype, "activeKeyboard", {
      get: function() {
        return this._activeKeyboard;
      },
      enumerable: false,
      configurable: true
    });
    ContextManager2.prototype.restoreLastActiveTarget = function() {
      if (!this.mostRecentTarget) {
        return;
      }
      this.focusAssistant.restoringFocus = true;
      this.mostRecentTarget.focus();
      this.focusAssistant.restoringFocus = false;
    };
    ContextManager2.prototype.insertText = function(kbdInterface, Ptext, PdeadKey) {
      this.restoreLastActiveTarget();
      var outputTarget = this.activeTarget;
      if (outputTarget == null && this.mostRecentTarget) {
        outputTarget = this.activeTarget;
      }
      if (outputTarget != null) {
        return _super.prototype.insertText.call(this, kbdInterface, Ptext, PdeadKey);
      }
      return false;
    };
    ContextManager2.prototype.currentKeyboardSrcTarget = function() {
      var target = this.currentTarget || this.mostRecentTarget;
      if (this.isTargetKeyboardIndependent(target)) {
        return target;
      } else {
        return null;
      }
    };
    ContextManager2.prototype.isTargetKeyboardIndependent = function(target) {
      var attachmentInfo = target === null || target === void 0 ? void 0 : target.getElement()._kmwAttachment;
      return !!((attachmentInfo === null || attachmentInfo === void 0 ? void 0 : attachmentInfo.keyboard) || (attachmentInfo === null || attachmentInfo === void 0 ? void 0 : attachmentInfo.keyboard) === "");
    };
    ContextManager2.prototype.activateKeyboardForTarget = function(kbd, target) {
      var _a, _b;
      var attachment = target === null || target === void 0 ? void 0 : target.getElement()._kmwAttachment;
      if (!attachment) {
        this.globalKeyboard = kbd;
      } else {
        attachment.keyboard = (_a = kbd === null || kbd === void 0 ? void 0 : kbd.metadata.id) !== null && _a !== void 0 ? _a : "";
        attachment.languageCode = (_b = kbd === null || kbd === void 0 ? void 0 : kbd.metadata.langId) !== null && _b !== void 0 ? _b : "";
      }
      if (this.currentKeyboardSrcTarget() == target) {
        this._activeKeyboard = kbd;
        var activeStub = kbd === null || kbd === void 0 ? void 0 : kbd.metadata;
        this.page.setAttachmentFont(activeStub === null || activeStub === void 0 ? void 0 : activeStub.KFont, this.engineConfig.paths.fonts, this.engineConfig.hostDevice.OS);
      }
    };
    ContextManager2.prototype.setKeyboardForTarget = function(target, kbdId, langId) {
      if (target instanceof designIFrame_default) {
        console.warn("'keymanweb.setKeyboardForControl' cannot set keyboard on iframes.");
        return;
      }
      var attachment = target.getElement()._kmwAttachment;
      var wasPriorTarget = this.currentKeyboardSrcTarget() == target;
      if (!attachment) {
        return;
      } else {
        attachment.keyboard = kbdId || null;
        attachment.languageCode = langId || null;
        if (wasPriorTarget || this.currentKeyboardSrcTarget() == target) {
          var globalKbd = this.globalKeyboard.metadata;
          this.activateKeyboard(attachment.keyboard || globalKbd.id, attachment.languageCode || globalKbd.langId, true);
        }
      }
    };
    ContextManager2.prototype.getKeyboardStubForTarget = function(target) {
      if (!this.isTargetKeyboardIndependent(target)) {
        return this.globalKeyboard.metadata;
      } else {
        var attachment = target.getElement()._kmwAttachment;
        return this.keyboardCache.getStub(attachment.keyboard, attachment.languageCode);
      }
    };
    ContextManager2.prototype.getFallbackStubKey = function() {
      var emptyCodes = {
        id: "",
        langId: ""
      };
      if (this.engineConfig.hostDevice.touchable) {
        return this.keyboardCache.defaultStub || emptyCodes;
      } else {
        return emptyCodes;
      }
    };
    ContextManager2.prototype.activateKeyboard = function(keyboardId, languageCode, saveCookie) {
      var _a, _b, _c, _d, _e, _f;
      return (0, build_exports.__awaiter)(this, void 0, void 0, function() {
        var originalKeyboardTarget, result, err_1, fallback, message;
        var _this = this;
        return (0, build_exports.__generator)(this, function(_g) {
          switch (_g.label) {
            case 0:
              saveCookie || (saveCookie = false);
              originalKeyboardTarget = this.currentKeyboardSrcTarget();
              if (!keyboardId) {
                keyboardId = this.getFallbackStubKey().id;
                languageCode = this.getFallbackStubKey().langId;
              }
              _g.label = 1;
            case 1:
              _g.trys.push([1, 3, , 7]);
              return [4, _super.prototype.activateKeyboard.call(this, keyboardId, languageCode, saveCookie)];
            case 2:
              result = _g.sent();
              (_a = this.engineConfig.alertHost) === null || _a === void 0 ? void 0 : _a.wait();
              if (saveCookie && !originalKeyboardTarget) {
                this.cookieManager.save({ current: "".concat(keyboardId, ":").concat(languageCode) });
              }
              if (originalKeyboardTarget == this.currentKeyboardSrcTarget()) {
                _SetTargDir((_b = this.currentTarget) === null || _b === void 0 ? void 0 : _b.getElement(), this.keyboardCache.getKeyboard(keyboardId));
                this.page.setAttachmentFont((_d = (_c = this.activeKeyboard) === null || _c === void 0 ? void 0 : _c.metadata) === null || _d === void 0 ? void 0 : _d.KFont, this.engineConfig.paths.fonts, this.engineConfig.hostDevice.OS);
                this.restoreLastActiveTarget();
              }
              return [2, result];
            case 3:
              err_1 = _g.sent();
              fallback = function() {
                return (0, build_exports.__awaiter)(_this, void 0, void 0, function() {
                  var fallbackCodes;
                  return (0, build_exports.__generator)(this, function(_a2) {
                    switch (_a2.label) {
                      case 0:
                        fallbackCodes = this.getFallbackStubKey();
                        if (!(fallbackCodes.id != keyboardId))
                          return [3, 2];
                        return [4, this.activateKeyboard(fallbackCodes.id, fallbackCodes.langId, true).catch(function() {
                        })];
                      case 1:
                        _a2.sent();
                        _a2.label = 2;
                      case 2:
                        return [2];
                    }
                  });
                });
              };
              (_e = this.engineConfig.alertHost) === null || _e === void 0 ? void 0 : _e.wait();
              message = (err_1 === null || err_1 === void 0 ? void 0 : err_1.message) || "Sorry, the " + keyboardId + " keyboard for " + languageCode + " is not currently available.";
              if (err_1 instanceof KeyboardScriptError) {
                console.error(err_1 || message);
              } else {
                console.warn(err_1 || message);
              }
              if (!this.engineConfig.alertHost)
                return [3, 4];
              (_f = this.engineConfig.alertHost) === null || _f === void 0 ? void 0 : _f.alert(message, fallback);
              return [3, 6];
            case 4:
              return [4, fallback()];
            case 5:
              _g.sent();
              _g.label = 6;
            case 6:
              throw err_1;
            case 7:
              return [2];
          }
        });
      });
    };
    ContextManager2.prototype._BlurKeyboardSettings = function(lastElem, PInternalName, PLgCode) {
      var _a;
      var keyboardID = this.activeKeyboard ? this.activeKeyboard.keyboard.id : "";
      var langCode = (_a = this.activeKeyboard) === null || _a === void 0 ? void 0 : _a.metadata.langId;
      if (PInternalName !== void 0 && PLgCode !== void 0) {
        keyboardID = PInternalName;
        langCode = PLgCode;
      }
      if (lastElem && lastElem._kmwAttachment.keyboard != null) {
        lastElem._kmwAttachment.keyboard = keyboardID;
        lastElem._kmwAttachment.languageCode = langCode;
      } else {
        this.globalKeyboard = this.activeKeyboard;
      }
    };
    ContextManager2.prototype._FocusKeyboardSettings = function(lastElem, blockGlobalChange) {
      var _a;
      var attachment = lastElem._kmwAttachment;
      var global2 = this.globalKeyboard;
      if (attachment.keyboard != null) {
        this.activateKeyboard(attachment.keyboard, attachment.languageCode, true);
      } else if (!blockGlobalChange && (global2 === null || global2 === void 0 ? void 0 : global2.metadata) != ((_a = this._activeKeyboard) === null || _a === void 0 ? void 0 : _a.metadata)) {
        this.activateKeyboard(global2 === null || global2 === void 0 ? void 0 : global2.metadata.id, global2 === null || global2 === void 0 ? void 0 : global2.metadata.langId, true);
      }
    };
    ContextManager2.prototype._CommonFocusHelper = function(outputTarget) {
      var _a;
      var focusAssistant = this.focusAssistant;
      var activeKeyboard = (_a = this.activeKeyboard) === null || _a === void 0 ? void 0 : _a.keyboard;
      if (!focusAssistant.restoringFocus) {
        outputTarget === null || outputTarget === void 0 ? void 0 : outputTarget.deadkeys().clear();
        activeKeyboard === null || activeKeyboard === void 0 ? void 0 : activeKeyboard.notify(0, outputTarget, 1);
      }
      if (!focusAssistant.restoringFocus && this.mostRecentTarget != outputTarget) {
        focusAssistant.maintainingFocus = false;
      }
      focusAssistant.restoringFocus = false;
      this.resetContext();
      return false;
    };
    ContextManager2.prototype.doChangeEvent = function(target) {
      if (target.changed) {
        var event_1 = new Event("change", { "bubbles": true, "cancelable": false });
        target.getElement().dispatchEvent(event_1);
      }
      target.changed = false;
    };
    ContextManager2.prototype.getSavedKeyboardRaw = function() {
      var cookie = new cookieSerializer_default("KeymanWeb_Keyboard");
      var v = cookie.load(decodeURIComponent);
      if (typeof v.current != "string") {
        return "Keyboard_us:en";
      } else if (v.current == "Keyboard_us:eng") {
        return "Keyboard_us:en";
      } else {
        return v.current;
      }
    };
    ContextManager2.prototype.getSavedKeyboard = function() {
      var cookieValue = this.getSavedKeyboardRaw();
      var stubs = this.keyboardCache.getStubList();
      var kd;
      for (var n = 0; n < stubs.length; n++) {
        kd = stubs[n]["KI"] + ":" + stubs[n]["KLC"];
        if (kd == cookieValue) {
          return kd;
        }
      }
      for (var n = 0; n < stubs.length; n++) {
        kd = stubs[n]["KI"] + ":" + stubs[n]["KLC"];
        if (kd == "Keyboard_us:en") {
          return kd;
        }
      }
      if (stubs.length > 0) {
        return stubs[0]["KI"] + ":" + stubs[0]["KLC"];
      }
      return "Keyboard_us:en";
    };
    ContextManager2.prototype.restoreSavedKeyboard = function(kbd) {
      var d = kbd;
      var t = d.split(":");
      if (t.length < 2) {
        t[1] = "";
      }
      var stub = this.keyboardCache.getStub(t[0], t[1]) || this.keyboardCache.defaultStub;
      if (stub) {
        this.activateKeyboard(t[0], t[1]);
      }
    };
    ContextManager2.prototype.shutdown = function() {
      this.page.shutdown();
      this.domEventTracker.shutdown();
    };
    return ContextManager2;
  }(ContextManagerBase);
  var contextManager_default = ContextManager;

  // ../../../build/app/browser/obj/defaultBrowserRules.js
  var DefaultBrowserRules = /* @__PURE__ */ function(_super) {
    (0, build_exports.__extends)(DefaultBrowserRules2, _super);
    function DefaultBrowserRules2(contextManager) {
      var _this = _super.call(this) || this;
      _this.contextManager = contextManager;
      return _this;
    }
    DefaultBrowserRules2.prototype.isCommand = function(Lkc) {
      var code = this.codeForEvent(Lkc);
      switch (code) {
        case codes_default.keyCodes["K_TAB"]:
        case codes_default.keyCodes["K_TABBACK"]:
        case codes_default.keyCodes["K_TABFWD"]:
          return true;
        default:
          return _super.prototype.isCommand.call(this, Lkc);
      }
    };
    DefaultBrowserRules2.prototype.applyCommand = function(Lkc, outputTarget) {
      var _this = this;
      var code = this.codeForEvent(Lkc);
      var moveToNext = function(back) {
        var _a;
        var contextManager = _this.contextManager;
        var activeElement = (_a = contextManager.activeTarget) === null || _a === void 0 ? void 0 : _a.getElement();
        var nextElement = contextManager.page.findNeighboringInput(activeElement, back);
        nextElement.focus();
      };
      switch (code) {
        case codes_default.keyCodes["K_TAB"]:
          moveToNext((Lkc.Lmodifiers & codes_default.modifierCodes["SHIFT"]) != 0);
          break;
        case codes_default.keyCodes["K_TABBACK"]:
          moveToNext(true);
          break;
        case codes_default.keyCodes["K_TABFWD"]:
          moveToNext(false);
          break;
      }
      _super.prototype.applyCommand.call(this, Lkc, outputTarget);
    };
    return DefaultBrowserRules2;
  }(defaultRules_default);
  var defaultBrowserRules_default = DefaultBrowserRules;

  // ../../../build/app/browser/obj/hardwareEventKeyboard.js
  function _GetEventKeyCode(e) {
    if (e.keyCode) {
      return e.keyCode;
    } else if (e.which) {
      return e.which;
    } else {
      return null;
    }
  }
  function preprocessKeyboardEvent(e, keyboardState, device) {
    if (e.cancelBubble === true) {
      return null;
    }
    var Lcode = _GetEventKeyCode(e);
    if (Lcode == null) {
      return null;
    }
    var prevModState = keyboardState.modStateFlags, curModState = 0;
    var ctrlEvent = false, altEvent = false;
    var keyCodes = codes_default.keyCodes;
    switch (Lcode) {
      case keyCodes["K_CTRL"]:
      case keyCodes["K_LCTRL"]:
      case keyCodes["K_RCTRL"]:
      case keyCodes["K_CONTROL"]:
      case keyCodes["K_LCONTROL"]:
      case keyCodes["K_RCONTROL"]:
        ctrlEvent = true;
        break;
      case keyCodes["K_LMENU"]:
      case keyCodes["K_RMENU"]:
      case keyCodes["K_ALT"]:
      case keyCodes["K_LALT"]:
      case keyCodes["K_RALT"]:
        altEvent = true;
        break;
    }
    curModState |= e.getModifierState("Shift") ? 16 : 0;
    var modifierCodes = codes_default.modifierCodes;
    if (e.getModifierState("Control")) {
      curModState |= e.location != 0 && ctrlEvent ? e.location == 1 ? modifierCodes["LCTRL"] : modifierCodes["RCTRL"] : prevModState & 3;
    }
    if (e.getModifierState("Alt")) {
      curModState |= e.location != 0 && altEvent ? e.location == 1 ? modifierCodes["LALT"] : modifierCodes["RALT"] : prevModState & 12;
    }
    var Lstates = 0;
    Lstates |= e.getModifierState("CapsLock") ? modifierCodes["CAPS"] : modifierCodes["NO_CAPS"];
    Lstates |= e.getModifierState("NumLock") ? modifierCodes["NUM_LOCK"] : modifierCodes["NO_NUM_LOCK"];
    Lstates |= e.getModifierState("ScrollLock") ? modifierCodes["SCROLL_LOCK"] : modifierCodes["NO_SCROLL_LOCK"];
    curModState |= Lstates;
    var LmodifierChange = keyboardState.modStateFlags != curModState;
    keyboardState.modStateFlags = curModState;
    var altGrMask = modifierCodes["RALT"] | modifierCodes["LCTRL"];
    if ((prevModState & altGrMask) == altGrMask && (curModState & altGrMask) != altGrMask) {
      curModState &= ~altGrMask;
    }
    if (curModState & modifierCodes["RALT"]) {
      curModState &= ~modifierCodes["LCTRL"];
    }
    var modifierBitmasks = codes_default.modifierBitmasks;
    var activeKeyboard = keyboardState.activeKeyboard;
    var Lmodifiers;
    if (activeKeyboard && activeKeyboard.isChiral) {
      Lmodifiers = curModState & modifierBitmasks.CHIRAL;
      if (activeKeyboard.emulatesAltGr && (Lmodifiers & modifierBitmasks["ALT_GR_SIM"]) == modifierBitmasks["ALT_GR_SIM"]) {
        Lmodifiers ^= modifierBitmasks["ALT_GR_SIM"];
        Lmodifiers |= modifierCodes["RALT"];
      }
    } else {
      Lmodifiers = curModState & 16 | (curModState & (modifierCodes["LCTRL"] | modifierCodes["RCTRL"]) ? 32 : 0) | (curModState & (modifierCodes["LALT"] | modifierCodes["RALT"]) ? 64 : 0);
    }
    Lmodifiers |= e.metaKey ? modifierCodes["META"] : 0;
    if (device.browser == deviceSpec_default.Browser.Firefox) {
      if (keyMapping_default.browserMap.FF["k" + Lcode]) {
        Lcode = keyMapping_default.browserMap.FF["k" + Lcode];
      }
    }
    var s = new keyEvent_default({
      device: device,
      kName: "",
      Lcode: Lcode,
      Lmodifiers: Lmodifiers,
      Lstates: Lstates,
      LmodifierChange: LmodifierChange,
      isSynthetic: false
    });
    if (activeKeyboard && activeKeyboard.isMnemonic) {
      s.setMnemonicCode(e.getModifierState("Shift"), e.getModifierState("CapsLock"));
    }
    var LisVirtualKeyCode = typeof e.charCode != "undefined" && e.charCode != null && (e.charCode == 0 || (Lmodifiers & 111) != 0);
    s.LisVirtualKey = LisVirtualKeyCode || e.type != "keypress";
    if (activeKeyboard && !activeKeyboard.isMnemonic) {
      var Lbase = keyMapping_default.languageMap[keyboardState.baseLayout];
      if (Lbase && Lbase["k" + s.Lcode]) {
        s.Lcode = Lbase["k" + s.Lcode];
      }
      if (!activeKeyboard.definesPositionalOrMnemonic && !(s.Lmodifiers & 96)) {
        s = new keyEvent_default({
          Lcode: keyMapping_default._USKeyCodeToCharCode(s),
          Lmodifiers: 0,
          LisVirtualKey: false,
          vkCode: s.Lcode,
          Lstates: s.Lstates,
          kName: "",
          device: device,
          isSynthetic: false
        });
      }
    }
    var processedEvent = new keyEvent_default(s);
    processedEvent.source = e;
    return processedEvent;
  }
  var HardwareEventKeyboard = /* @__PURE__ */ function(_super) {
    (0, build_exports.__extends)(HardwareEventKeyboard2, _super);
    function HardwareEventKeyboard2(hardDevice, processor, contextManager) {
      var _this = _super.call(this) || this;
      _this.domEventTracker = new DomEventTracker();
      _this.swallowKeypress = false;
      _this._KeyDown = function(e) {
        var _a;
        var activeKeyboard = _this.contextManager.activeKeyboard;
        var target = eventOutputTarget(e);
        if (!target || activeKeyboard == null) {
          return true;
        }
        var el = target.getElement();
        if (((_a = el === null || el === void 0 ? void 0 : el.className) === null || _a === void 0 ? void 0 : _a.indexOf("kmw-disabled")) >= 0) {
          return true;
        }
        return _this.keyDown(e);
      };
      _this._KeyPress = function(e) {
        var target = eventOutputTarget(e);
        if (!target || _this.activeKeyboard == null) {
          return true;
        }
        return _this.keyPress(e);
      };
      _this._KeyUp = function(e) {
        var target = eventOutputTarget(e);
        var Levent = preprocessKeyboardEvent(e, _this.processor, _this.hardDevice);
        if (Levent == null) {
          return true;
        }
        var inputEle = target.getElement();
        if (Levent.Lcode == 13) {
          var ignore = false;
          if (nestedInstanceOf(inputEle, "HTMLTextAreaElement")) {
            ignore = true;
          }
          if (!ignore) {
            if (inputEle instanceof inputEle.ownerDocument.defaultView.HTMLInputElement) {
              if (inputEle.form && (inputEle.type == "search" || inputEle.type == "submit")) {
                inputEle.form.submit();
              } else {
                var nextElement = _this.contextManager.page.findNeighboringInput(inputEle, false);
                nextElement.focus();
              }
            }
            return true;
          }
        }
        return _this.keyUp(e);
      };
      _this.hardDevice = hardDevice;
      _this.contextManager = contextManager;
      _this.processor = processor;
      var page = contextManager.page;
      var eventTracker = _this.domEventTracker;
      page.on("enabled", function(Pelem) {
        var target = outputTargetForElement(Pelem);
        if (!(target instanceof designIFrame_default)) {
          eventTracker.attachDOMEvent(Pelem, "keypress", _this._KeyPress);
          eventTracker.attachDOMEvent(Pelem, "keydown", _this._KeyDown);
          eventTracker.attachDOMEvent(Pelem, "keyup", _this._KeyUp);
        } else {
          var Lelem = target.getElement().contentDocument;
          eventTracker.attachDOMEvent(Lelem.body, "keydown", _this._KeyDown);
          eventTracker.attachDOMEvent(Lelem.body, "keypress", _this._KeyPress);
          eventTracker.attachDOMEvent(Lelem.body, "keyup", _this._KeyUp);
        }
      });
      page.off("disabled", function(Pelem) {
        var target = outputTargetForElement(Pelem);
        if (!(target instanceof designIFrame_default)) {
          eventTracker.detachDOMEvent(Pelem, "keypress", _this._KeyPress);
          eventTracker.detachDOMEvent(Pelem, "keydown", _this._KeyDown);
          eventTracker.detachDOMEvent(Pelem, "keyup", _this._KeyUp);
        } else {
          var Lelem = target.getElement().contentDocument;
          eventTracker.detachDOMEvent(Lelem.body, "keydown", _this._KeyDown);
          eventTracker.detachDOMEvent(Lelem.body, "keypress", _this._KeyPress);
          eventTracker.detachDOMEvent(Lelem.body, "keyup", _this._KeyUp);
        }
      });
      return _this;
    }
    Object.defineProperty(HardwareEventKeyboard2.prototype, "activeKeyboard", {
      get: function() {
        return this.contextManager.activeKeyboard.keyboard;
      },
      enumerable: false,
      configurable: true
    });
    HardwareEventKeyboard2.prototype.keyDown = function(e) {
      var _this = this;
      this.swallowKeypress = false;
      var Levent = preprocessKeyboardEvent(e, this.processor, this.hardDevice);
      if (Levent == null) {
        return true;
      }
      var resultCapture = {
        LeventMatched: false
      };
      this.emit("keyevent", Levent, function(ruleBehavior, error) {
        resultCapture.LeventMatched = ruleBehavior && !ruleBehavior.triggerKeyDefault;
        if (resultCapture.LeventMatched) {
          if (e && e.preventDefault) {
            e.preventDefault();
            e.stopPropagation();
          }
          _this.swallowKeypress = !!Levent.Lcode;
          if (Levent.Lcode == 8) {
            _this.swallowKeypress = false;
          }
        } else {
          _this.swallowKeypress = false;
        }
      });
      return !resultCapture.LeventMatched;
    };
    HardwareEventKeyboard2.prototype.keyUp = function(e) {
      var Levent = preprocessKeyboardEvent(e, this.processor, this.hardDevice);
      if (Levent == null) {
        return true;
      }
      var outputTarget = eventOutputTarget(e);
      return this.processor.doModifierPress(Levent, outputTarget, false);
    };
    HardwareEventKeyboard2.prototype.keyPress = function(e) {
      var Levent = preprocessKeyboardEvent(e, this.processor, this.hardDevice);
      if (Levent == null || Levent.LisVirtualKey) {
        return true;
      }
      if (!this.activeKeyboard.isMnemonic) {
        if (!this.swallowKeypress) {
          return true;
        }
        if (Levent.Lcode < 32 || this.hardDevice.browser == deviceSpec_default.Browser.Safari && (Levent.Lcode > 63232 && Levent.Lcode < 63744)) {
          return true;
        }
        return false;
      }
      var resultCapture = {};
      if (!this.swallowKeypress) {
        this.emit("keyevent", Levent, function(result, error) {
          resultCapture.preventDefaultKeystroke = !!result;
        });
      }
      if (this.swallowKeypress || resultCapture.preventDefaultKeystroke) {
        this.swallowKeypress = false;
        if (e && e.preventDefault) {
          e.preventDefault();
          e.stopPropagation();
        }
        return false;
      }
      this.swallowKeypress = false;
      return true;
    };
    HardwareEventKeyboard2.prototype.shutdown = function() {
      this.domEventTracker.shutdown();
    };
    return HardwareEventKeyboard2;
  }(hardKeyboard_default);
  var hardwareEventKeyboard_default = HardwareEventKeyboard;

  // ../../../build/app/browser/obj/utils/rotationProcessor.js
  var RotationState = /* @__PURE__ */ function() {
    function RotationState2() {
      this.innerWidth = window.innerWidth;
      this.innerHeight = window.innerHeight;
    }
    RotationState2.prototype.equals = function(other) {
      return this.innerWidth == other.innerWidth && this.innerHeight == other.innerHeight;
    };
    return RotationState2;
  }();
  var RotationProcessor = function() {
    function RotationProcessor2(keyman) {
      this.idlePermutationCounter = RotationProcessor2.IDLE_PERMUTATION_CAP;
      this.keyman = keyman;
    }
    RotationProcessor2.prototype.resolve = function() {
      var _a;
      var osk = this.keyman.osk;
      (_a = this.keyman.touchLanguageMenu) === null || _a === void 0 ? void 0 : _a.hide();
      this.keyman.touchLanguageMenu = null;
      osk.setNeedsLayout();
      if (this.oskVisible) {
        osk.present();
      }
      this.isActive = false;
      if (this.updateTimer) {
        window.clearInterval(this.updateTimer);
        this.rotState = null;
      }
    };
    RotationProcessor2.prototype.initNewRotation = function() {
      this.oskVisible = this.keyman.osk.isVisible();
      this.keyman.osk.hideNow();
      this.isActive = true;
    };
    RotationProcessor2.prototype.init = function() {
      var _this = this;
      var os = this.keyman.config.hostDevice.OS;
      var util = this.keyman.util;
      if (os == "ios") {
        util.attachDOMEvent(window, "orientationchange", function() {
          _this.iOSEventHandler();
          return false;
        });
        util.attachDOMEvent(window, "resize", function() {
          _this.iOSEventHandler();
          return false;
        });
      } else if (os == "android") {
        if ("onmozorientationchange" in screen) {
          util.attachDOMEvent(screen, "mozorientationchange", function() {
            _this.initNewRotation();
            return false;
          });
        } else {
          util.attachDOMEvent(window, "orientationchange", function() {
            _this.initNewRotation();
            return false;
          });
        }
        util.attachDOMEvent(window, "resize", function() {
          _this.resolve();
          return false;
        });
      }
    };
    RotationProcessor2.prototype.iOSEventHandler = function() {
      if (!this.isActive) {
        this.initNewRotation();
        this.rotState = new RotationState();
        this.updateTimer = window.setInterval(this.iOSEventUpdate.bind(this), RotationProcessor2.UPDATE_INTERVAL);
      }
      this.idlePermutationCounter = 0;
    };
    RotationProcessor2.prototype.iOSEventUpdate = function() {
      var newState = new RotationState();
      if (this.rotState.equals(newState)) {
        if (++this.idlePermutationCounter == RotationProcessor2.IDLE_PERMUTATION_CAP) {
          this.resolve();
        }
      } else {
        this.rotState = newState;
        this.idlePermutationCounter = 0;
      }
    };
    RotationProcessor2.IDLE_PERMUTATION_CAP = 15;
    RotationProcessor2.UPDATE_INTERVAL = 20;
    return RotationProcessor2;
  }();

  // ../../../build/app/browser/obj/context/pageIntegrationHandlers.js
  var PageIntegrationHandlers = /* @__PURE__ */ function() {
    function PageIntegrationHandlers2(window2, engine) {
      var _this = this;
      this.domEventTracker = new DomEventTracker();
      this.suppressFocusCheck = function(e) {
        if (_this.focusAssistant.isTargetForcingScroll()) {
          e.stopPropagation();
          e.cancelBubble = true;
        }
        return true;
      };
      this.pageFocusHandler = function() {
        var _a;
        if (!_this.focusAssistant.maintainingFocus && ((_a = _this.engine.osk) === null || _a === void 0 ? void 0 : _a.vkbd)) {
          _this.engine.contextManager.deactivateCurrentTarget();
          _this.engine.contextManager.resetContext();
        }
        return false;
      };
      this.touchStartActivationHandler = function(e) {
        var osk = _this.engine.osk;
        if (!osk) {
          return false;
        }
        var device = _this.engine.config.hostDevice;
        _this.deactivateOnRelease = true;
        _this.touchY = e.touches[0].screenY;
        _this.deactivateOnScroll = false;
        if (device.OS == "android" && device.browser == "chrome") {
          if (typeof osk._Box == "undefined")
            return false;
          if (typeof osk._Box.style == "undefined")
            return false;
          var p = e.target.parentElement;
          if (typeof p != "undefined" && p != null) {
            if (p.className.indexOf("kmw-key-") >= 0)
              return false;
            if (typeof p.parentElement != "undefined" && p.parentElement != null) {
              p = p.parentElement;
              if (p.className.indexOf("kmw-key-") >= 0)
                return false;
            }
          }
          _this.deactivateOnScroll = true;
        }
        return false;
      };
      this.touchMoveActivationHandler = function(e) {
        if (_this.deactivateOnScroll) {
          _this.focusAssistant.focusing = false;
          _this.engine.contextManager.deactivateCurrentTarget();
        }
        var y = e.touches[0].screenY;
        var y0 = _this.touchY;
        if (y - y0 > 5 || y0 - y < 5) {
          _this.deactivateOnRelease = false;
        }
        return false;
      };
      this.touchEndActivationHandler = function(e) {
        if (_this.deactivateOnRelease && !_this.engine.touchLanguageMenu && !_this.focusAssistant.focusing) {
          _this.engine.contextManager.deactivateCurrentTarget();
        }
        _this.deactivateOnRelease = false;
        return false;
      };
      this._WindowLoad = function() {
        document.body.scrollTop = 0;
        if (typeof document.documentElement != "undefined") {
          document.documentElement.scrollTop = 0;
        }
      };
      this._WindowUnload = function() {
        _this.engine.shutdown();
      };
      this.window = window2;
      this.engine = engine;
      this.attachHandlers();
      if (engine.config.hostDevice.touchable) {
        this.buildPageTrailer();
        this.rotationProcessor = new RotationProcessor(this.engine);
        this.rotationProcessor.init();
      }
    }
    PageIntegrationHandlers2.prototype.buildPageTrailer = function() {
      var dTrailer = this.mobilePageTrailer = document.createElement("div");
      var ds = dTrailer.style;
      ds.width = "100%";
      ds.height = screen.width / 2 + "px";
      document.body.appendChild(dTrailer);
    };
    Object.defineProperty(PageIntegrationHandlers2.prototype, "focusAssistant", {
      get: function() {
        return this.engine.contextManager.focusAssistant;
      },
      enumerable: false,
      configurable: true
    });
    PageIntegrationHandlers2.prototype.attachHandlers = function() {
      var eventTracker = this.domEventTracker;
      var device = this.engine.config.hostDevice;
      var docBody = this.window.document.body;
      eventTracker.attachDOMEvent(this.window, "focus", this.pageFocusHandler, false);
      eventTracker.attachDOMEvent(this.window, "blur", this.pageFocusHandler, false);
      eventTracker.attachDOMEvent(docBody, "focus", this.suppressFocusCheck, true);
      eventTracker.attachDOMEvent(docBody, "blur", this.suppressFocusCheck, true);
      if (device.touchable) {
        eventTracker.attachDOMEvent(docBody, "touchstart", this.touchStartActivationHandler, false);
        eventTracker.attachDOMEvent(docBody, "touchmove", this.touchMoveActivationHandler, false);
        eventTracker.attachDOMEvent(docBody, "touchend", this.touchEndActivationHandler, false);
      }
      eventTracker.attachDOMEvent(window, "load", this._WindowLoad, false);
      eventTracker.attachDOMEvent(window, "unload", this._WindowUnload, false);
      eventTracker.attachDOMEvent(document, "keyup", this.engine.hotkeyManager._Process, false);
    };
    PageIntegrationHandlers2.prototype.shutdown = function() {
      var _a;
      var eventTracker = this.domEventTracker;
      var device = this.engine.config.hostDevice;
      var docBody = this.window.document.body;
      eventTracker.detachDOMEvent(this.window, "focus", this.pageFocusHandler, false);
      eventTracker.detachDOMEvent(this.window, "blur", this.pageFocusHandler, false);
      eventTracker.detachDOMEvent(docBody, "focus", this.suppressFocusCheck, true);
      eventTracker.detachDOMEvent(docBody, "blur", this.suppressFocusCheck, true);
      if (device.touchable) {
        eventTracker.detachDOMEvent(docBody, "touchstart", this.touchStartActivationHandler, false);
        eventTracker.detachDOMEvent(docBody, "touchmove", this.touchMoveActivationHandler, false);
        eventTracker.detachDOMEvent(docBody, "touchend", this.touchEndActivationHandler, false);
        (_a = this.mobilePageTrailer) === null || _a === void 0 ? void 0 : _a.parentElement.removeChild(this.mobilePageTrailer);
      }
      eventTracker.detachDOMEvent(window, "load", this._WindowLoad, false);
      eventTracker.detachDOMEvent(window, "unload", this._WindowUnload, false);
      eventTracker.detachDOMEvent(document, "keyup", this.engine.hotkeyManager._Process, false);
    };
    return PageIntegrationHandlers2;
  }();

  // ../../../build/app/browser/obj/utils/createElement.js
  function _CreateElement(nodeName) {
    var e = document.createElement(nodeName);
    e.style.userSelect = "none";
    e.style.MozUserSelect = "none";
    e.style.KhtmlUserSelect = "none";
    e.style.UserSelect = "none";
    e.style.WebkitUserSelect = "none";
    return e;
  }

  // ../../../build/app/browser/obj/utils/getStyleValue.js
  function getStyleValue(e, s) {
    try {
      if (e && typeof window.getComputedStyle != "undefined") {
        return window.getComputedStyle(e, "").getPropertyValue(s);
      }
    } catch (ex) {
    }
    return "";
  }

  // ../../../build/app/browser/obj/utils/getViewportScale.js
  function getViewportScale2() {
    try {
      if (this.device.formFactor == "desktop") {
        return 1;
      }
      var viewportWidth = document.documentElement.clientWidth;
      if (screen.width > viewportWidth) {
        return 1;
      }
      var screenWidth = screen.width;
      if (this.landscapeView()) {
        if (screen.width < screen.height) {
          screenWidth = screen.height;
        }
      } else {
        if (screen.width > screen.height) {
          screenWidth = screen.height;
        }
      }
      return Math.round(100 * screenWidth / viewportWidth) / 100;
    } catch (ex) {
      return 1;
    }
  }

  // ../../../build/app/browser/obj/languageMenu.js
  var LanguageMenu = /* @__PURE__ */ function() {
    function LanguageMenu2(keyman) {
      this.keyman = keyman;
      this.scrolling = false;
      this.shim = this.constructShim();
    }
    LanguageMenu2.prototype.constructShim = function() {
      var _this = this;
      var languageMenu = this;
      var shim = _CreateElement("div");
      var osk = this.keyman.osk;
      shim.id = "kmw-language-menu-background";
      shim.addEventListener("touchstart", function(e) {
        e.preventDefault();
        languageMenu.hide();
        if (e.touches.length > 2) {
          var sX = e.touches[1].pageX, sY = e.touches[1].pageY;
          var spaceBar = osk.vkbd.spaceBar;
          if (sX > spaceBar.offsetLeft && sX < spaceBar.offsetLeft + spaceBar.offsetWidth && sY > spaceBar.offsetTop && sY < spaceBar.offsetTop + spaceBar.offsetHeight) {
            _this.keyman.osk.emit("showbuild");
          }
        }
      }, false);
      return shim;
    };
    LanguageMenu2.prototype.show = function() {
      var device = this.keyman.config.hostDevice;
      var kbdList = this.keyman.keyboardRequisitioner.cache.getStubList();
      var nKbds = kbdList.length;
      if (nKbds < 1) {
        return;
      }
      var menu = this.lgList = _CreateElement("div");
      this.lgList.id = "kmw-language-menu";
      var languageMenu = this;
      document.body.appendChild(this.shim);
      var m2 = _CreateElement("div"), s2 = m2.style, m3 = _CreateElement("div"), s3 = m3.style;
      m2.id = "kmw-menu-scroll-container";
      m3.id = "kmw-menu-scroller";
      if ("WebkitOverflowScrolling" in s2) {
        s2.WebkitOverflowScrolling = "touch";
      }
      m2.appendChild(m3);
      menu.appendChild(m2);
      var i, x, mx = _CreateElement("div");
      mx.id = "kmw-menu-index";
      for (i = 1; i <= 26; i++) {
        x = _CreateElement("p");
        x.innerHTML = String.fromCharCode(i + 64);
        mx.appendChild(x);
      }
      mx.addEventListener("touchstart", function(e) {
        languageMenu.scrollToLanguage(e, m2, m3);
      }, false);
      mx.addEventListener("touchend", function(e) {
        e.stopPropagation();
      }, false);
      menu.appendChild(mx);
      menu.addEventListener("scroll", function(e) {
        languageMenu.scrolling = true;
      }, false);
      m2.addEventListener("scroll", function(e) {
        if (m2.scrollTop < 1) {
          m2.scrollTop = 1;
        }
        if (m2.scrollTop > m2.scrollHeight - m2.offsetHeight - 1) {
          m2.scrollTop = m2.scrollHeight - m2.offsetHeight - 1;
        }
      }, false);
      this.activeLgNo = this.addLanguages(m3, kbdList);
      var nLgs = m3.childNodes.length - 1;
      this.lgList.style.visibility = "hidden";
      document.body.appendChild(this.lgList);
      if (device.OS == "android" && "devicePixelRatio" in window) {
        this.lgList.style.fontSize = 2 / window.devicePixelRatio + "em";
      }
      if (device.OS == "android" && device.formFactor == "tablet" && "devicePixelRatio" in window) {
        var w = parseInt(getStyleValue(menu, "width"), 10), ms = menu.style;
        if (!isNaN(w)) {
          ms.width = ms.maxWidth = 2 * w / window.devicePixelRatio + "px";
        }
        w = parseInt(getStyleValue(m2, "width"), 10);
        ms = m2.style;
        if (!isNaN(w)) {
          ms.width = ms.maxWidth = 2 * w / window.devicePixelRatio + "px";
        }
        w = parseInt(getStyleValue(m3, "width"), 10);
        ms = m3.style;
        if (!isNaN(w)) {
          ms.width = ms.maxWidth = 2 * w / window.devicePixelRatio + "px";
        }
      }
      this.adjust(0);
      var dy = mx.childNodes[1].offsetTop - mx.childNodes[0].offsetTop, lineHeight = Math.floor(menu.offsetHeight / 26), scale = Math.round(100 * lineHeight / dy) / 100, factor = scale > 0.6 ? 1 : 2;
      if (scale > 1.25) {
        scale = 1.25;
      }
      for (i = 0; i < 26; i++) {
        var qs = mx.childNodes[i].style;
        if (factor == 2 && i % 2 == 1) {
          qs.display = "none";
        } else {
          qs.fontSize = scale * factor + "em";
          qs.lineHeight = lineHeight * factor + "px";
        }
      }
      var menuWidth = m2.offsetWidth;
      if (m2.scrollHeight > m2.offsetHeight + 3) {
        menuWidth = menuWidth + mx.offsetWidth;
      } else {
        mx.style.display = "none";
      }
      menu.style.width = menuWidth + "px";
      this.lgList.style.visibility = "";
      this.scrollToIndex(this.activeLgNo, m2, m3);
    };
    LanguageMenu2.prototype.adjust = function(nKbds) {
      var osk = this.keyman.osk;
      var device = this.keyman.config.hostDevice;
      var menu = this.lgList, m2 = menu.firstChild, m3 = m2.firstChild, barWidth = 0, s = menu.style, mx = menu.childNodes[1], maxHeight = window.innerHeight - osk.vkbd.lgKey.offsetHeight - 16, nItems = m3.childNodes.length + nKbds - 1, itemHeight = m3.firstChild.firstChild.offsetHeight, menuHeight = nItems * itemHeight;
      if (device.OS == "ios") {
        if (device.formFactor == "phone") {
          barWidth = landscapeView() ? 36 : 0;
          maxHeight = (window.innerHeight - barWidth - 16) * getViewportScale2();
        } else if (device.formFactor == "tablet") {
          barWidth = landscapeView() ? 16 : 0;
          maxHeight = maxHeight - barWidth;
        }
      }
      s.left = getAbsoluteX(osk.vkbd.lgKey) + "px";
      if (menuHeight > maxHeight) {
        menuHeight = maxHeight;
      }
      s.height = menuHeight + "px";
      s.bottom = "0px";
      mx.style.height = m2.style.height = s.height;
    };
    LanguageMenu2.prototype.scrollToLanguage = function(e, m2, menu) {
      e.stopImmediatePropagation();
      e.stopPropagation();
      e.preventDefault();
      var target = e.touches[0].target;
      if (target.nodeName != "P") {
        return;
      }
      var i, t, initial = target.innerHTML.charCodeAt(0), nn = menu.childNodes;
      try {
        for (i = 0; i < nn.length - 1; i++) {
          t = nn[i].firstChild.innerHTML.toUpperCase().charCodeAt(0);
          if (t >= initial) {
            break;
          }
        }
      } catch (ex) {
      }
      this.scrollToIndex(i, m2, menu);
    };
    LanguageMenu2.prototype.scrollToIndex = function(index, m2, menu) {
      var top;
      var SCROLL_ITEM_BUFFER = 0.5;
      try {
        top = menu.firstChild.getBoundingClientRect().height * (index - SCROLL_ITEM_BUFFER) + 1;
        m2.scrollTop = top;
      } catch (ex) {
        top = 0;
      }
      try {
        if (m2.scrollTop < 0) {
          m2.scrollTop = 0;
        }
        if (m2.scrollTop > m2.scrollHeight - m2.offsetHeight - 1) {
          m2.scrollTop = m2.scrollHeight - m2.offsetHeight - 1;
        }
      } catch (ex) {
      }
    };
    LanguageMenu2.prototype.addLanguages = function(menu, kbdList) {
      var _a;
      var nStubs = kbdList.length;
      var device = this.keyman.config.hostDevice;
      var k, n, lg, langs = [];
      for (n = 0; n < nStubs; n++) {
        lg = kbdList[n]["KL"];
        if (langs.indexOf(lg) == -1) {
          langs.push(lg);
        }
      }
      langs.sort();
      var scale = Math.round(100 / getViewportScale2()) / 100;
      var dx, lgBar, i, kb, activeLanguageIndex = -1;
      var _loop_1 = function() {
        dx = _CreateElement("div");
        dx.className = "kbd-list-closed";
        lgBar = _CreateElement("p");
        lgBar.kList = [];
        for (n = 0; n < nStubs; n++) {
          if (kbdList[n]["KL"] == langs[k]) {
            lgBar.kList.push(kbdList[n]);
          }
        }
        if (device.OS == "ios") {
          lgBar.style.fontSize = scale + "em";
        }
        dx.appendChild(lgBar);
        menu.appendChild(dx);
        if (langs[k] == ((_a = this_1.keyman.contextManager.activeKeyboard) === null || _a === void 0 ? void 0 : _a.metadata.langName)) {
          activeLanguageIndex = k;
        }
        var languageMenu = this_1;
        if (lgBar.kList.length > 1) {
          lgBar.className = "kbd-list";
          lgBar.innerHTML = langs[k] + "...";
          lgBar.scrolled = false;
          lgBar.ontouchend = function(e) {
            e.stopPropagation();
            if (e.target.scrolled)
              e.target.scrolled = false;
            else
              this.parentNode.className = this.parentNode.className == "kbd-list-closed" ? "kbd-list-open" : "kbd-list-closed";
            languageMenu.adjust(this.parentNode.className == "kbd-list-closed" ? 0 : this.kList.length);
          };
          lgBar.addEventListener("touchstart", function(e) {
            e.stopPropagation();
          }, false);
          lgBar.addEventListener("touchmove", function(e) {
            e.target.scrolled = true;
            e.stopPropagation();
          }, false);
          for (i = 0; i < lgBar.kList.length; i++) {
            kb = _CreateElement("p");
            kb.className = "kbd-list-entry";
            if (device.OS == "ios") {
              kb.style.fontSize = scale + "em";
            }
            this_1.addKeyboard(lgBar.kList[i], kb, false);
            dx.appendChild(kb);
          }
        } else {
          lgBar.innerHTML = langs[k];
          lgBar.className = "kbd-single-entry";
          this_1.addKeyboard(lgBar.kList[0], lgBar, true);
        }
        if (k == activeLanguageIndex) {
          lgBar.className = lgBar.className + " current";
        }
      };
      var this_1 = this;
      for (k = 0; k < langs.length; k++) {
        _loop_1();
      }
      var padLast = _CreateElement("div");
      padLast.id = "kmw-menu-footer";
      var cancelTouch = function(e) {
        if (e.cancelable) {
          e.preventDefault();
        }
        e.stopPropagation();
      };
      padLast.addEventListener("touchstart", cancelTouch, false);
      padLast.addEventListener("touchmove", cancelTouch, false);
      padLast.addEventListener("touchend", cancelTouch, false);
      menu.appendChild(padLast);
      return activeLanguageIndex;
    };
    LanguageMenu2.prototype.addKeyboard = function(kbd, kb, unique) {
      var _this = this;
      kb.kn = kbd["KI"];
      kb.kc = kbd["KLC"];
      kb.innerHTML = unique ? kbd["KL"] : kbd["KN"].replace(" Keyboard", "");
      var languageMenu = this;
      var lockBodyScroll = function() {
        if (_this.originalBodyStyle) {
          console.error("Unexpected state:  `originalBodyStyle` was not cleared by a previous `unlockBodyScroll()` call");
          return;
        }
        _this.originalBodyStyle = {};
        var obs = _this.originalBodyStyle;
        var dbs = document.body.style;
        obs.overflowY = dbs.overflowY;
        obs.height = dbs.height;
        dbs.overflowY = "hidden";
        dbs.height = "100%";
        return true;
      };
      var unlockBodyScroll = function() {
        if (!_this.originalBodyStyle) {
          console.error("Unexpected state:  `originalBodyStyle` is unset; cannot restore original body style");
          return;
        }
        var obs = _this.originalBodyStyle;
        var dbs = document.body.style;
        dbs.overflowY = obs.overflowY;
        dbs.height = obs.height;
        _this.originalBodyStyle = null;
      };
      var touchStart = function(e) {
        e.stopPropagation();
        if (this.className.indexOf("selected") <= 0) {
          this.className = this.className + " selected";
        }
        languageMenu.scrolling = false;
        languageMenu.y0 = e.touches[0].pageY;
        lockBodyScroll();
      };
      var touchMove = function(e) {
        e.stopImmediatePropagation();
        var scroller = languageMenu.lgList.childNodes[0], yMax = scroller.scrollHeight - scroller.offsetHeight, y, dy;
        if ("undefined" != typeof e.pageY) {
          y = e.pageY;
        } else if ("undefined" != typeof e.touches) {
          y = e.touches[0].pageY;
        } else {
          return;
        }
        dy = y - languageMenu.y0;
        if (dy < 0) {
          if (scroller.scrollTop >= yMax - 1) {
            languageMenu.y0 = y;
          }
        } else if (dy > 0) {
          if (scroller.scrollTop < 2) {
            languageMenu.y0 = y;
          }
        } else {
          return;
        }
        if (dy < -5 || dy > 5) {
          languageMenu.scrolling = true;
          this.className = this.className.replace(/\s*selected/, "");
          languageMenu.y0 = y;
        }
        return true;
      };
      var touchEnd = function(e) {
        if (typeof e.stopImmediatePropagation != "undefined") {
          e.stopImmediatePropagation();
        } else {
          e.stopPropagation();
        }
        if (languageMenu.scrolling) {
          this.className = this.className.replace(/\s*selected/, "");
        } else {
          languageMenu.keyman.contextManager.focusAssistant.setFocusTimer();
          languageMenu.lgList.style.display = "none";
          languageMenu.keyman.contextManager.activateKeyboard(this.kn, this.kc, true);
          languageMenu.keyman.contextManager.restoreLastActiveTarget();
          languageMenu.hide();
        }
        unlockBodyScroll();
        return true;
      };
      var touchCancel = function(e) {
        unlockBodyScroll();
      };
      kb.onmspointerdown = touchStart;
      kb.addEventListener("touchstart", touchStart, false);
      kb.onmspointermove = touchMove;
      kb.addEventListener("touchmove", touchMove, false);
      kb.onmspointerout = touchEnd;
      kb.addEventListener("touchend", touchEnd, false);
      kb.addEventListener("touchcancel", touchCancel, false);
    };
    LanguageMenu2.prototype.hide = function() {
      var _this = this;
      var osk = this.keyman.osk;
      if (this.lgList) {
        osk.vkbd.highlightKey(osk.vkbd.lgKey, false);
        this.lgList.style.visibility = "hidden";
        window.setTimeout(function() {
          if (_this.shim.parentElement) {
            document.body.removeChild(_this.shim);
            document.body.removeChild(_this.lgList);
          }
        }, 500);
      }
      this.keyman.touchLanguageMenu = null;
    };
    return LanguageMenu2;
  }();

  // ../../../build/app/browser/obj/oskConfiguration.js
  function setupOskListeners(engine, osk, contextManager) {
    var _this = this;
    var focusAssistant = contextManager.focusAssistant;
    osk.on("globekey", function(key, on) {
      if (on) {
        if (osk.hostDevice.touchable) {
          engine.touchLanguageMenu = new LanguageMenu(engine);
          engine.touchLanguageMenu.show();
        }
      }
      if (osk.vkbd) {
        osk.vkbd.highlightKey(key, false);
      }
    });
    osk.on("hiderequested", function(key) {
      if (osk) {
        osk.startHide(true);
        contextManager.forgetActiveTarget();
      }
    });
    osk.addEventListener("hide", function(params) {
      var _a;
      if (params === null || params === void 0 ? void 0 : params.HiddenByUser) {
        (_a = contextManager.activeTarget) === null || _a === void 0 ? void 0 : _a.focus();
      }
    });
    osk.on("showbuild", function() {
      var _a;
      (_a = engine.config.alertHost) === null || _a === void 0 ? void 0 : _a.alert("KeymanWeb Version " + KEYMAN_VERSION.VERSION + '<br /><br /><span style="font-size:0.8em">Copyright &copy; 2007-2023 SIL International</span>');
    });
    osk.on("dragmove", function(promise) {
      return (0, build_exports.__awaiter)(_this, void 0, void 0, function() {
        return (0, build_exports.__generator)(this, function(_a) {
          switch (_a.label) {
            case 0:
              focusAssistant.restoringFocus = true;
              return [4, promise];
            case 1:
              _a.sent();
              contextManager.restoreLastActiveTarget();
              focusAssistant.restoringFocus = false;
              focusAssistant.setMaintainingFocus(false);
              return [2];
          }
        });
      });
    });
    osk.on("resizemove", function(promise) {
      return (0, build_exports.__awaiter)(_this, void 0, void 0, function() {
        return (0, build_exports.__generator)(this, function(_a) {
          switch (_a.label) {
            case 0:
              focusAssistant.restoringFocus = true;
              return [4, promise];
            case 1:
              _a.sent();
              contextManager.restoreLastActiveTarget();
              focusAssistant.restoringFocus = false;
              focusAssistant.setMaintainingFocus(false);
              return [2];
          }
        });
      });
    });
    osk.on("pointerinteraction", function(promise) {
      return (0, build_exports.__awaiter)(_this, void 0, void 0, function() {
        return (0, build_exports.__generator)(this, function(_a) {
          switch (_a.label) {
            case 0:
              focusAssistant.setMaintainingFocus(true);
              return [4, promise];
            case 1:
              _a.sent();
              focusAssistant.setMaintainingFocus(false);
              return [2];
          }
        });
      });
    });
  }

  // ../../../build/app/browser/obj/utilApiEndpoint.js
  function createUnselectableElement2(nodeName) {
    var e = document.createElement(nodeName);
    e.style.userSelect = "none";
    return e;
  }
  var UtilApiEndpoint = /* @__PURE__ */ function() {
    function UtilApiEndpoint2(config) {
      this.getAbsoluteX = getAbsoluteX;
      this.getAbsoluteY = getAbsoluteY;
      this._GetAbsoluteX = getAbsoluteX;
      this._GetAbsoluteY = getAbsoluteY;
      this._GetAbsolute = this.getAbsolute;
      this.toNzString = this.nzString;
      this.createElement = createUnselectableElement2;
      this.getStyleValue = getStyleValue;
      this.config = config;
      this.stylesheetManager = new StylesheetManager(document.body, config.applyCacheBusting);
      this.domEventTracker = new DomEventTracker();
    }
    UtilApiEndpoint2.prototype.isTouchDevice = function() {
      return this.config.hostDevice.touchable;
    };
    UtilApiEndpoint2.prototype.getAbsolute = function(elem) {
      return {
        x: getAbsoluteX(elem),
        y: getAbsoluteY(elem)
      };
    };
    UtilApiEndpoint2.prototype.getOption = function(optionName, dflt) {
      if (optionName in this.config.paths) {
        return this.config.paths[optionName];
      } else if (optionName in this.config.options) {
        return this.config.options[optionName];
      } else if (arguments.length > 1) {
        return dflt;
      } else {
        return "";
      }
    };
    UtilApiEndpoint2.prototype.setOption = function(optionName, value) {
      switch (optionName) {
        case "attachType":
          break;
        case "ui":
          break;
        case "useAlerts":
          this.config.signalUser = value ? new AlertHost() : null;
          break;
        case "setActiveOnRegister":
          this.config.activateFirstKeyboard = !!value;
          break;
        case "spacebarText":
          this.config.spacebarText = value;
          break;
        default:
          throw new Error("Path-related options may not be changed after the engine has initialized.");
      }
    };
    UtilApiEndpoint2.prototype.loadCookie = function(cn) {
      var cookie = new cookieSerializer_default(cn);
      return cookie.load(decodeURIComponent);
    };
    UtilApiEndpoint2.prototype.saveCookie = function(cn, cv) {
      var cookie = new cookieSerializer_default(cn);
      cookie.save(cv, encodeURIComponent);
    };
    UtilApiEndpoint2.prototype.addStyleSheet = function(s) {
      var styleSheet = createStyleSheet(s);
      this.stylesheetManager.linkStylesheet(styleSheet);
      return styleSheet;
    };
    UtilApiEndpoint2.prototype.removeStyleSheet = function(s) {
      return this.stylesheetManager.unlink(s);
    };
    UtilApiEndpoint2.prototype.linkStyleSheet = function(s) {
      this.stylesheetManager.linkExternalSheet(s);
    };
    UtilApiEndpoint2.prototype.getLanguageCodes = function(lgCode) {
      if (lgCode.indexOf("-") == -1) {
        return [lgCode];
      } else {
        return lgCode.split("-");
      }
    };
    UtilApiEndpoint2.prototype.attachDOMEvent = function(Pelem, Peventname, Phandler, PuseCapture) {
      this.domEventTracker.attachDOMEvent(Pelem, Peventname, Phandler, PuseCapture);
    };
    UtilApiEndpoint2.prototype.detachDOMEvent = function(Pelem, Peventname, Phandler, PuseCapture) {
      this.domEventTracker.detachDOMEvent(Pelem, Peventname, Phandler, PuseCapture);
    };
    Object.defineProperty(UtilApiEndpoint2.prototype, "alertHost", {
      get: function() {
        if (this.config.alertHost) {
          return this.config.alertHost;
        } else if (!this._alertHost) {
          this._alertHost = new AlertHost();
        }
        return this._alertHost;
      },
      enumerable: false,
      configurable: true
    });
    UtilApiEndpoint2.prototype.alert = function(s, fn) {
      this.alertHost.alert(s, fn);
    };
    UtilApiEndpoint2.prototype.nzString = function(item, dflt) {
      var dfltValue = "";
      if (arguments.length > 1) {
        dfltValue = dflt;
      }
      if (typeof item == "undefined") {
        return dfltValue;
      }
      if (item == null) {
        return dfltValue;
      }
      if (item == 0 || item == "") {
        return dfltValue;
      }
      return "" + item;
    };
    UtilApiEndpoint2.prototype.toNumber = function(s, dflt) {
      var x = parseInt(s, 10);
      return isNaN(x) ? dflt : x;
    };
    UtilApiEndpoint2.prototype.toFloat = function(s, dflt) {
      var x = parseFloat(s);
      return isNaN(x) ? dflt : x;
    };
    UtilApiEndpoint2.prototype.rgba = function(s, r, g, b, a) {
      var bgColor = "transparent";
      try {
        bgColor = "rgba(" + r + "," + g + "," + b + "," + a + ")";
      } catch (ex) {
        bgColor = "rgb(" + r + "," + g + "," + b + ")";
      }
      return bgColor;
    };
    UtilApiEndpoint2.prototype.shutdown = function() {
      var _a, _b, _c;
      (_a = this.stylesheetManager) === null || _a === void 0 ? void 0 : _a.unlinkAll();
      (_b = this.domEventTracker) === null || _b === void 0 ? void 0 : _b.shutdown();
      (_c = this._alertHost) === null || _c === void 0 ? void 0 : _c.shutdown();
    };
    return UtilApiEndpoint2;
  }();

  // ../../../build/app/browser/obj/hotkeyManager.js
  var Hotkey = /* @__PURE__ */ function() {
    function Hotkey2(code, shift, handler) {
      this.code = code;
      this.shift = shift;
      this.handler = handler;
    }
    Hotkey2.prototype.matches = function(keyCode, shiftState) {
      return this.code == keyCode && this.shift == shiftState;
    };
    return Hotkey2;
  }();
  var HotkeyManager = function() {
    function HotkeyManager2() {
      var _this = this;
      this.hotkeys = [];
      this._Process = function(e) {
        if (!e) {
          e = window.event;
        }
        var _Lcode = _GetEventKeyCode(e);
        if (_Lcode == null) {
          return false;
        }
        var _Lmodifiers = (e.shiftKey ? 16 : 0) | (e.ctrlKey ? 32 : 0) | (e.altKey ? 64 : 0);
        for (var i = 0; i < _this.hotkeys.length; i++) {
          if (_this.hotkeys[i].matches(_Lcode, _Lmodifiers)) {
            _this.hotkeys[i].handler();
            e.returnValue = false;
            if (e && e.preventDefault) {
              e.preventDefault();
            }
            e.cancelBubble = true;
            return false;
          }
        }
        return true;
      };
    }
    HotkeyManager2.prototype.addHotKey = function(keyCode, shiftState, handler) {
      for (var i = 0; i < this.hotkeys.length; i++) {
        if (this.hotkeys[i].code == keyCode && this.hotkeys[i].shift == shiftState) {
          this.hotkeys[i].handler = handler;
          return;
        }
      }
      this.hotkeys.push(new Hotkey(keyCode, shiftState, handler));
    };
    HotkeyManager2.prototype.removeHotkey = function(keyCode, shiftState) {
      for (var i = 0; i < this.hotkeys.length; i++) {
        if (this.hotkeys[i].matches(keyCode, shiftState)) {
          this.hotkeys.splice(i, 1);
          return;
        }
      }
    };
    return HotkeyManager2;
  }();

  // ../../../build/app/browser/obj/beepHandler.js
  var BeepData = /* @__PURE__ */ function() {
    function BeepData2(e) {
      this.e = e;
      this.c = e.style.backgroundColor;
    }
    BeepData2.prototype.reset = function() {
      this.e.style.backgroundColor = this.c;
    };
    return BeepData2;
  }();
  var BeepHandler = function() {
    function BeepHandler2(keyboardInterface) {
      var _this = this;
      this._BeepObjects = [];
      this._BeepTimeout = 0;
      this.reset = function() {
        _this.keyboardInterface.resetContextCache();
        var Lbo;
        _this._BeepTimeout = 0;
        for (Lbo = 0; Lbo < _this._BeepObjects.length; Lbo++) {
          _this._BeepObjects[Lbo].reset();
        }
        _this._BeepObjects = [];
      };
      this.keyboardInterface = keyboardInterface;
    }
    BeepHandler2.prototype.beep = function(outputTarget) {
      if (!(outputTarget instanceof outputTarget_default2)) {
        return;
      }
      var Pelem = outputTarget.getElement();
      if (outputTarget instanceof designIFrame_default) {
        Pelem = outputTarget.docRoot;
      }
      if (!Pelem) {
        return;
      }
      if (!Pelem.style || typeof Pelem.style.backgroundColor == "undefined") {
        return;
      }
      for (var Lbo = 0; Lbo < this._BeepObjects.length; Lbo++) {
        if (this._BeepObjects[Lbo].e == Pelem) {
          return;
        }
      }
      this._BeepObjects.push(new BeepData(Pelem));
      Pelem.style.backgroundColor = "#000000";
      if (this._BeepTimeout == 0) {
        this._BeepTimeout = 1;
        window.setTimeout(this.reset, 50);
      }
    };
    return BeepHandler2;
  }();

  // ../../../build/app/browser/obj/keyboardInterface.js
  var KeyboardInterface3 = /* @__PURE__ */ function(_super) {
    (0, build_exports.__extends)(KeyboardInterface4, _super);
    function KeyboardInterface4(_jsGlobal, engine) {
      var _this = _super.call(this, _jsGlobal, engine) || this;
      _this.GetLastActiveElement = _this.getLastActiveElement;
      _this.FocusLastActiveElement = _this.focusLastActiveElement;
      _this.HideHelp = _this.hideHelp;
      _this.ShowHelp = _this.showHelp;
      _this.ShowPinnedHelp = _this.showPinnedHelp;
      return _this;
    }
    KeyboardInterface4.prototype.saveFocus = function() {
      this.engine.contextManager.focusAssistant._IgnoreNextSelChange = 1;
    };
    KeyboardInterface4.prototype.getLastActiveElement = function() {
      return this.engine.contextManager.lastActiveTarget;
    };
    KeyboardInterface4.prototype.focusLastActiveElement = function() {
      this.engine.contextManager.restoreLastActiveTarget();
    };
    KeyboardInterface4.prototype.hideHelp = function() {
      var osk = this.engine.osk;
      osk.startHide(true);
    };
    KeyboardInterface4.prototype.showHelp = function(Px, Py) {
      var osk = this.engine.osk;
      if (osk instanceof floatingOskView_default) {
        osk.presentAtPosition(Px, Py);
      } else {
        osk.present();
      }
    };
    KeyboardInterface4.prototype.showPinnedHelp = function() {
      var osk = this.engine.osk;
      if (osk instanceof floatingOskView_default) {
        if (!osk.activeKeyboard.keyboard.isCJK || !this.ruleBehavior) {
          osk.userPositioned = true;
        }
      }
      osk.present();
    };
    return KeyboardInterface4;
  }(keyboardInterface_default);
  var keyboardInterface_default2 = KeyboardInterface3;
  (function() {
    KeyboardInterface3.__publishShorthandAPI();
  })();

  // ../../../build/app/browser/obj/keymanEngine.js
  var KeymanEngine2 = /* @__PURE__ */ function(_super) {
    (0, build_exports.__extends)(KeymanEngine3, _super);
    function KeymanEngine3(worker, sourceUri) {
      var _this = this;
      var config = new BrowserConfiguration(sourceUri);
      _this = _super.call(this, worker, config, new contextManager_default(config, function() {
        return _this.legacyAPIEvents;
      }), function(engine) {
        return {
          keyboardInterface: new keyboardInterface_default2(window, engine),
          defaultOutputRules: new defaultBrowserRules_default(engine.contextManager)
        };
      }) || this;
      _this._initialized = 0;
      _this.hotkeyManager = new HotkeyManager();
      _this.helpURL = "https://help.keyman.com/go";
      _this.keyEventRefocus = function() {
        _this.contextManager.restoreLastActiveTarget();
      };
      _this._GetKeyboardDetail = function(Lstub, Lkbd) {
        var Lr = {
          Name: Lstub.KN,
          InternalName: Lstub.KI,
          LanguageName: Lstub.KL,
          LanguageCode: Lstub.KLC,
          RegionName: Lstub.KR,
          RegionCode: Lstub.KRC,
          CountryName: Lstub["KC"],
          CountryCode: Lstub["KCC"],
          KeyboardID: Lstub["KD"],
          Font: Lstub.KFont,
          OskFont: Lstub.KOskFont,
          HasLoaded: !!Lkbd,
          IsRTL: Lkbd ? Lkbd.isRTL : null
        };
        return Lr;
      };
      _this._util = new UtilApiEndpoint(config);
      _this.beepHandler = new BeepHandler(_this.core.keyboardInterface);
      _this.core.keyboardProcessor.beepHandler = function() {
        return _this.beepHandler.beep(_this.contextManager.activeTarget);
      };
      _this.hardKeyboard = new hardwareEventKeyboard_default(config.hardDevice, _this.core.keyboardProcessor, _this.contextManager);
      _this.contextManager.on("targetchange", function(target) {
        var e = target === null || target === void 0 ? void 0 : target.getElement();
        _this.osk.activationModel.activationTrigger = e;
        if (_this.config.hostDevice.touchable) {
          if (!e || !target || !_this.osk) {
            return;
          }
          var y = getAbsoluteY(e);
          var t = window.pageYOffset;
          var dy = y - t;
          if (y >= t) {
            dy -= window.innerHeight - _this.osk._Box.offsetHeight - e.offsetHeight - 2;
            if (dy < 0) {
              dy = 0;
            }
          }
          if (dy != 0) {
            window.scrollTo(0, dy + t);
          }
        }
      });
      return _this;
    }
    Object.defineProperty(KeymanEngine3.prototype, "util", {
      get: function() {
        return this._util;
      },
      enumerable: false,
      configurable: true
    });
    Object.defineProperty(KeymanEngine3.prototype, "views", {
      get: function() {
        return viewsAnchorpoint_exports;
      },
      enumerable: false,
      configurable: true
    });
    Object.defineProperty(KeymanEngine3.prototype, "initialized", {
      get: function() {
        return this._initialized;
      },
      enumerable: false,
      configurable: true
    });
    Object.defineProperty(KeymanEngine3.prototype, "ui", {
      get: function() {
        return this._ui;
      },
      set: function(module) {
        if (this._ui) {
          this._ui.shutdown();
        }
        this._ui = module;
        if (this.config.deferForInitialization.hasResolved) {
          module.initialize();
        }
      },
      enumerable: false,
      configurable: true
    });
    KeymanEngine3.prototype.init = function(options) {
      return (0, build_exports.__awaiter)(this, void 0, void 0, function() {
        var deviceDetector, device, totalOptions, savedKeyboardStr;
        var _this = this;
        return (0, build_exports.__generator)(this, function(_a) {
          switch (_a.label) {
            case 0:
              deviceDetector = new Device();
              device = deviceDetector.detect();
              totalOptions = (0, build_exports.__assign)((0, build_exports.__assign)({}, BrowserInitOptionDefaults), options);
              this.config.hostDevice = device;
              this.config.initialize(totalOptions);
              this._initialized = 1;
              return [4, whenDocumentReady()];
            case 1:
              _a.sent();
              if (this.config.deferForInitialization.hasFinalized) {
                return [2, Promise.resolve()];
              }
              return [4, _super.prototype.init.call(this, totalOptions)];
            case 2:
              _a.sent();
              this.keyboardRequisitioner.cloudQueryEngine.once("unboundregister", function() {
                var _a2;
                if (!((_a2 = _this.contextManager.activeKeyboard) === null || _a2 === void 0 ? void 0 : _a2.keyboard)) {
                  _this.setActiveKeyboard("", "");
                }
              });
              this.contextManager.initialize();
              savedKeyboardStr = this.contextManager.getSavedKeyboardRaw();
              if (device.touchable) {
                this.osk = new PublishedAnchoredOSKView(this);
              } else {
                this.osk = new PublishedFloatingOSKView(this);
              }
              setupOskListeners(this, this.osk, this.contextManager);
              this.pageIntegration = new PageIntegrationHandlers(window, this);
              String.kmwEnableSupplementaryPlane(true);
              this.config.finalizeInit();
              if (this.ui) {
                this.ui.initialize();
                this.legacyAPIEvents.callEvent("loaduserinterface", {});
              }
              this._initialized = 2;
              return [4, Promise.resolve()];
            case 3:
              _a.sent();
              this.contextManager.restoreSavedKeyboard(savedKeyboardStr);
              return [4, Promise.resolve()];
            case 4:
              _a.sent();
              return [2];
          }
        });
      });
    };
    Object.defineProperty(KeymanEngine3.prototype, "register", {
      get: function() {
        return this.keyboardRequisitioner.cloudQueryEngine.registerFromCloud;
      },
      enumerable: false,
      configurable: true
    });
    KeymanEngine3.prototype.getUIState = function() {
      return this.contextManager.focusAssistant.getUIState();
    };
    KeymanEngine3.prototype.activatingUI = function(state) {
      this.contextManager.focusAssistant.setMaintainingFocus(!!state);
    };
    KeymanEngine3.prototype.setKeyboardForControl = function(Pelem, Pkbd, Plc) {
      if (Pelem instanceof Pelem.ownerDocument.defaultView.HTMLIFrameElement) {
        console.warn("'keymanweb.setKeyboardForControl' cannot set keyboard on iframes.");
        return;
      }
      if (!this.isAttached(Pelem)) {
        console.error("KeymanWeb is not attached to element " + Pelem);
        return;
      }
      var stub = null;
      if (Pkbd) {
        stub = this.keyboardRequisitioner.cache.getStub(Pkbd, Plc);
        if (!stub) {
          throw new Error("No keyboard has been registered with id ".concat(Pkbd, " and language code ").concat(Plc, "."));
        }
      }
      this.contextManager.setKeyboardForTarget(Pelem._kmwAttachment.interface, Pkbd, Plc);
    };
    KeymanEngine3.prototype.getKeyboardForControl = function(Pelem) {
      var target = outputTargetForElement(Pelem);
      return this.contextManager.getKeyboardStubForTarget(target).id;
    };
    KeymanEngine3.prototype.getLanguageForControl = function(Pelem) {
      var target = outputTargetForElement(Pelem);
      return this.contextManager.getKeyboardStubForTarget(target).langId;
    };
    KeymanEngine3.prototype.isAttached = function(x) {
      return this.contextManager.page.isAttached(x);
    };
    KeymanEngine3.prototype.addKeyboards = function() {
      var _this = this;
      var args = [];
      for (var _i = 0; _i < arguments.length; _i++) {
        args[_i] = arguments[_i];
      }
      return this.config.deferForInitialization.then(function() {
        if (!args || !args[0] || args[0].length == 0) {
          return _this.keyboardRequisitioner.fetchCloudCatalog().catch(function(errVal) {
            console.error(errVal[0].error);
            return errVal;
          });
        } else {
          var x = [];
          if (Array.isArray(args[0])) {
            x = x.concat(args[0]);
          } else if (Array.isArray(args)) {
            x = x.concat(args);
          }
          return _this.keyboardRequisitioner.addKeyboardArray(x);
        }
      });
    };
    KeymanEngine3.prototype.addKeyboardsForLanguage = function(arg) {
      var _this = this;
      return this.config.deferForInitialization.then(function() {
        if (typeof arg === "string") {
          return _this.keyboardRequisitioner.addLanguageKeyboards(arg.split(",").map(function(item) {
            return item.trim();
          }));
        } else {
          return _this.keyboardRequisitioner.addLanguageKeyboards(arg);
        }
      });
    };
    KeymanEngine3.prototype.isCJK = function(k0) {
      var kbd;
      if (k0) {
        var kbdDetail = k0;
        if (kbdDetail.KeyboardID) {
          kbd = this.keyboardRequisitioner.cache.getKeyboard(k0.KeyboardID);
        } else {
          kbd = new keyboard_default(k0);
        }
      } else {
        kbd = this.core.activeKeyboard;
      }
      return kbd && kbd.isCJK;
    };
    KeymanEngine3.prototype.getKeyboard = function(PInternalName, PlgCode) {
      var stub = this.keyboardRequisitioner.cache.getStub(PInternalName, PlgCode);
      var keyboard = this.keyboardRequisitioner.cache.getKeyboardForStub(stub);
      return this._GetKeyboardDetail(stub, keyboard);
    };
    KeymanEngine3.prototype.getKeyboards = function() {
      var Lr = [];
      var cache = this.keyboardRequisitioner.cache;
      var keyboardStubs = cache.getStubList();
      for (var Ln = 0; Ln < keyboardStubs.length; Ln++) {
        var Lstub = keyboardStubs[Ln];
        var Lkbd = cache.getKeyboardForStub(Lstub);
        var Lrn = this._GetKeyboardDetail(Lstub, Lkbd);
        Lr.push(Lrn);
      }
      return Lr;
    };
    KeymanEngine3.prototype.removeKeyboards = function() {
      var _a;
      var x = [];
      for (var _i = 0; _i < arguments.length; _i++) {
        x[_i] = arguments[_i];
      }
      for (var i = 0; i < x.length; i++) {
        this.keyboardRequisitioner.cache.forgetKeyboard(x[i], true);
        if (((_a = this.contextManager.activeKeyboard) === null || _a === void 0 ? void 0 : _a.metadata.id) == prefixed(x[i])) {
          this.contextManager.activateKeyboard("", "");
        }
      }
      return true;
    };
    KeymanEngine3.prototype.getSavedKeyboard = function() {
      return this.contextManager.getSavedKeyboard();
    };
    KeymanEngine3.prototype.focusLastActiveElement = function() {
      var _a;
      (_a = this.contextManager.lastActiveTarget) === null || _a === void 0 ? void 0 : _a.focus();
    };
    KeymanEngine3.prototype.getLastActiveElement = function() {
      var _a;
      return (_a = this.contextManager.lastActiveTarget) === null || _a === void 0 ? void 0 : _a.getElement();
    };
    KeymanEngine3.prototype.setActiveElement = function(e, setFocus) {
      if (typeof e == "string") {
        var id = e;
        e = document.getElementById(e);
        if (!e) {
          throw new Error("Could not find the specified element (id: ".concat(id));
        }
      }
      var target = outputTargetForElement(e);
      if (!target) {
        throw new Error("KMW is not attached to the specified element (id: ".concat(e.id, ")."));
      }
      this.contextManager.setActiveTarget(target, setFocus);
    };
    KeymanEngine3.prototype.moveToElement = function(e) {
      if (typeof e == "string") {
        e = document.getElementById(e);
      }
      e.focus();
    };
    KeymanEngine3.prototype.addHotKey = function(keyCode, shiftState, handler) {
      this.hotkeyManager.addHotKey(keyCode, shiftState, handler);
    };
    KeymanEngine3.prototype.removeHotKey = function(keyCode, shiftState) {
      this.hotkeyManager.removeHotkey(keyCode, shiftState);
    };
    KeymanEngine3.prototype.attachToControl = function(Pelem) {
      this.contextManager.page.attachToControl(Pelem);
    };
    KeymanEngine3.prototype.detachFromControl = function(Pelem) {
      this.contextManager.page.detachFromControl(Pelem);
    };
    KeymanEngine3.prototype.disableControl = function(Pelem) {
      this.contextManager.page.disableControl(Pelem);
    };
    KeymanEngine3.prototype.enableControl = function(Pelem) {
      this.contextManager.page.enableControl(Pelem);
    };
    KeymanEngine3.prototype.BuildVisualKeyboard = function(PInternalName, Pstatic, argFormFactor, argLayerId) {
      var PKbd = null;
      if (PInternalName != null) {
        PKbd = this.keyboardRequisitioner.cache.getKeyboard(PInternalName);
      }
      PKbd = PKbd || this.core.activeKeyboard;
      var Pstub = this.keyboardRequisitioner.cache.getStub(PKbd);
      var getOskHeight = this["getOskHeight"];
      var targetHeight = (typeof getOskHeight == "function" ? getOskHeight() : null) || this.osk.computedHeight || 200;
      return visualKeyboard_default.buildDocumentationKeyboard(PKbd, Pstub, this.config.paths.fonts, argFormFactor, argLayerId, targetHeight);
    };
    KeymanEngine3.prototype.shutdown = function() {
      var _a, _b;
      this.pageIntegration.shutdown();
      this.contextManager.shutdown();
      (_a = this.osk) === null || _a === void 0 ? void 0 : _a.shutdown();
      this.core.languageProcessor.shutdown();
      this.hardKeyboard.shutdown();
      this.util.shutdown();
      this.legacyAPIEvents.callEvent("unloaduserinterface", {});
      (_b = this.ui) === null || _b === void 0 ? void 0 : _b.shutdown();
    };
    return KeymanEngine3;
  }(keymanEngine_default);
  var keymanEngine_default2 = KeymanEngine2;

  // ../../../build/app/browser/obj/debug-main.js
  var scripts = document.getElementsByTagName("script");
  var ss = scripts[scripts.length - 1].src;
  var sPath = ss.substr(0, ss.lastIndexOf("/") + 1);
  window["keyman"] = new keymanEngine_default2(sourcemappedWorker_default.constructInstance(), sPath);
})();
//# sourceMappingURL=keymanweb.js.map
