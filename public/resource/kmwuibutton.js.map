{
  "version": 3,
  "sources": [
    "web/src/app/ui/kmwuibutton.ts"
  ],
  "sourceRoot": "@keymanapp/keyman/",
  "sourcesContent": [
    "/***\r\n   KeymanWeb 17.0\r\n   Copyright 2019-2023 SIL International\r\n***/\r\n\r\nimport type { KeymanEngine, KeyboardCookie, UIModule } from 'keyman/app/browser';\r\nimport type { FloatingOSKViewCookie } from 'keyman/engine/osk';\r\n\r\ndeclare var keyman: KeymanEngine\r\n\r\nif(!keyman?.ui?.name) {\r\n\r\n  /********************************/\r\n  /*                              */\r\n  /* Button User Interface Code   */\r\n  /*                              */\r\n  /********************************/\r\n\r\n  /**\r\n   * Do not enclose in an anonymous function, as the compiler may create\r\n   * global scope variables to replace true, false, null, whcih can then collide\r\n   * with other variables.\r\n   * Instead, use the --output-wrapper command during optimization, which will\r\n   * add the anonymous function to enclose all code, including those optimized\r\n   * variables which would otherwise have global scope.\r\n   **/\r\n\r\n  try {\r\n    // Declare KeymanWeb, OnScreen keyboard and Util objects\r\n    const keymanweb = keyman;\r\n    const util=keymanweb.util;\r\n    // var dbg=keymanweb['debug'];\r\n\r\n    // Disable UI for touch devices\r\n    if(util.isTouchDevice()) {\r\n      throw '';\r\n    }\r\n\r\n    class UIButton implements UIModule {\r\n      // User interface global and variables\r\n      readonly name = 'button';\r\n\r\n      init = false;\r\n\r\n      /**\r\n       * Initialization timeout handle.\r\n       */\r\n      private initTimer: number = null;\r\n      private keyboardSelector = null; // not referenced\r\n\r\n      // not referenced\r\n      private KeymanWeb_DefaultKeyboardHelp='<span style=\"font-size:7.5pt\">KeymanWeb is not running.  Choose a keyboard from the list</span>';\r\n\r\n\r\n      private _KeymanWeb_KbdList: HTMLUListElement = null;\r\n\r\n      /**\r\n       * Tracks the element corresponding to the active keyboard on the keyboard list.\r\n       *\r\n       * Is also set when activating it due to user interaction.\r\n       */\r\n      private _KMWSel: HTMLElement = null;\r\n      private _IsHelpVisible = false;\r\n      private _DefaultKeyboardID = '';\r\n\r\n      updateTimer: number = 0;\r\n      updateList = true;\r\n\r\n      /**\r\n       * If no id == 'KeymanWebControl' element exists during init, this UI module\r\n       * will make its own, auto-insert it, and track the element here.\r\n       */\r\n      private _insertedElem: HTMLElement = null;\r\n\r\n      /**\r\n       * Highlight the currently active keyboard in the list of keyboards\r\n       **/\r\n      private _ShowSelected() {\r\n        let kbd=keymanweb.getActiveKeyboard();\r\n        let lgc=keymanweb.getActiveLanguage();\r\n        let kList = this._KeymanWeb_KbdList.childNodes;\r\n        let _r = /^KMWSel_(.*)\\$(.*)$/;\r\n\r\n        for(let i=1; i<kList.length; i++) {\r\n          (kList[i].childNodes[0] as HTMLElement).className = '';\r\n        }\r\n\r\n        let i: number;\r\n        for(i=2; i<kList.length; i++) {\r\n          let _rv = _r.exec((kList[i].childNodes[0] as HTMLElement).id);\r\n          if(_rv && (_rv[1] == kbd) && (_rv[2] == lgc)) {\r\n            break;\r\n          }\r\n        }\r\n        if(i >= kList.length) {\r\n          i=1;\r\n        }\r\n        (kList[i].childNodes[0] as HTMLElement).className = 'selected';\r\n      }\r\n\r\n      /**\r\n       * Select keyboard by id\r\n       *\r\n       * @param       {Event}  _id   keyboard selection event\r\n       * @return      {boolean}\r\n       */\r\n      readonly _SelectKeyboard = (_id: Event) => {\r\n        let id: string = '';\r\n        if(typeof(_id) == 'object') {\r\n          let t: HTMLElement = null;\r\n          if((typeof(_id.target) != 'undefined') && _id.target) {\r\n            t=_id.target as HTMLElement;\r\n          } else if((typeof(_id.srcElement) != 'undefined') && _id.srcElement) {\r\n            t=_id.srcElement as HTMLElement;\r\n          }\r\n\r\n          if(t) {\r\n            id=t.id;\r\n          }\r\n        }\r\n\r\n        let _r=/^KMWSel_(.*)\\$(.*)$/;\r\n        let _rv=_r.exec(id),_lgc='',_name='';\r\n        if(_rv !== null) {\r\n          _name = _rv[1].split('$')[0]; //new code\r\n          _lgc = id.split('$')[1];\r\n          if(this._KMWSel != null) {\r\n            this._KMWSel.className = '';\r\n          }\r\n          let _k = document.getElementById(id);\r\n          if(_k) {\r\n            _k.className='selected';\r\n          }\r\n          this._KMWSel = _k;\r\n          keymanweb.setActiveKeyboard(_name,_lgc);\r\n        } else {\r\n          _name=null;\r\n        }\r\n\r\n        keymanweb.focusLastActiveElement();\r\n        let osk = keymanweb.osk;\r\n        if(osk && osk.isEnabled()) {\r\n          osk.show(true);\r\n        }\r\n\r\n        this._ShowKeyboardButton(_name);\r\n        return false;\r\n      }\r\n\r\n      /**\r\n       * Set KMW UI activation state on mouse click\r\n       *\r\n       * @param       {Event}    e     event\r\n       */\r\n      readonly _SelectorMouseDown = (e: MouseEvent) => {\r\n        const x=keymanweb.getLastActiveElement();\r\n\r\n        // Set the focus to an input field, to get correct OSK display behaviour\r\n        if(!x) {\r\n          this._FocusFirstInput();\r\n        } else {\r\n          keymanweb.focusLastActiveElement();\r\n        }\r\n\r\n        if(keymanweb.activatingUI) {\r\n          keymanweb.activatingUI(1);\r\n        }\r\n      }\r\n\r\n      /**\r\n       * Set focus on mouse up\r\n       *\r\n       * @param       {Event}    e     event\r\n       */\r\n      readonly _SelectorMouseUp = (e: MouseEvent) => {\r\n        const x=keymanweb.getLastActiveElement();\r\n\r\n        // Set the focus to an input field, to get correct OSK display behaviour\r\n        if(!x) {\r\n          this._FocusFirstInput();\r\n        } else {\r\n          keymanweb.focusLastActiveElement();\r\n        }\r\n      }\r\n\r\n      /**\r\n       * Set KMW UI activation state on mouse over\r\n       *\r\n       * @param       {Event}   e     event\r\n       */\r\n      readonly _SelectorMouseOver = (e: MouseEvent) => {\r\n        // highlight the currently active keyboard\r\n        this._ShowSelected();\r\n\r\n        if(keymanweb.activatingUI) {\r\n          keymanweb.activatingUI(1);\r\n        }\r\n\r\n        document.getElementById(\"kmwico_li\").className=\"sfhover\";\r\n\r\n        // Conditionally display keyboard button\r\n        this._ShowKeyboardButton();\r\n      }\r\n\r\n      /**\r\n       * Sets the focus to the first input or textarea found on the current page\r\n       * to ensure consistent keyboard selection and OSK display behaviour\r\n       */\r\n      private _FocusFirstInput() {\r\n        let ip: HTMLInputElement = null;\r\n        let tp: HTMLTextAreaElement = null;\r\n        const iList=document.getElementsByTagName(\"input\");\r\n        const tList=document.getElementsByTagName(\"textarea\");\r\n\r\n        let i: number;\r\n        for(i=0; i<iList.length; i++) {\r\n          if(iList[i].type == 'text') {\r\n            break;\r\n          }\r\n        }\r\n\r\n        if(i < iList.length) {\r\n          ip=iList[i];\r\n        }\r\n\r\n        if(tList.length > 0) {\r\n          tp = tList[0];\r\n        }\r\n\r\n        if((!ip) && (!tp)) {\r\n          return;\r\n        } else if(ip && !tp) {\r\n          ip.focus();\r\n        } else if(tp && !ip) {\r\n          tp.focus();\r\n        } else if(ip.offsetTop < tp.offsetTop) {\r\n          ip.focus();\r\n        } else if(ip.offsetTop > tp.offsetTop) {\r\n          tp.focus();\r\n        } else if(ip.offsetLeft < tp.offsetLeft) {\r\n          ip.focus();\r\n        } else {\r\n          tp.focus();\r\n        }\r\n      }\r\n\r\n      /**\r\n       * Clear KMW UI activation state on mouse out\r\n       *\r\n       * @param       {Event}    e     event\r\n       */\r\n      readonly _SelectorMouseOut = (e: MouseEvent) => {\r\n        if(keymanweb.activatingUI) {\r\n          keymanweb.activatingUI(0);\r\n        }\r\n        document.getElementById(\"kmwico_li\").className=\"sfunhover\";\r\n      }\r\n\r\n      /**\r\n       * Disable the button to show/hide the OSK if no active keyboard or active keyboard is CJK (user cannot hide)\r\n       *\r\n       * @param       {?string=}  _name     current keyboard name\r\n       */\r\n      private _ShowKeyboardButton(_name?: string) {\r\n        let kbdName = keymanweb.getActiveKeyboard();\r\n        let kbdId = document.getElementById(\"KMW_Keyboard\");\r\n        if(arguments.length > 0) {\r\n          kbdName = _name;\r\n        }\r\n\r\n        if(kbdId) {\r\n          if((kbdName == '') || keymanweb.isCJK()) {\r\n            kbdId.className='kmw_disabled';\r\n          } else {\r\n            let osk = keymanweb.osk;\r\n            kbdId.className = osk && osk.isEnabled() ? 'kmw_show' : 'kmw_hide';\r\n          }\r\n        }\r\n      }\r\n\r\n      registerEvents() {\r\n        let osk = keymanweb.osk;\r\n        if(!osk) {\r\n          return;\r\n        }\r\n        /**\r\n         * UI Functions called by KeymanWeb or OSK\r\n         */\r\n        osk.addEventListener('show', (oskPosition) => {\r\n          const t=keymanweb.getLastActiveElement();\r\n          if(t) {\r\n            if(!oskPosition['userLocated']) {\r\n              oskPosition['x'] = util.getAbsoluteX(t);\r\n              oskPosition['y'] = util.getAbsoluteY(t)+t.offsetHeight;\r\n            }\r\n          }\r\n\r\n          this._ShowKeyboardButton();\r\n          return oskPosition;\r\n        });\r\n\r\n        /* TODO: why is this still needed??? Does it actually do anything?? */\r\n        osk.addEventListener('hide', function(obj) {\r\n          if((arguments.length > 0) && obj['hiddenByUser']) {\r\n            let _a = document.getElementById('KMW_Keyboard');\r\n            if(_a) {\r\n              _a.className = 'kmw_hide';\r\n            }\r\n          }\r\n        });\r\n      }\r\n\r\n      /**\r\n       * Show or hide the OSK (always visible for CJK keyboards)\r\n       *\r\n       * @param       {Object}    _anchor     anchor element (?)\r\n       * @return      {boolean}\r\n       **/\r\n      readonly _ShowKeymanWebKeyboard = () => {\r\n        const kbdId=document.getElementById(\"KMW_Keyboard\");\r\n        let osk = keymanweb.osk;\r\n\r\n        if((kbdId.className!='kmw_disabled') && osk && osk.show) {\r\n          if(osk.isEnabled()) {\r\n            osk.hide();\r\n          } else {\r\n            osk.show(true);\r\n          }\r\n        }\r\n        if(window.event) {\r\n          window.event.returnValue=false;\r\n        }\r\n\r\n        keymanweb.focusLastActiveElement();\r\n        return false;\r\n      }\r\n\r\n      /**\r\n       * Initialize Button User Interface\r\n       **/\r\n      readonly initialize = () => {\r\n        if(this.initTimer) {\r\n          window.clearTimeout(this.initTimer);\r\n          this.initTimer = null;\r\n        }\r\n\r\n        //Never initialize UI before KMW (parameters will be undefined)\r\n        if(!keymanweb.initialized) {\r\n          this.initTimer = window.setTimeout(this.initialize, 50);\r\n          return;\r\n        }\r\n\r\n        if(this.init || util.isTouchDevice()) {\r\n          return;\r\n        }\r\n\r\n        this.init = true;\r\n\r\n        util.addStyleSheet(this._Appearance);\r\n\r\n        this._KeymanWeb_KbdList = util.createElement('ul');\r\n        this._KeymanWeb_KbdList.id = 'KeymanWeb_KbdList';\r\n\r\n        let _elem = document.getElementById('KeymanWebControl');\r\n        if(!_elem) {\r\n          const _elems = document.getElementsByTagName('div');\r\n          for(let _i = 0; _i < _elems.length; _i++) {\r\n            if(_elems[_i].className == 'KeymanWebControl') {\r\n              _elem = _elems[_i]; {\r\n                break;\r\n              }\r\n            }\r\n          }\r\n        }\r\n\r\n        // Insert as first child of body if not defined by user\r\n        if(!_elem && (document.body != null)) {\r\n          _elem=document.createElement('DIV');\r\n          _elem.id='KeymanWebControl';\r\n          document.body.insertBefore(_elem,document.body.firstChild);\r\n          this._insertedElem = _elem;\r\n        }\r\n\r\n\r\n        let imgPath=util.getOption('resources')+'ui/button/';\r\n        if(_elem) {\r\n          // Append another DIV to follow the main control with clear:both to prevent selection over entire width of window\r\n          const dx=document.createElement('DIV')\r\n          const ds=dx.style;\r\n          ds.clear='both';\r\n          _elem.parentNode.insertBefore(dx,_elem.nextSibling);\r\n\r\n          const _btn=util.createElement('img');\r\n          const _ul=util.createElement('ul');\r\n          const _li0=util.createElement('li');\r\n\r\n          _btn.id = 'kmwico_a';\r\n          _btn.src = imgPath+'kmw_button.gif';\r\n          _btn.onclick = function() {\r\n            return false;\r\n          }  //may want to use this in iOS *****\r\n          _li0.appendChild(_btn);\r\n          _li0.id = 'kmwico_li';\r\n          _ul.appendChild(_li0);\r\n          _ul.id = 'kmwico';\r\n          _ul.style.display = 'block';\r\n          _elem.appendChild(_ul);\r\n        } else {\r\n          // Do not define any UI behaviour if no controller element can be found\r\n          return;\r\n        }\r\n\r\n        // ... wait, what?  I can't find any evidence of this reference point existing.\r\n        // Even tag `release-web-stable-2.0` turns up results only for this specific sourcefile.\r\n        // Thus, in essence:  if(true) { /* ... */ }\r\n        if(!keymanweb['iOS']) {\r\n          var _li = util.createElement('li');\r\n          var _a = util.createElement('a');\r\n          var _img = util.createElement('img');\r\n          _img.src = imgPath+'kbdicon.gif';\r\n          _a.appendChild(_img);\r\n\r\n          const _txt1 = document.createTextNode(' Hide Keyboard');\r\n          const _txt2 = document.createTextNode(' Show Keyboard');\r\n          const _sp1 = util.createElement('span');\r\n          _sp1.id = 'KMW_KbdVisibleMsg';\r\n          _sp1.appendChild(_txt1);\r\n          _a.appendChild(_sp1);\r\n\r\n          var _sp2 = util.createElement('span');\r\n          _sp2.id = 'KMW_KbdHiddenMsg';\r\n          _sp2.appendChild(_txt2);\r\n          _a.appendChild(_sp2);\r\n          _a.onmousedown = this._ShowKeymanWebKeyboard;\r\n          _a.href = '#';\r\n          _a.id = 'KMW_Keyboard';\r\n          _li.id = 'KMW_ButtonUI_KbdIcon';\r\n          _li.appendChild(_a);\r\n          this._KMWSel = _a;\r\n          this._KeymanWeb_KbdList.appendChild(_li);\r\n        }\r\n\r\n        var _li1 = util.createElement('li');\r\n        _li1.id = 'KMW_ButtonUI_KbdList';\r\n        var _a1 = util.createElement('a');\r\n        _a1.appendChild(document.createTextNode('(System keyboard)'));\r\n\r\n        _a1.onclick = this._SelectKeyboard;\r\n        _a1.href = '#';\r\n        _a1.id='KMWSel_$';\r\n        _a1.className='selected';\r\n        _li1.appendChild(_a1);\r\n        this._KMWSel = _a1;\r\n        this._KeymanWeb_KbdList.appendChild(_li1);\r\n\r\n        this.updateKeyboardList();\r\n\r\n        document.getElementById('kmwico_li').appendChild(this._KeymanWeb_KbdList);\r\n\r\n        var _sfEl = document.getElementById(\"kmwico_li\");\r\n        util.attachDOMEvent(_sfEl,'mousedown',this._SelectorMouseDown);\r\n        util.attachDOMEvent(_sfEl,'mouseover',this._SelectorMouseOver);\r\n        util.attachDOMEvent(_sfEl,'mouseout',this._SelectorMouseOut);\r\n        util.attachDOMEvent(_sfEl,'mouseup',this._SelectorMouseUp);\r\n\r\n        this.registerEvents();\r\n        keymanweb.focusLastActiveElement();  \t//TODO: this needs to be extended - if no element is active, try and identify an enabled input element\r\n      }\r\n\r\n      shutdown() {\r\n        const root = this._insertedElem;\r\n        if(root) {\r\n          root.parentNode.removeChild(root);\r\n        }\r\n      }\r\n\r\n      /**\r\n       * Update the entire menu when keyboards are registered or deregistered\r\n       **/\r\n      readonly updateKeyboardList = () => {\r\n        this.updateList = false;\r\n\r\n        if(!this.init) {\r\n          return;\r\n        }\r\n\r\n        // Clear existing list first (first two nodes must be preserved)\r\n        for(let i = this._KeymanWeb_KbdList.childNodes.length; i>2; i--) {\r\n          this._KeymanWeb_KbdList.removeChild(this._KeymanWeb_KbdList.childNodes[i-1]);\r\n        }\r\n\r\n        const kbds=keymanweb.getKeyboards();\r\n        if(kbds.length > 0) {\r\n          for(var i:number=0; i<kbds.length; i++) {\r\n            this.registerKeyboard(\r\n              kbds[i].InternalName,\r\n              kbds[i].LanguageName,\r\n              kbds[i].Name,\r\n              kbds[i].LanguageCode\r\n            );\r\n          }\r\n        }\r\n      }\r\n\r\n      /**\r\n       * As each keyboard stub is registered, append it to the list\r\n       *\r\n       * @param       {string}    Lki     internal name\r\n       * @param       {string}    Lkl     language name\r\n       * @param       {string}    Lkn     keyboard name\r\n       * @param       {string}    Lklc    language code\r\n       **/\r\n      registerKeyboard(\r\n        Lki: string,\r\n        Lkl: string,\r\n        Lkn: string,\r\n        Lklc: string\r\n      ) {\r\n        const _li2 = util.createElement('li');\r\n        const _a2 = util.createElement('a');\r\n        let _t = Lkn.replace(/\\s?keyboard/i,'');\r\n\r\n        if(Lkl) {\r\n          var lg=Lkl.split(',')[0];\r\n          if(Lkn.search(lg) == -1) {\r\n            _t = lg+' ('+_t+')';\r\n          }\r\n        }\r\n        if(_t.length > 26) {\r\n          _t=_t.substr(0,24)+'\\u2026';\r\n        }\r\n        _a2.appendChild(document.createTextNode(_t));\r\n        _a2.onclick = this._SelectKeyboard;\r\n        _a2.href = '#';\r\n        _a2.id='KMWSel_'+Lki+'$'+Lklc;\r\n        _li2.appendChild(_a2);\r\n        this._KeymanWeb_KbdList.appendChild(_li2);\r\n      }\r\n\r\n      // Define appearance of this interface\r\n      private _Appearance = `\r\n#kmwico, #kmwkbd {\r\n  vertical-align: middle;\r\n}\r\n\r\n#KeymanWebControl {\r\n  float:left;\r\n}\r\n\r\n#KeymanWebControl * {\r\n  letter-spacing: 0px !important;\r\n  line-height: 1li !important;\r\n  white-space: nowrap !important;\r\n}\r\n\r\n#KeymanWebControl #kmwico img {\r\n  vertical-align: top;\r\n  padding: 0;\r\n  margin: 0;\r\n  border: none;\r\n}\r\n\r\n#KeymanWebControl #kmwico, #kmwico ul {\r\n  padding: 0;\r\n  margin: 0;\r\n  list-style: none;\r\n}\r\n\r\n#KeymanWebControl #kmwico_a {\r\n  display: block;\r\n  /* border: none !important; */\r\n  width: 22px; height: 23px;                                 /* sizes needed for kmw_button.gif */\r\n}\r\n\r\n#KeymanWebControl #kmwico li {\r\n  text-align: left;\r\n}\r\n\r\n#KeymanWebControl #kmwico li ul {\r\n  display: block;\r\n  position: absolute;\r\n  left: -5999px;\r\n  border: solid 2px #ad4a28;\r\n  background: white;\r\n  border-radius: 4px;\r\n  box-shadow: 4px 4px 2px #666;\r\n  z-index: 10011; /* above the osk */\r\n}\r\n\r\n#KeymanWebControl #kmwico li.sfunhover ul {\r\n  display: none; left: -5999px;\r\n}\r\n\r\n#KeymanWebControl #kmwico li:hover ul, #kmwico li.sfhover ul {\r\n  display: block;\r\n  left: auto;\r\n}\r\n\r\n#KeymanWebControl #kmwico ul li {\r\n  float: none;\r\n  padding: 0 !important;\r\n  margin: 0 !important;\r\n  width: 136px !important;\r\n}\r\n\r\n#KeymanWebControl #KMW_LanguageName {\r\n  font-weight: bold;\r\n}\r\n\r\n#KeymanWebControl #kmwico ul li a, #kmwico ul li a:visited {\r\n  display: block;\r\n  padding: 2px 4px !important;\r\n  border: none !important;\r\n  /* width: auto; */\r\n  color: #404040;\r\n  font-family: Tahoma,Verdana,Arial,sans-serif;\r\n  font-size: 8pt;\r\n  text-decoration: none;\r\n}\r\n\r\n#KeymanWebControl #kmwico ul li a.selected {\r\n  font-weight: bold;\r\n  color: black;\r\n}\r\n\r\n#KeymanWebControl #kmwico ul li a:hover {\r\n  color: white;\r\n  background-color: #ad4a28;\r\n}\r\n\r\n#KeymanWebControl #kmwico ul li a.kmw_disabled, #KeymanWebControl #kmwico ul li a.kmw_disabled:hover {\r\n  color: #c0c0c0; cursor: default;\r\n  background-color: white;\r\n}\r\n\r\n#KeymanWebControl #kmwico ul li a.kmw_show span#KMW_KbdHiddenMsg, #KeymanWebControl #kmwico ul li a.kmw_disabled span#KMW_KbdVisibleMsg {\r\n  display: none;\r\n}\r\n\r\n#KeymanWebControl #kmwico ul li a.kmw_show span#KMW_KbdVisibleMsg {\r\n  display: inline;\r\n}\r\n\r\n#KeymanWebControl #kmwico ul li a.kmw_hide span#KMW_KbdHiddenMsg {\r\n  display: inline;\r\n}\r\n\r\n#KeymanWebControl #kmwico ul li a.kmw_hide span#KMW_KbdVisibleMsg {\r\n  display: none;\r\n}\r\n\r\n#KeymanWebControl #kmwico ul li#KMW_ButtonUI_KbdIcon {\r\n  border-bottom: solid 1px #ad4a28;\r\n}\r\n`\r\n    }\r\n\r\n    const ui = keymanweb.ui = new UIButton();\r\n\r\n    /**\r\n     * Keyboard registration event handler\r\n     *\r\n     * Set a timer to update the UI keyboard list on timeout after each keyboard is registered,\r\n     * thus updating only once when only if multiple keyboards are registered together\r\n     */\r\n    keymanweb.addEventListener('keyboardregistered', function(p) {\r\n      ui.updateList = true;\r\n      if(ui.updateTimer) {\r\n        clearTimeout(ui.updateTimer);\r\n      }\r\n      ui.updateTimer = window.setTimeout(ui.updateKeyboardList, 20);\r\n    });\r\n\r\n    // but also call initialization when script loaded, which is after KMW initialization for asynchronous script loading\r\n    ui.initialize();\r\n  } catch(err){}\r\n}"
  ],
  "mappings": "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",
  "names": [
    "UIButton"
  ]
}