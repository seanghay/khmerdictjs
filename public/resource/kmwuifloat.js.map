{
  "version": 3,
  "sources": [
    "web/src/app/ui/kmwuifloat.ts"
  ],
  "sourceRoot": "@keymanapp/keyman/",
  "sourcesContent": [
    "/***\r\n   KeymanWeb 17.0\r\n   Copyright 2019-2023 SIL International\r\n***/\r\n\r\nimport type { KeymanEngine, KeyboardCookie, UIModule } from 'keyman/app/browser';\r\nimport type { FloatingOSKViewCookie } from 'keyman/engine/osk';\r\n\r\ndeclare var keyman: KeymanEngine\r\n\r\n// If a UI module has been loaded, we can rely on the publically-published 'name' property\r\n// having been set as a way to short-out a UI reload.  Its parent object always exists by\r\n// this point in the build process.\r\nif(!keyman?.ui?.name) {\r\n  /********************************/\r\n  /*                              */\r\n  /* Floating User Interface      */\r\n  /*                              */\r\n  /********************************/\r\n\r\n  /**\r\n   * Do not enclose in an anonymous function, as the compiler may create\r\n   * global scope variables to replace true, false, null, which can collide\r\n   * with other variables.\r\n   * Instead, use the --output-wrapper command during optimization, which will\r\n   * add the anonymous function to enclose all code, including those optimized\r\n   * variables which would otherwise have global scope.\r\n   **/\r\n\r\n  try {\r\n\r\n    // Declare KeymanWeb, OnScreen keyboard and Util objects\r\n    const keymanweb = keyman;\r\n    const util=keymanweb.util;\r\n\r\n    var dbg=keymanweb['debug'];\r\n\r\n    // Disable UI for touch devices\r\n    if(util.isTouchDevice()) {\r\n      throw '';\r\n    }\r\n\r\n    class UIFloat implements UIModule {\r\n      // User interface global and local variables\r\n      readonly name = 'float';\r\n\r\n      /**\r\n       * The top-level element for the keyboard-selection drop menu\r\n       */\r\n      KeyboardSelector: HTMLSelectElement = null;\r\n\r\n      /**\r\n       * Container for all Float UI elements (visible when KeymanWeb is active)\r\n       */\r\n      outerDiv: HTMLDivElement = null;     // replaces DivKeymanWeb\r\n\r\n      innerDiv: HTMLDivElement = null;     // replaces Lkdiv\r\n\r\n      /**\r\n       * The button element allowing users to toggle the OSK on or off\r\n       */\r\n      oskButton: HTMLDivElement = null;\r\n\r\n      /**\r\n       * keyboard icon within the OSK button\r\n       */\r\n      kbdIcon: HTMLImageElement = null;\r\n\r\n      /**\r\n       * Tracks ongoing user interactions with the Float UI.  This is used to help\r\n       * control focus-related behaviors during selection so that KMW may more easily\r\n       * maintain the user's intended focus & expected context.\r\n       */\r\n      selecting = false;\r\n\r\n      updateList = true;   // control keyboard list updating\r\n      updateTimer: number = 0;  // prevent unnecessary list refreshing\r\n      floatRight = false;  // align left by default\r\n      initialized = false; // initialization flag\r\n      initTimer: number = 0;\r\n\r\n      /**\r\n       * Display or hide the OSK from the OSK icon link\r\n       */\r\n      readonly toggleOSK = () => {\r\n        keymanweb.activatingUI(true);\r\n        let osk = keymanweb.osk;\r\n        if(osk && osk.show) {\r\n          if(osk.isEnabled()) {\r\n            osk.hide();\r\n          } else {\r\n            osk.show(true);\r\n          }\r\n        }\r\n        if(window.event) {\r\n          window.event.returnValue=false;\r\n        }\r\n        keymanweb.focusLastActiveElement();\r\n        keymanweb.activatingUI(false);\r\n        return false;\r\n      }\r\n\r\n      /**\r\n       * Function     Initialize\r\n       * Scope        Private\r\n       * Description  UI Initialization\r\n       **/\r\n      readonly initialize = () => {\r\n        if(this.initTimer) {\r\n          window.clearTimeout(this.initTimer);\r\n          this.initTimer = null;\r\n        }\r\n\r\n        // Must always initialize after keymanWeb itself, otherwise options are undefined\r\n        if(!keymanweb.initialized) {\r\n          this.initTimer = window.setTimeout(this.initialize, 50);\r\n          return;\r\n        }\r\n\r\n        if(this.initialized || util.isTouchDevice()) {\r\n          return;\r\n        }\r\n\r\n        const imgPath=util.getOption('resources')+\"ui/float/\";\r\n\r\n        this.outerDiv = util.createElement('div');         // Container for UI (visible when KeymanWeb is active)\r\n        this.innerDiv = util.createElement('div');         // inner div for UI\r\n        this.kbdIcon = util.createElement('img');\r\n        this.outerDiv.innerHTML = \"<a href='http://keyman.com/web/' target='KeymanWebHelp'>\"\r\n          + \"<img src='\"+imgPath+\"kmicon.gif' border='0' style='padding: 0px 2px 0 1px; margin:0px;' title='KeymanWeb' alt='KeymanWeb' /></a>\"; /* I2081 */\r\n\r\n        var s=this.outerDiv.style;\r\n        s.backgroundColor='white'; s.border='solid 1px black'; s.position='absolute'; s.height='18px';\r\n        s.font='bold 8pt sans-serif'; s.display='none'; s.textAlign='left';s.overflow='hidden';\r\n\r\n        util.attachDOMEvent(this.outerDiv, 'mousedown', this._SelectorMouseDown);\r\n        util.attachDOMEvent(this.outerDiv, 'mouseover', this._SelectorMouseOver);\r\n        util.attachDOMEvent(this.outerDiv, 'mouseout',  this._SelectorMouseOut);\r\n\r\n        // Register keymanweb events\r\n        this.registerEvents();\r\n\r\n        this.kbdIcon.src = imgPath+'kbdicon.gif';\r\n        this.kbdIcon.title = 'Display visual keyboard';\r\n\r\n        // Set initial OSK button style (off by default)\r\n        this.oskButtonState(false);\r\n\r\n        var Lhdiv = util.createElement('div');\r\n        this.oskButton = Lhdiv;\r\n        Lhdiv.onclick = this.toggleOSK;\r\n        Lhdiv.appendChild(this.kbdIcon);\r\n        this.innerDiv.appendChild(Lhdiv);\r\n        this.outerDiv.appendChild(this.innerDiv);\r\n        document.body.appendChild(this.outerDiv);\r\n\r\n        this.KeyboardSelector =  util.createElement('select'); // ControlSelector - KeymanWeb keyboard selector\r\n\r\n        s=this.KeyboardSelector.style;\r\n        s.font='8pt sans-serif';\r\n        s.backgroundColor='#f3e5de';\r\n        s.border='solid 1px #7B9EBD';\r\n        s.height='16px';\r\n        s.margin='1px 2px 0px 2px';\r\n        s.left='20px';\r\n        s.top='0px';\r\n        s.position='absolute';\r\n        s.maxWidth='150px';\r\n\r\n        util.attachDOMEvent(this.KeyboardSelector, 'change', this.SelectKeyboardChange);\r\n        util.attachDOMEvent(this.KeyboardSelector, 'blur',   this.SelectBlur);\r\n\r\n        this.innerDiv.appendChild(this.KeyboardSelector);  //this may need to be moved up....\r\n\r\n        // Check required interface alignment and default keyboard\r\n        var opt=util.getOption('ui'), dfltKeyboard='(System keyboard)';\r\n        if(opt && typeof(opt) == 'object') {\r\n          if(typeof(opt['position']) == 'string' && opt['position'] == 'right') {\r\n            this.floatRight = true;\r\n          } if(typeof(opt['default']) == 'string') {\r\n            dfltKeyboard = opt['default'];\r\n          }\r\n        }\r\n\r\n        var Lopt = util.createElement('option');\r\n        Lopt.value = '-';\r\n        Lopt.innerHTML = dfltKeyboard;\r\n        this.KeyboardSelector.appendChild(Lopt);\r\n        Lopt = null;\r\n\r\n        // This must be set before updating the keyboard list to prevent recursion!\r\n        this.initialized = true;\r\n\r\n        // Update the keyboard list if required\r\n        this.updateKeyboardList();\r\n\r\n        //may also want to initialize style sheet here ??\r\n      }\r\n\r\n      readonly _UnloadUserInterface = () => {\r\n        this.KeyboardSelector = this.innerDiv = this.outerDiv = this.kbdIcon = null;\r\n      };\r\n\r\n      /**\r\n       * UI removal - resource cleanup\r\n       */\r\n      shutdown() {\r\n        var root = this.outerDiv;\r\n        if(root) {\r\n          root.parentNode.removeChild(root);\r\n        }\r\n\r\n        this._UnloadUserInterface();\r\n\r\n        if(window.removeEventListener) {\r\n          window.removeEventListener('resize', this._Resize, false);\r\n        }\r\n      }\r\n\r\n      /**\r\n       * Update list of keyboards shown by UI\r\n       */\r\n      readonly updateKeyboardList = () => {\r\n        // Do nothing unless list requires updating\r\n        if(this.updateList) {\r\n          if(!this.initialized) {\r\n            this.initialize();\r\n          }\r\n\r\n          // Remove current list (except for default element)\r\n          const opts=this.KeyboardSelector.getElementsByTagName('OPTION');\r\n          for(let i=opts.length; i>1; i--) {\r\n            this.KeyboardSelector.removeChild(opts[i-1]);\r\n          }\r\n\r\n          // Loop over installed keyboards and add to selection list\r\n          var Lkbds=keymanweb.getKeyboards();\r\n\r\n          for(let Ln=0; Ln<Lkbds.length; Ln++) {\r\n            let Lopt = util.createElement('option');\r\n            Lopt.value = Lkbds[Ln].InternalName+':'+Lkbds[Ln].LanguageCode;\r\n            Lopt.innerHTML = Lkbds[Ln].Name.replace(/\\s?keyboard/i,'');\r\n            if(Lkbds[Ln].LanguageName) {\r\n              var lg=Lkbds[Ln].LanguageName;\r\n              // Only show the main language name if variants indicated (this is tentative)\r\n              // e.g. Chinese rather than Chinese, Mandarin, which is in the keyboard name\r\n              lg = lg.split(',')[0];\r\n              if(Lkbds[Ln].Name.search(lg) == -1) {\r\n                Lopt.innerHTML = lg+' ('+Lopt.innerHTML+')';  // I1300 - Language support\r\n              }\r\n            }\r\n\r\n            this.KeyboardSelector.appendChild(Lopt);\r\n            Lopt = null;\r\n          }\r\n        }\r\n        this.updateList = false;\r\n\r\n        // Set the menu selector to the currently saved keyboard\r\n        const sk = keymanweb.getSavedKeyboard().split(':');\r\n        if(sk.length < 2) {\r\n          sk[1] = '';\r\n        }\r\n        this.updateMenu(sk[0],sk[1]);\r\n\r\n        // Redisplay the UI to correct width for any new language entries\r\n        if(keymanweb.getLastActiveElement()) {\r\n          this.HideInterface();\r\n          this.ShowInterface();\r\n        }\r\n      }\r\n\r\n      /**\r\n       * Function     updateMenu\r\n       * Scope        Private\r\n       * @param       {string}     kbd\r\n       * @param       {string}     lg\r\n       * Description  Update the UI menu selection\r\n       *              Separate arguments passed to allow better control of selection when a keyboard\r\n       *              is listed more than once for different language codes\r\n       */\r\n      readonly updateMenu = (kbd: string, lg: string) => {\r\n        var i=0;\r\n\r\n        // This can be called during startup before fully initialized - ignore if so\r\n        if(!this.initialized) {\r\n          return;\r\n        }\r\n\r\n        var match = kbd;\r\n        if(lg != '') {\r\n          match += ':' + lg;\r\n        }\r\n\r\n        if(kbd == '') {\r\n          this.KeyboardSelector.selectedIndex=0;\r\n        } else {\r\n          const opt=this.KeyboardSelector.getElementsByTagName('option');\r\n          for(i=0; i<opt.length; i++) {\r\n            let t=opt[i].value;\r\n            if(lg == '') {\r\n              t = t.split(':')[0];\r\n            }\r\n\r\n            if(t == match) {\r\n              this.KeyboardSelector.selectedIndex=i;\r\n              break;\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n      /**\r\n       * Function     oskButtonState\r\n       * Scope        Private\r\n       * @param       {boolean}     oskEnabled\r\n       * Description  Update kbd icon border style to indicate whether OSK is enabled for display or not\r\n       **/\r\n      readonly oskButtonState = (oskEnabled: boolean) => {\r\n        var s = this.kbdIcon.style;\r\n        s.width='24px';\r\n        s.height='13px';\r\n        s.top='1px';\r\n        s.verticalAlign='bottom';\r\n        s.padding='2px 2px 1px 2px';\r\n        s.position='absolute';\r\n        s.border=oskEnabled ? 'inset 1px #808080' : 'none';\r\n        s.background=oskEnabled ? '#f7e7de' : 'white';\r\n        s.display = 'block';\r\n        if(this.initialized) {\r\n          this.oskButton.style.display = 'block';\r\n        }\r\n      }\r\n\r\n      /**\r\n       * Register all keymanweb and OSK events only after keymanweb is fully initialized\r\n       *\r\n       **/\r\n      registerEvents() {\r\n        /**\r\n         * Keyboard registration event handler\r\n         *\r\n         * Set a timer to update the UI keyboard list on timeout after each keyboard is registered,\r\n         * thus updating only once when only if multiple keyboards are registered together\r\n         */\r\n        keymanweb.addEventListener('keyboardregistered', (p) => {\r\n          this.updateList = true;\r\n          if(this.updateTimer) {\r\n            clearTimeout(this.updateTimer);\r\n          }\r\n          this.updateTimer = window.setTimeout(this.updateKeyboardList, 200);\r\n        });\r\n\r\n        /**\r\n         * Keyboard load event handler\r\n         *\r\n         * Set the menu selector to the currently saved keyboard when a keyboard is loaded\r\n         *\r\n         * Note: Cannot simply set it to the loaded keyboard,\r\n         *       as more than one language may be supported by that keyboard.\r\n         */\r\n        keymanweb.addEventListener('keyboardloaded', (p) => {\r\n          const sk = keymanweb.getSavedKeyboard().split(':');\r\n          if(sk.length > 1) {\r\n            this.updateMenu(sk[0],sk[1]);\r\n          }\r\n        });\r\n\r\n        /**\r\n         * Keyboard change event handler\r\n         *\r\n         * Update menu selection and control OSK display appropriately\r\n         */\r\n        keymanweb.addEventListener('keyboardchange', (p) => {\r\n          // Update the keyboard selector whenever a keyboard is loaded\r\n          this.updateMenu(p.internalName, p.languageCode);\r\n\r\n          // (Conditionally) display the OSK button, and set the style\r\n          this.addButtonOSK();\r\n        });\r\n\r\n        let osk = keymanweb.osk;\r\n        if(!osk) {\r\n          return;\r\n        }\r\n\r\n        /**\r\n         * Show OSK event handler: show or hide the OSK button (never display if a CJK keyboard)\r\n         */\r\n        osk.addEventListener('show', (oskPosition) => {\r\n          this.addButtonOSK();\r\n          return oskPosition;\r\n        });\r\n\r\n        /**\r\n         * Hide OSK event handler\r\n         */\r\n\r\n        osk.addEventListener('hide', (hiddenByUser) => {\r\n          if(this.initialized) {\r\n            this.oskButtonState(false);\r\n          }\r\n        });\r\n      }\r\n\r\n      /**\r\n       * Function     _SelectorMouseDown\r\n       * Scope        Private\r\n       * @param       {Object}     e      event\r\n       * Description  Set KMW UI activation state on mouse click\r\n       */\r\n      readonly _SelectorMouseDown = (e: MouseEvent) => {\r\n        if(keymanweb.activatingUI) {\r\n          keymanweb.activatingUI(1);\r\n        }\r\n      }\r\n\r\n      /**\r\n       * Function     _SelectorMouseOver\r\n       * Scope        Private\r\n       * @param       {Object}    e       event\r\n       * Description  Set KMW UI activation state on mouse over\r\n       */\r\n      readonly _SelectorMouseOver = (e: MouseEvent) => {\r\n        if(keymanweb.activatingUI) {\r\n          keymanweb.activatingUI(1);\r\n        }\r\n      }\r\n\r\n      /**\r\n       * Function     _SelectorMouseOut\r\n       * Scope        Private\r\n       * @param       {Object}    e       event\r\n       * Description Clear KMW UI activation state on mouse out\r\n       */\r\n      readonly _SelectorMouseOut = (e: MouseEvent) => {\r\n        if(keymanweb.activatingUI) {\r\n          keymanweb.activatingUI(0);\r\n        }\r\n      }\r\n\r\n      /**\r\n       * Function     _SelectKeyboardChange\r\n       * Scope        Private\r\n       * @param       {Object}    e       event\r\n       * Description  Change active keyboard in response to user selection event\r\n       */\r\n      readonly SelectKeyboardChange = (e) => {\r\n        keymanweb.activatingUI(true);\r\n\r\n        if(this.KeyboardSelector.value != '-') {\r\n          var i=this.KeyboardSelector.selectedIndex;\r\n          var t=this.KeyboardSelector.options[i].value.split(':');\r\n          keymanweb.setActiveKeyboard(t[0],t[1]);\r\n        } else {\r\n          keymanweb.setActiveKeyboard('');\r\n        }\r\n\r\n        //if(osk['show']) osk['show'](osk['isEnabled']()); handled by keyboard change event???\r\n        keymanweb.focusLastActiveElement();\r\n        keymanweb.activatingUI(false);\r\n        this.selecting = true;\r\n      }\r\n\r\n      /**\r\n       * Function     _SelectBlur\r\n       * Scope        Private\r\n       * @param       {Object}    e       event\r\n       * Description  Ensure OSK is hidden when moving focus after reselecting a keyboard\r\n       */\r\n      readonly SelectBlur = (e) => {\r\n        if(!this.selecting) {\r\n          keymanweb.focusLastActiveElement();\r\n        }\r\n        this.selecting = false;\r\n      }\r\n\r\n      /**\r\n       * Function     ShowInterface\r\n       * Scope        Private\r\n       * @param       {number=}    Px    x-position for KMW window\r\n       * @param       {number=}    Py    y-position for KMW window\r\n       * Description  Display KMW window at specified position\r\n       */\r\n      readonly ShowInterface = (Px?: number, Py?: number) => {\r\n        if(!this.initialized) return;\r\n\r\n        var Ls = this.outerDiv.style;\r\n\r\n        if(Px  &&  Py) {\r\n          Ls.left = Px + 'px';\r\n          Ls.top = Py + 'px';\r\n        }\r\n        Ls.display = 'block';\r\n\r\n        this.kbdIcon.style.left = this.KeyboardSelector.offsetWidth + 24 + 'px';\r\n\r\n        // (Conditionally) display the OSK button\r\n        this.addButtonOSK();\r\n\r\n        // Set the language selection to the currently active keyboard, if listed\r\n        this.updateMenu(keymanweb.getActiveKeyboard(), keymanweb.getActiveLanguage());\r\n      }\r\n\r\n      /**\r\n       * Function     HideInterface\r\n       * Scope        Private\r\n       * Description  Completely hide KMW window\r\n       */\r\n      readonly HideInterface = () => {\r\n        if(!this.initialized) {\r\n          return;\r\n        }\r\n\r\n        this.outerDiv.style.display = 'none';\r\n      }\r\n\r\n      /**\r\n       * Function     addButtonOSK\r\n       * Scope        Private\r\n       * Description  Display the OSK button unless a CJK keyboard (or English)\r\n       */\r\n      readonly addButtonOSK = () => {\r\n        if(this.oskButton != null) {\r\n          if(keymanweb.isCJK() || (this.KeyboardSelector.selectedIndex==0)) {\r\n            this.oskButton.style.display = 'none';\r\n            this.outerDiv.style.width = this.KeyboardSelector.offsetWidth+30+'px';\r\n          } else {\r\n            this.oskButton.style.display = 'block';\r\n            let osk = keymanweb.osk;\r\n            if(osk) {\r\n              this.oskButtonState(osk.isEnabled());\r\n            } else {\r\n              this.oskButtonState(false);\r\n            }\r\n            this.outerDiv.style.width = this.KeyboardSelector.offsetWidth+56+'px';\r\n          }\r\n        }\r\n      }\r\n\r\n      /**\r\n       * Function     _Resize\r\n       * Scope        Private\r\n       * @param       {Object}     e      event object\r\n       * @return      {boolean}\r\n       * Description  Display KMW OSK at specified position (returns nothing)\r\n       */\r\n      readonly _Resize = (e) => {\r\n        if(this.outerDiv.style.display =='block') {\r\n          var elem = keymanweb.getLastActiveElement();\r\n          if(this.floatRight) {  // I1296\r\n            this.ShowInterface(util.getAbsoluteX(elem) + elem.offsetWidth + 1, util.getAbsoluteY(elem) + 1);\r\n          } else {\r\n            this.ShowInterface(util.getAbsoluteX(elem) + 1, util.getAbsoluteY(elem) + elem.offsetHeight + 1);\r\n          }\r\n        }\r\n        return true;\r\n      }\r\n    }\r\n\r\n    const ui=keymanweb.ui = new UIFloat();\r\n\r\n    //TODO:  had to expose properties of params - what does that do? (focus event doesn't normally include these properties?)\r\n    keymanweb.addEventListener('controlfocused', (params) => {\r\n      // ... this check shouldn't need to check _kmwAttachment directly.\r\n      if(params.activeControl == null || params.activeControl['_kmwAttachment']) {\r\n        /*if(keymanweb.domManager._IsEditableIframe(Ltarg))\r\n          Ltarg = Ltarg.defaultView.frameElement;*/\r\n        if(ui.floatRight) {  // I1296\r\n          ui.ShowInterface(util.getAbsoluteX(params.target) + params.target.offsetWidth + 1, util.getAbsoluteY(params.target) + 1);\r\n        } else {\r\n          ui.ShowInterface(util.getAbsoluteX(params.target), util.getAbsoluteY(params.target)\r\n            - parseInt(util.getStyleValue(ui.outerDiv,'height'),10) - 2);\r\n        }\r\n      }\r\n      return true;\r\n    });\r\n\r\n    keymanweb.addEventListener('controlblurred', (params) => {\r\n      if(!params.event) {\r\n        return true;   // I2404 - Manage IE events in IFRAMEs\r\n      }\r\n\r\n      if(!params.isActivating) {\r\n        ui.HideInterface();\r\n      }\r\n\r\n      return true;\r\n    });\r\n\r\n    if(window.addEventListener) {\r\n      window.addEventListener('resize', ui._Resize, false);\r\n    }\r\n\r\n    // but also call initialization when script loaded, which is after KMW initialization for asynchronous script loading\r\n    ui.initialize();\r\n\r\n    // is/was never actually raised.  Note that the `shutdown` method likely fulfills a similar role.\r\n    // keymanweb.addEventListener('unloaduserinterface', ui._UnloadUserInterface);\r\n\r\n  } catch(err){}\r\n\r\n  // Do not wrap in an anonymous function - let the closure compiler do that, but\r\n  // use try...catch to avoid script errors and only execute if a desktop browser\r\n}"
  ],
  "mappings": ";;;AAaA,MAAG,GAAC,KAAA,WAAM,QAAN,WAAM,SAAA,SAAN,OAAQ,QAAE,QAAA,OAAA,SAAA,SAAA,GAAE,OAAM;AAgBpB,QAAI;AAGI,oBAAY;AACZ,eAAK,YAAU;AAEjB,YAAI,YAAU;AAGlB,UAAG,OAAK,cAAa,GAAI;AACvB,cAAM;;AAGR,gBAAA,2BAAA;AAAA,iBAAAA,WAAA;AAAA,cAAA,QAAA;AAEW,eAAA,OAAO;AAKhB,eAAA,mBAAsC;AAKtC,eAAA,WAA2B;AAE3B,eAAA,WAA2B;AAK3B,eAAA,YAA4B;AAK5B,eAAA,UAA4B;AAO5B,eAAA,YAAY;AAEZ,eAAA,aAAa;AACb,eAAA,cAAsB;AACtB,eAAA,aAAa;AACb,eAAA,cAAc;AACd,eAAA,YAAoB;AAKX,eAAA,YAAY,WAAA;AACnB,wBAAU,aAAa,IAAI;AAC3B,gBAAI,MAAM,YAAU;AACpB,gBAAG,OAAO,IAAI,MAAM;AAClB,kBAAG,IAAI,UAAS,GAAI;AAClB,oBAAI,KAAI;qBACH;AACL,oBAAI,KAAK,IAAI;;;AAGjB,gBAAG,OAAO,OAAO;AACf,qBAAO,MAAM,cAAY;;AAE3B,wBAAU,uBAAsB;AAChC,wBAAU,aAAa,KAAK;AAC5B,mBAAO;UACT;AAOS,eAAA,aAAa,WAAA;AACpB,gBAAG,MAAK,WAAW;AACjB,qBAAO,aAAa,MAAK,SAAS;AAClC,oBAAK,YAAY;;AAInB,gBAAG,CAAC,YAAU,aAAa;AACzB,oBAAK,YAAY,OAAO,WAAW,MAAK,YAAY,EAAE;AACtD;;AAGF,gBAAG,MAAK,eAAe,OAAK,cAAa,GAAI;AAC3C;;AAGF,gBAAM,UAAQ,OAAK,UAAU,WAAW,IAAE;AAE1C,kBAAK,WAAW,OAAK,cAAc,KAAK;AACxC,kBAAK,WAAW,OAAK,cAAc,KAAK;AACxC,kBAAK,UAAU,OAAK,cAAc,KAAK;AACvC,kBAAK,SAAS,YAAY,uEACT,UAAQ;AAEzB,gBAAI,IAAE,MAAK,SAAS;AACpB,cAAE,kBAAgB;AAAS,cAAE,SAAO;AAAmB,cAAE,WAAS;AAAY,cAAE,SAAO;AACvF,cAAE,OAAK;AAAuB,cAAE,UAAQ;AAAQ,cAAE,YAAU;AAAO,cAAE,WAAS;AAE9E,mBAAK,eAAe,MAAK,UAAU,aAAa,MAAK,kBAAkB;AACvE,mBAAK,eAAe,MAAK,UAAU,aAAa,MAAK,kBAAkB;AACvE,mBAAK,eAAe,MAAK,UAAU,YAAa,MAAK,iBAAiB;AAGtE,kBAAK,eAAc;AAEnB,kBAAK,QAAQ,MAAM,UAAQ;AAC3B,kBAAK,QAAQ,QAAQ;AAGrB,kBAAK,eAAe,KAAK;AAEzB,gBAAI,QAAQ,OAAK,cAAc,KAAK;AACpC,kBAAK,YAAY;AACjB,kBAAM,UAAU,MAAK;AACrB,kBAAM,YAAY,MAAK,OAAO;AAC9B,kBAAK,SAAS,YAAY,KAAK;AAC/B,kBAAK,SAAS,YAAY,MAAK,QAAQ;AACvC,qBAAS,KAAK,YAAY,MAAK,QAAQ;AAEvC,kBAAK,mBAAoB,OAAK,cAAc,QAAQ;AAEpD,gBAAE,MAAK,iBAAiB;AACxB,cAAE,OAAK;AACP,cAAE,kBAAgB;AAClB,cAAE,SAAO;AACT,cAAE,SAAO;AACT,cAAE,SAAO;AACT,cAAE,OAAK;AACP,cAAE,MAAI;AACN,cAAE,WAAS;AACX,cAAE,WAAS;AAEX,mBAAK,eAAe,MAAK,kBAAkB,UAAU,MAAK,oBAAoB;AAC9E,mBAAK,eAAe,MAAK,kBAAkB,QAAU,MAAK,UAAU;AAEpE,kBAAK,SAAS,YAAY,MAAK,gBAAgB;AAG/C,gBAAI,MAAI,OAAK,UAAU,IAAI,GAAG,eAAa;AAC3C,gBAAG,OAAO,OAAO,OAAQ,UAAU;AACjC,kBAAG,OAAO,IAAI,eAAgB,YAAY,IAAI,eAAe,SAAS;AACpE,sBAAK,aAAa;;AAClB,kBAAG,OAAO,IAAI,cAAe,UAAU;AACvC,+BAAe,IAAI;;;AAIvB,gBAAI,OAAO,OAAK,cAAc,QAAQ;AACtC,iBAAK,QAAQ;AACb,iBAAK,YAAY;AACjB,kBAAK,iBAAiB,YAAY,IAAI;AACtC,mBAAO;AAGP,kBAAK,cAAc;AAGnB,kBAAK,mBAAkB;UAGzB;AAES,eAAA,uBAAuB,WAAA;AAC9B,kBAAK,mBAAmB,MAAK,WAAW,MAAK,WAAW,MAAK,UAAU;UACzE;AAqBS,eAAA,qBAAqB,WAAA;AAE5B,gBAAG,MAAK,YAAY;AAClB,kBAAG,CAAC,MAAK,aAAa;AACpB,sBAAK,WAAU;;AAIjB,kBAAM,OAAK,MAAK,iBAAiB,qBAAqB,QAAQ;AAC9D,uBAAQ,IAAE,KAAK,QAAQ,IAAE,GAAG,KAAK;AAC/B,sBAAK,iBAAiB,YAAY,KAAK,IAAE,EAAE;;AAI7C,kBAAI,QAAM,YAAU,aAAY;AAEhC,uBAAQ,KAAG,GAAG,KAAG,MAAM,QAAQ,MAAM;AACnC,oBAAI,OAAO,OAAK,cAAc,QAAQ;AACtC,qBAAK,QAAQ,MAAM,IAAI,eAAa,MAAI,MAAM,IAAI;AAClD,qBAAK,YAAY,MAAM,IAAI,KAAK,QAAQ,gBAAe,EAAE;AACzD,oBAAG,MAAM,IAAI,cAAc;AACzB,sBAAI,KAAG,MAAM,IAAI;AAGjB,uBAAK,GAAG,MAAM,GAAG,EAAE;AACnB,sBAAG,MAAM,IAAI,KAAK,OAAO,EAAE,KAAK,IAAI;AAClC,yBAAK,YAAY,KAAG,OAAK,KAAK,YAAU;;;AAI5C,sBAAK,iBAAiB,YAAY,IAAI;AACtC,uBAAO;;;AAGX,kBAAK,aAAa;AAGlB,gBAAM,KAAK,YAAU,iBAAgB,EAAG,MAAM,GAAG;AACjD,gBAAG,GAAG,SAAS,GAAG;AAChB,iBAAG,KAAK;;AAEV,kBAAK,WAAW,GAAG,IAAG,GAAG,EAAE;AAG3B,gBAAG,YAAU,qBAAoB,GAAI;AACnC,oBAAK,cAAa;AAClB,oBAAK,cAAa;;UAEtB;AAWS,eAAA,aAAa,SAAC,KAAa,IAAU;AAC5C,gBAAI,IAAE;AAGN,gBAAG,CAAC,MAAK,aAAa;AACpB;;AAGF,gBAAI,QAAQ;AACZ,gBAAG,MAAM,IAAI;AACX,uBAAS,MAAM;;AAGjB,gBAAG,OAAO,IAAI;AACZ,oBAAK,iBAAiB,gBAAc;mBAC/B;AACL,kBAAM,MAAI,MAAK,iBAAiB,qBAAqB,QAAQ;AAC7D,mBAAI,IAAE,GAAG,IAAE,IAAI,QAAQ,KAAK;AAC1B,oBAAI,IAAE,IAAI,GAAG;AACb,oBAAG,MAAM,IAAI;AACX,sBAAI,EAAE,MAAM,GAAG,EAAE;;AAGnB,oBAAG,KAAK,OAAO;AACb,wBAAK,iBAAiB,gBAAc;AACpC;;;;UAIR;AAQS,eAAA,iBAAiB,SAAC,YAAmB;AAC5C,gBAAI,IAAI,MAAK,QAAQ;AACrB,cAAE,QAAM;AACR,cAAE,SAAO;AACT,cAAE,MAAI;AACN,cAAE,gBAAc;AAChB,cAAE,UAAQ;AACV,cAAE,WAAS;AACX,cAAE,SAAO,aAAa,sBAAsB;AAC5C,cAAE,aAAW,aAAa,YAAY;AACtC,cAAE,UAAU;AACZ,gBAAG,MAAK,aAAa;AACnB,oBAAK,UAAU,MAAM,UAAU;;UAEnC;AA+ES,eAAA,qBAAqB,SAAC,GAAa;AAC1C,gBAAG,YAAU,cAAc;AACzB,0BAAU,aAAa,CAAC;;UAE5B;AAQS,eAAA,qBAAqB,SAAC,GAAa;AAC1C,gBAAG,YAAU,cAAc;AACzB,0BAAU,aAAa,CAAC;;UAE5B;AAQS,eAAA,oBAAoB,SAAC,GAAa;AACzC,gBAAG,YAAU,cAAc;AACzB,0BAAU,aAAa,CAAC;;UAE5B;AAQS,eAAA,uBAAuB,SAAC,GAAC;AAChC,wBAAU,aAAa,IAAI;AAE3B,gBAAG,MAAK,iBAAiB,SAAS,KAAK;AACrC,kBAAI,IAAE,MAAK,iBAAiB;AAC5B,kBAAI,IAAE,MAAK,iBAAiB,QAAQ,GAAG,MAAM,MAAM,GAAG;AACtD,0BAAU,kBAAkB,EAAE,IAAG,EAAE,EAAE;mBAChC;AACL,0BAAU,kBAAkB,EAAE;;AAIhC,wBAAU,uBAAsB;AAChC,wBAAU,aAAa,KAAK;AAC5B,kBAAK,YAAY;UACnB;AAQS,eAAA,aAAa,SAAC,GAAC;AACtB,gBAAG,CAAC,MAAK,WAAW;AAClB,0BAAU,uBAAsB;;AAElC,kBAAK,YAAY;UACnB;AASS,eAAA,gBAAgB,SAAC,IAAa,IAAW;AAChD,gBAAG,CAAC,MAAK;AAAa;AAEtB,gBAAI,KAAK,MAAK,SAAS;AAEvB,gBAAG,MAAQ,IAAI;AACb,iBAAG,OAAO,KAAK;AACf,iBAAG,MAAM,KAAK;;AAEhB,eAAG,UAAU;AAEb,kBAAK,QAAQ,MAAM,OAAO,MAAK,iBAAiB,cAAc,KAAK;AAGnE,kBAAK,aAAY;AAGjB,kBAAK,WAAW,YAAU,kBAAiB,GAAI,YAAU,kBAAiB,CAAE;UAC9E;AAOS,eAAA,gBAAgB,WAAA;AACvB,gBAAG,CAAC,MAAK,aAAa;AACpB;;AAGF,kBAAK,SAAS,MAAM,UAAU;UAChC;AAOS,eAAA,eAAe,WAAA;AACtB,gBAAG,MAAK,aAAa,MAAM;AACzB,kBAAG,YAAU,MAAK,KAAO,MAAK,iBAAiB,iBAAe,GAAI;AAChE,sBAAK,UAAU,MAAM,UAAU;AAC/B,sBAAK,SAAS,MAAM,QAAQ,MAAK,iBAAiB,cAAY,KAAG;qBAC5D;AACL,sBAAK,UAAU,MAAM,UAAU;AAC/B,oBAAI,MAAM,YAAU;AACpB,oBAAG,KAAK;AACN,wBAAK,eAAe,IAAI,UAAS,CAAE;uBAC9B;AACL,wBAAK,eAAe,KAAK;;AAE3B,sBAAK,SAAS,MAAM,QAAQ,MAAK,iBAAiB,cAAY,KAAG;;;UAGvE;AASS,eAAA,UAAU,SAAC,GAAC;AACnB,gBAAG,MAAK,SAAS,MAAM,WAAU,SAAS;AACxC,kBAAI,OAAO,YAAU,qBAAoB;AACzC,kBAAG,MAAK,YAAY;AAClB,sBAAK,cAAc,OAAK,aAAa,IAAI,IAAI,KAAK,cAAc,GAAG,OAAK,aAAa,IAAI,IAAI,CAAC;qBACzF;AACL,sBAAK,cAAc,OAAK,aAAa,IAAI,IAAI,GAAG,OAAK,aAAa,IAAI,IAAI,KAAK,eAAe,CAAC;;;AAGnG,mBAAO;UACT;QACF;AAhWE,QAAAA,SAAA,UAAA,WAAA,WAAA;AACE,cAAI,OAAO,KAAK;AAChB,cAAG,MAAM;AACP,iBAAK,WAAW,YAAY,IAAI;;AAGlC,eAAK,qBAAoB;AAEzB,cAAG,OAAO,qBAAqB;AAC7B,mBAAO,oBAAoB,UAAU,KAAK,SAAS,KAAK;;QAE5D;AAyHA,QAAAA,SAAA,UAAA,iBAAA,WAAA;AAAA,cAAA,QAAA;AAOE,sBAAU,iBAAiB,sBAAsB,SAAC,GAAC;AACjD,kBAAK,aAAa;AAClB,gBAAG,MAAK,aAAa;AACnB,2BAAa,MAAK,WAAW;;AAE/B,kBAAK,cAAc,OAAO,WAAW,MAAK,oBAAoB,GAAG;UACnE,CAAC;AAUD,sBAAU,iBAAiB,kBAAkB,SAAC,GAAC;AAC7C,gBAAM,KAAK,YAAU,iBAAgB,EAAG,MAAM,GAAG;AACjD,gBAAG,GAAG,SAAS,GAAG;AAChB,oBAAK,WAAW,GAAG,IAAG,GAAG,EAAE;;UAE/B,CAAC;AAOD,sBAAU,iBAAiB,kBAAkB,SAAC,GAAC;AAE7C,kBAAK,WAAW,EAAE,cAAc,EAAE,YAAY;AAG9C,kBAAK,aAAY;UACnB,CAAC;AAED,cAAI,MAAM,YAAU;AACpB,cAAG,CAAC,KAAK;AACP;;AAMF,cAAI,iBAAiB,QAAQ,SAAC,aAAW;AACvC,kBAAK,aAAY;AACjB,mBAAO;UACT,CAAC;AAMD,cAAI,iBAAiB,QAAQ,SAAC,cAAY;AACxC,gBAAG,MAAK,aAAa;AACnB,oBAAK,eAAe,KAAK;;UAE7B,CAAC;QACH;AA2JF,eAAAA;MAAA,EApgBA;AAsgBM,aAAG,YAAU,KAAK,IAAI,QAAO;AAGnC,kBAAU,iBAAiB,kBAAkB,SAAC,QAAM;AAElD,YAAG,OAAO,iBAAiB,QAAQ,OAAO,cAAc,mBAAmB;AAGzE,cAAG,KAAG,YAAY;AAChB,iBAAG,cAAc,OAAK,aAAa,OAAO,MAAM,IAAI,OAAO,OAAO,cAAc,GAAG,OAAK,aAAa,OAAO,MAAM,IAAI,CAAC;iBAClH;AACL,iBAAG,cAAc,OAAK,aAAa,OAAO,MAAM,GAAG,OAAK,aAAa,OAAO,MAAM,IAC9E,SAAS,OAAK,cAAc,KAAG,UAAS,QAAQ,GAAE,EAAE,IAAI,CAAC;;;AAGjE,eAAO;MACT,CAAC;AAED,kBAAU,iBAAiB,kBAAkB,SAAC,QAAM;AAClD,YAAG,CAAC,OAAO,OAAO;AAChB,iBAAO;;AAGT,YAAG,CAAC,OAAO,cAAc;AACvB,eAAG,cAAa;;AAGlB,eAAO;MACT,CAAC;AAED,UAAG,OAAO,kBAAkB;AAC1B,eAAO,iBAAiB,UAAU,KAAG,SAAS,KAAK;;AAIrD,WAAG,WAAU;aAKP,KAAN;IAAU;;AAxjBJ;AACA;AAEF;AAOJ;AAsgBM;",
  "names": [
    "UIFloat"
  ]
}